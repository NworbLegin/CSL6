<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>LL_FILENAME</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_r_a_m___service_8cpp.html</Path>
    <Anchor>a0d177283e253567ff641acfea59d3328</Anchor>
    <DeclaredIn>CRAM_Service.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SS_FILENAME</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_r_a_m___service_8cpp.html</Path>
    <Anchor>af7ff91859dee86bd8ef63db1aafcca31</Anchor>
    <DeclaredIn>CRAM_Service.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fm_bells</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_r_a_m___service_8cpp.html</Path>
    <Anchor>acefd6cd0a90bfc471817a81b3ff2de27</Anchor>
    <DeclaredIn>CRAM_Service.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swept_noise</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_r_a_m___service_8cpp.html</Path>
    <Anchor>aa59d004214709b52be831eb8e4d25950</Anchor>
    <DeclaredIn>CRAM_Service.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>phonemes</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_r_a_m___service_8cpp.html</Path>
    <Anchor>a0f5838571d3ab93e4d0f51db11e06c66</Anchor>
    <DeclaredIn>CRAM_Service.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mixer</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_r_a_m___service_8cpp.html</Path>
    <Anchor>acb51aa4ddc81e978fb1c5ac7829fe8ec</Anchor>
    <DeclaredIn>CRAM_Service.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>main</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_r_a_m___service_8cpp.html</Path>
    <Anchor>a0ddf1224851353fc92bfbff6f499fa97</Anchor>
    <DeclaredIn>CRAM_Service.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load_cues</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_r_a_m___service_8cpp.html</Path>
    <Anchor>a5cd448d854fe7d892686999a24ab0af6</Anchor>
    <DeclaredIn>CRAM_Service.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gIO</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_r_a_m___service_8cpp.html</Path>
    <Anchor>a7423eadee72b66cc0a6c9cc91ee435b6</Anchor>
    <DeclaredIn>CRAM_Service.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hosts</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_r_a_m___service_8cpp.html</Path>
    <Anchor>a62aa87c0213693e4f0f75c2150d3ef6a</Anchor>
    <DeclaredIn>CRAM_Service.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ports</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_r_a_m___service_8cpp.html</Path>
    <Anchor>a63ebed0d0ccbf7d747b354124fc123b6</Anchor>
    <DeclaredIn>CRAM_Service.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_r_a_m___service_8cpp.html</Path>
    <Anchor>adde079b9e48b31cdab25a5b58b225c8a</Anchor>
    <DeclaredIn>CRAM_Service.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gSpeakers</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_r_a_m___service_8cpp.html</Path>
    <Anchor>a761198e30bbac72506df6f8dc3e99358</Anchor>
    <DeclaredIn>CRAM_Service.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gSndFile</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_r_a_m___service_8cpp.html</Path>
    <Anchor>ac46a6b6ea78cffaab4e54e54f792f26d</Anchor>
    <DeclaredIn>CRAM_Service.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CFTTYPE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_includes_2fft___n_8h.html</Path>
    <Anchor>ae53559c79974ebdc6a250e46ea5814c8</Anchor>
    <DeclaredIn>fft_N.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_setup</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_includes_2fft___n_8h.html</Path>
    <Anchor>a4f4e65ae57f47a5c8026f8be6a542fc5</Anchor>
    <DeclaredIn>fft_N.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_transform</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_includes_2fft___n_8h.html</Path>
    <Anchor>a389b5e345c26f621a663c5b4fa891b1e</Anchor>
    <DeclaredIn>fft_N.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_inverseTransform</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_includes_2fft___n_8h.html</Path>
    <Anchor>a3284f60997c19cf6c80b0c0f0d9986cd</Anchor>
    <DeclaredIn>fft_N.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_transformRadix2</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_includes_2fft___n_8h.html</Path>
    <Anchor>add7c020d060470fb5b51bd19b1c41d7f</Anchor>
    <DeclaredIn>fft_N.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_transformBluestein</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_includes_2fft___n_8h.html</Path>
    <Anchor>aa5fb7c097b8b55f52f0fade8072d8202</Anchor>
    <DeclaredIn>fft_N.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_convolveReal</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_includes_2fft___n_8h.html</Path>
    <Anchor>ad859e629f5461e7ee76c8f1786ed2947</Anchor>
    <DeclaredIn>fft_N.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_convolveComplex</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_includes_2fft___n_8h.html</Path>
    <Anchor>ab6157afe1d6b1946eebbea948f0adf9a</Anchor>
    <DeclaredIn>fft_N.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CFTTYPE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_utilities_2fft___n_8h.html</Path>
    <Anchor>ae53559c79974ebdc6a250e46ea5814c8</Anchor>
    <DeclaredIn>fft_N.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_setup</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_utilities_2fft___n_8h.html</Path>
    <Anchor>a4f4e65ae57f47a5c8026f8be6a542fc5</Anchor>
    <DeclaredIn>fft_N.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_transform</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_utilities_2fft___n_8h.html</Path>
    <Anchor>a389b5e345c26f621a663c5b4fa891b1e</Anchor>
    <DeclaredIn>fft_N.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_inverseTransform</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_utilities_2fft___n_8h.html</Path>
    <Anchor>a3284f60997c19cf6c80b0c0f0d9986cd</Anchor>
    <DeclaredIn>fft_N.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_transformRadix2</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_utilities_2fft___n_8h.html</Path>
    <Anchor>add7c020d060470fb5b51bd19b1c41d7f</Anchor>
    <DeclaredIn>fft_N.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_transformBluestein</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_utilities_2fft___n_8h.html</Path>
    <Anchor>aa5fb7c097b8b55f52f0fade8072d8202</Anchor>
    <DeclaredIn>fft_N.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_convolveReal</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_utilities_2fft___n_8h.html</Path>
    <Anchor>ad859e629f5461e7ee76c8f1786ed2947</Anchor>
    <DeclaredIn>fft_N.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_convolveComplex</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_utilities_2fft___n_8h.html</Path>
    <Anchor>ab6157afe1d6b1946eebbea948f0adf9a</Anchor>
    <DeclaredIn>fft_N.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__GXX_WEAK__</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_includes_2matrix_8h.html</Path>
    <Anchor>afb5a2a4891df4551832357e97c6c3c59</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__DEPRECATED</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_includes_2matrix_8h.html</Path>
    <Anchor>aa806e8f7ce2a8db3bf676735fca2ac51</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__GNUG__</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_includes_2matrix_8h.html</Path>
    <Anchor>ae7afb460abc6122c6a5f206d78bcae4e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__EXCEPTIONS</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_includes_2matrix_8h.html</Path>
    <Anchor>a260281f3f3cd1c287fce0d5bb737febb</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__private_extern__</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_includes_2matrix_8h.html</Path>
    <Anchor>ae27da90a1a3c8965d55c1540237f7914</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_NO_THROW</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_includes_2matrix_8h.html</Path>
    <Anchor>aaf52566fbd17b539c80f82d9d0788d24</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_THROW_MATRIX_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_includes_2matrix_8h.html</Path>
    <Anchor>a76af70ab36f049b2ad2f2d02293de343</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_includes_2matrix_8h.html</Path>
    <Anchor>affe776513b24d84b39af8ab0930fef7f</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_includes_2matrix_8h.html</Path>
    <Anchor>ac6afabdc09a49a433ee19d8a9486056d</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FRIEND_FUN_TEMPLATE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_includes_2matrix_8h.html</Path>
    <Anchor>a5a85b572d64a5058a36564909581bc71</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REPORT_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_includes_2matrix_8h.html</Path>
    <Anchor>a76162b2cdbe9b6281145abc521d57398</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAT_TEMPLATE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_includes_2matrix_8h.html</Path>
    <Anchor>a4079e6708016940e6cdb4d0f0624470f</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrixT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_includes_2matrix_8h.html</Path>
    <Anchor>a54c7c86b72bdba7ff61495cd5d3cb20e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a88fd01d5d9c91ebd98930597d3734727</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a5d484978c75781254aa6c410861a52cc</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>ae994d07056ce3ca2b2cc29013874f2e7</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a137076e8b66125563d0ad02fc3314ff9</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>aae56f5c1beded36563edb34a78b71114</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>ac3df23b48b06feedcadd0abd993a435e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a5edc8142a584b0e677957a7b8aca1e98</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>acb313e55e97969dc2cc33ac014e49e74</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a11a3d0f8b613cb75119c13c5111685e5</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a64239c10861ecfa86877b755fbad2786</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a6042519809745b5432a3bb5385796f5e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a337379660a572f9ba171ab9f93c9d6bc</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator^</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>acd8cef2c31fb279b32a53ac5bb3eb0b6</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator~</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a55be57057b1bb840b952d9bdfbde799b</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a374fe720912538ebb4e51dedf333db09</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__GXX_WEAK__</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_spatializers_2matrix_8h.html</Path>
    <Anchor>afb5a2a4891df4551832357e97c6c3c59</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__DEPRECATED</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_spatializers_2matrix_8h.html</Path>
    <Anchor>aa806e8f7ce2a8db3bf676735fca2ac51</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__GNUG__</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_spatializers_2matrix_8h.html</Path>
    <Anchor>ae7afb460abc6122c6a5f206d78bcae4e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__EXCEPTIONS</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_spatializers_2matrix_8h.html</Path>
    <Anchor>a260281f3f3cd1c287fce0d5bb737febb</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__private_extern__</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_spatializers_2matrix_8h.html</Path>
    <Anchor>ae27da90a1a3c8965d55c1540237f7914</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_NO_THROW</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_spatializers_2matrix_8h.html</Path>
    <Anchor>aaf52566fbd17b539c80f82d9d0788d24</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_THROW_MATRIX_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_spatializers_2matrix_8h.html</Path>
    <Anchor>a76af70ab36f049b2ad2f2d02293de343</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_spatializers_2matrix_8h.html</Path>
    <Anchor>affe776513b24d84b39af8ab0930fef7f</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_spatializers_2matrix_8h.html</Path>
    <Anchor>ac6afabdc09a49a433ee19d8a9486056d</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FRIEND_FUN_TEMPLATE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_spatializers_2matrix_8h.html</Path>
    <Anchor>a5a85b572d64a5058a36564909581bc71</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REPORT_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_spatializers_2matrix_8h.html</Path>
    <Anchor>a76162b2cdbe9b6281145abc521d57398</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAT_TEMPLATE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_spatializers_2matrix_8h.html</Path>
    <Anchor>a4079e6708016940e6cdb4d0f0624470f</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrixT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_spatializers_2matrix_8h.html</Path>
    <Anchor>a54c7c86b72bdba7ff61495cd5d3cb20e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a88fd01d5d9c91ebd98930597d3734727</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a5d484978c75781254aa6c410861a52cc</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>ae994d07056ce3ca2b2cc29013874f2e7</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a137076e8b66125563d0ad02fc3314ff9</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>aae56f5c1beded36563edb34a78b71114</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>ac3df23b48b06feedcadd0abd993a435e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a5edc8142a584b0e677957a7b8aca1e98</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>acb313e55e97969dc2cc33ac014e49e74</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a11a3d0f8b613cb75119c13c5111685e5</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a64239c10861ecfa86877b755fbad2786</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a6042519809745b5432a3bb5385796f5e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a337379660a572f9ba171ab9f93c9d6bc</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator^</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>acd8cef2c31fb279b32a53ac5bb3eb0b6</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator~</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a55be57057b1bb840b952d9bdfbde799b</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a374fe720912538ebb4e51dedf333db09</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_INT_TYPE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_accessor_8h.html</Path>
    <Anchor>a5bbaaea53d5f7cb3811f16174bee6190</Anchor>
    <Abstract>Accessor.h – &quot;Reflective&quot; parameter name/setter/type acessor object. See the copyright notice and ac...</Abstract>
    <DeclaredIn>Accessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_FLOAT_TYPE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_accessor_8h.html</Path>
    <Anchor>a73fa70fa02bcf14b2fd9ccb2f4ebf5cd</Anchor>
    <DeclaredIn>Accessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_STRING_TYPE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_accessor_8h.html</Path>
    <Anchor>a2960e3ba332fc78a1887b6be8946bb15</Anchor>
    <DeclaredIn>Accessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AccessorVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a734ef5998654afa826d6a009d19a59c1</Anchor>
    <Abstract>Typedef for AccessorVector object. </Abstract>
    <DeclaredIn>Accessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BASE_FREQ</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_basic_f_m_instrument_8cpp.html</Path>
    <Anchor>a25cc638ebb9c29f5ea0a545454c50d31</Anchor>
    <DeclaredIn>BasicFMInstrument.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_duration_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a9af6ddf6200bac163bbd55d7d3d9ec5d</Anchor>
    <Abstract>Instrument.h – The CSL pluggable instrument class. See the copyright notice and acknowledgment of au...</Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_amplitude_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a8d5c69fb3007559c2e0663154d6db484</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_frequency_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a6092dc08b2e0b796871ac20509736eb9</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_position_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a738f46f76ea6ac19e8659f761e2d15a1</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_position_p</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>aab60240c710296efd081233d5b8e49eb</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_attack_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a0b7495e73836f1126a7787f98c098080</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_decay_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a43fc7a50831a58957138fffd186f113b</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_sustain_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>ad8a9974745a4ce6a977ec847d9ec7d3d</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_release_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>aac498d41577046782a111acbeafeb641</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_iattack_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>aba267e377670578341ee948cc8d01465</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_idecay_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a01110cd5b1001526071b3f4fe9c20174</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_isustain_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a56b656d07971814e8d91b5d950dbc5ac</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_irelease_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a63d4f34b52d5d9a45b16040c848077df</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_index_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a601218b78720415fcb9963b5dda29533</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_c_freq_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a2d12be4b64f898b29e32a28c38320d33</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_m_freq_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a52a255dde531ce58c9ef61d275f662b5</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_vib_depth_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>aa6079444d7e0404289b7269ee7404c5f</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_chiff_amt_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a6362e14756419e2558b1d0e0b6b4f24b</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_chiff_time_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a29b95f293e585d1da3501a2801b833b1</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_rate_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a0021c75c57526103ebe512ea221638af</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_file_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>ac34cd1975573051e4d2ba5121794e488</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_start_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>ada86743d4f850993252786a94366ac5c</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_stop_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a9a02fc1c6f86591ef886d6f30bf4959b</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_partial_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>a707a975df702c69494b62270561abbff</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_partials_f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_instrument_8h.html</Path>
    <Anchor>aa8c17ed88d9a49b654a0952169ffca5a</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RenderCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_a_i_o_8cpp.html</Path>
    <Anchor>a06b70480008c88566624680ee58e57c9</Anchor>
    <DeclaredIn>CAIO.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gIODevices</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_a_i_o_8cpp.html</Path>
    <Anchor>aff1ac57c0322123d7fbf7f9c65d30af0</Anchor>
    <DeclaredIn>CAIO.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHECK_SAMP</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>iphone_i_o_8cpp.html</Path>
    <Anchor>a0c8c29baaf0c1da9c82e9458af0e62c3</Anchor>
    <DeclaredIn>iphoneIO.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RenderCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>iphone_i_o_8cpp.html</Path>
    <Anchor>a32b01e334e5edbe434b7379cc3d0f40d</Anchor>
    <DeclaredIn>iphoneIO.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gIODevices</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>iphone_i_o_8cpp.html</Path>
    <Anchor>aff1ac57c0322123d7fbf7f9c65d30af0</Anchor>
    <DeclaredIn>iphoneIO.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>JackCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_jack_i_o_8cpp.html</Path>
    <Anchor>a0469022ae64b75492fca0e447163770e</Anchor>
    <DeclaredIn>JackIO.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>jack_shutdown</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_jack_i_o_8cpp.html</Path>
    <Anchor>ac4d1f0b712a872cb5c24c5c3f8d00bd5</Anchor>
    <DeclaredIn>JackIO.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCOPY_MSG</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_m_i_d_i_i_o_j_8cpp.html</Path>
    <Anchor>a1286ee63f4fa19da88f9528429f6a765</Anchor>
    <DeclaredIn>MIDIIOJ.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gAudioDeviceManager</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_m_i_d_i_i_o_j_8cpp.html</Path>
    <Anchor>aa234e60809560475361878578c96e6eb</Anchor>
    <DeclaredIn>MIDIIOJ.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MessageChannelToStatus</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_m_i_d_i_i_o_j_8h.html</Path>
    <Anchor>a09c063f76842b6d0afe2efc38a9e6419</Anchor>
    <Abstract>Message_ChannelToStatus – converts from message and channel to status byte. </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OUTPUT_BUFFER_SIZE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_m_i_d_i_i_o_p_8h.html</Path>
    <Anchor>a29a61474854edfeed19457644161249f</Anchor>
    <Abstract>MIDIIO.h – MIDI IO using PortMIDI. </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DRIVER_INFO</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_m_i_d_i_i_o_p_8h.html</Path>
    <Anchor>a1570fe90226fc68d1ade00a6c9e4b488</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIME_PROC</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_m_i_d_i_i_o_p_8h.html</Path>
    <Anchor>a4460e8d4c983fc90645b607d0afd22f6</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIME_INFO</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_m_i_d_i_i_o_p_8h.html</Path>
    <Anchor>ae655527dbf5a174e53f96a206729c208</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIME_START</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_m_i_d_i_i_o_p_8h.html</Path>
    <Anchor>a478746a56a0f0a831302083552ba2062</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MIDI_THRU</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_m_i_d_i_i_o_p_8h.html</Path>
    <Anchor>a6ce86ae1e6c00de7a80c3a74be8cc08a</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy_CSL_MIDIMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>abea5ad4204ba302b456e4e23fb7cb5e0</Anchor>
    <Abstract>copy_CSL_MIDIMessage – copies CSL_MIDIMessage </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_MIDIMessageToPmEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>abb40606ce15868fb182b53ccb61574cd</Anchor>
    <Abstract>CSL_MIDIMessageToPmEvent – converts CSL_MIDIMessage to PmEvent. </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PmEventToCSL_MIDIMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a50169416ae8c22af2ee26f43b0adac94</Anchor>
    <Abstract>PmEventToCSL_MIDIMessage – converts PmEvent to CSL_MIDIMessage. </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Message_ChannelToStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a9566760d3ab76504407536ca36b01e58</Anchor>
    <Abstract>Message_ChannelToStatus – converts from message and channel to status byte. </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAX_ACCESSORS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>ad24ee7554095dee06b825599ad056d26</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOSCMethod</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>ac54ffc3ea00d56cbe7d710d02a899310</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>error</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>a055a6ba75f8e5b442ae70a56e2f85bf6</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generic_handler</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>a28090c190aee596015792c21f37ba391</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>foo_handler</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>a6fe6f91cd9829878f593721b009e68ee</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quit_handler</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>a06b194db3598165bd41833441f8715d2</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initOSCReceive</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>acbbc7f75106b9e8381e6aac8cff40681</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initOSCAddrSpace</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>abdefd2cbf47b8b611b81bb9abb729506</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupOSCInstrLibrary</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>a1a780df13ed281d3710804042d7bc349</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOSCMethod2</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>ab36fd7f56e91f5b54063637f3f4ec8c8</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lo_server_thread_add_method</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>ad6d60297bd3dc51f68bcd359222b42bc</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mainOSCLoop</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>afd6f2f69be302d5fb7a885a3f06c6292</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quitCSL</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>aa18e37bd26106ed543557078390cda6a</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>floatParamSetter</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>a80f9b72142abf8a53e5fefdd1c5c6e29</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intParamSetter</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>a0958556627ae7ad851d31162df519fbb</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stringParamSetter</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>a394077546984ece7eb8a9cb60fd89f8a</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playNote</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>a68f57a3f59544ce4e2c22cdd4fb53864</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playWithArgs</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>adeb5628e92b49afab923f8552b0f4ccc</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOSCMethod</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>a06f8420999461104041e53c0b9d252df</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOSCMethod2</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>a356dc6c4214e817cf252d1a56827c0b8</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>done</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>a5992b274cfdcacdbc1fa8347fd01ebde</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sSrvThrd</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_tests_2_o_s_c_2_o_s_c__support_8cpp.html</Path>
    <Anchor>a958dfb16d456cfa758a4495a78a8b58d</Anchor>
    <DeclaredIn>OSC_support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pa_callback</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_p_a_i_o_8cpp.html</Path>
    <Anchor>a4b6b2e5825f282b91b424145af315a44</Anchor>
    <DeclaredIn>PAIO.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>THE_IO</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_remote_i_o_8cpp.html</Path>
    <Anchor>a7c65e48d34ee8c9e9910f6b41531beb6</Anchor>
    <DeclaredIn>RemoteIO.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteIO_read_loop</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_remote_i_o_8cpp.html</Path>
    <Anchor>adb5626948169e0439ad458f7944f3beb</Anchor>
    <DeclaredIn>RemoteIO.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteIO_read_loop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ae995dafbe6c68682527ecf0711e46ebd</Anchor>
    <DeclaredIn>RemoteIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RS_Read_Loop</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_remote_stream_8cpp.html</Path>
    <Anchor>a61a81c77d070d73421b1db4e63f183e7</Anchor>
    <DeclaredIn>RemoteStream.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_CreateThread</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_remote_stream_8cpp.html</Path>
    <Anchor>a80d65864b33474390de518899f2e15b6</Anchor>
    <DeclaredIn>RemoteStream.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closesocket</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_remote_stream_8h.html</Path>
    <Anchor>aa14fa587d16f7b336fc999be98588f04</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RS_PACKET_MAGIC</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_remote_stream_8h.html</Path>
    <Anchor>a9eaac61c93e9c5a876215f6c982f12c1</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RS_PACKET_SIZE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_remote_stream_8h.html</Path>
    <Anchor>a1df310f948e987de66d9fd1d6f792c55</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RS_BUFFER_SIZE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_remote_stream_8h.html</Path>
    <Anchor>a1af8d35884c783d9a58b3539f6e50ccc</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RS_RESPONSE_PACKET_SIZE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_remote_stream_8h.html</Path>
    <Anchor>a680b9f9171430a2aa45e197ac4d18117</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_DEFAULT_REQUEST_PORT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_remote_stream_8h.html</Path>
    <Anchor>a82bc3a2c5ee745de93852af9b998b022</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_CMD_SET_CLIENT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_remote_stream_8h.html</Path>
    <Anchor>a5c90ca65f93dc59eef8693a189112ae0</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_CMD_NEXT_BUFFER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_remote_stream_8h.html</Path>
    <Anchor>a1beedc681cdd40066e3394b659b92664</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_CMD_STOP</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_remote_stream_8h.html</Path>
    <Anchor>a9d642be781b9e700b6b52d95ffc24ae8</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>THREAD_START_ROUTINE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a49b3f7e5149273a7a82e06695809c9d1</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RS_read_loop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a7389a0812ba23655b413c475c020f37d</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_CreateThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac1db4c6c8383e3b7137972cc94b77c7e</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gSndFileExts</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_sound_file_8cpp.html</Path>
    <Anchor>aac07c1050616b402c0bfe0f93fd28e18</Anchor>
    <Abstract>Sound file name extensions we recognize - ToDo: should this be in a config file? </Abstract>
    <DeclaredIn>SoundFile.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kSoundFileRead</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_sound_file_8h.html</Path>
    <Anchor>ae5b703425101be375c8cfb4e8e66d312</Anchor>
    <Abstract>Sound file constants. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kSoundFileWrite</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_sound_file_8h.html</Path>
    <Anchor>a42adc602d9c6bcc806c278407e0714e2</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kSoundFileReadWrite</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_sound_file_8h.html</Path>
    <Anchor>aa6620551f68c7ee53d37431152dbb501</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kSoundFileFormatWAV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_sound_file_8h.html</Path>
    <Anchor>ae7c06dae59fb80995fe10d2da6dcfef8</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kSoundFileFormatAIFF</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_sound_file_8h.html</Path>
    <Anchor>adc78c02d6bf803353458046fbe0d119f</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kSoundFileFormatSND</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_sound_file_8h.html</Path>
    <Anchor>a83be1484173db5c2682a0027c8c3c78c</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kSoundFileFormatEBICSF</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_sound_file_8h.html</Path>
    <Anchor>af388bf51b2a71e19a987d3b3efa6ccdf</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kSoundFileFormatRaw</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_sound_file_8h.html</Path>
    <Anchor>a2d88cb1e5b7d9c0d4a9a5a57b713965a</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kSoundFileFormatOther</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_sound_file_8h.html</Path>
    <Anchor>a01690ec9c6cfefe80529014d5365d138</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SoundFileMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a4ade6957da2b012211453bd36eecf3e2</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SoundFileFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a2022a31a2ae858ba627d79ee25c8355d</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONVERT_16_BIT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_sound_file_c_a_8cpp.html</Path>
    <Anchor>a05362f3add64a4c08e218b77bf6caedf</Anchor>
    <DeclaredIn>SoundFileCA.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONVERT_24_BIT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_sound_file_c_a_8cpp.html</Path>
    <Anchor>a80f70df8629a3b0e87c5ba4120e60a8c</Anchor>
    <DeclaredIn>SoundFileCA.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>int8</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>_sound_file_c_a_8cpp.html</Path>
    <Anchor>a1b956fe1df85f3c132b21edb4e116458</Anchor>
    <DeclaredIn>SoundFileCA.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uint8</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>_sound_file_c_a_8cpp.html</Path>
    <Anchor>adde6aaee8457bee49c2a92621fe22b79</Anchor>
    <DeclaredIn>SoundFileCA.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>int16</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>_sound_file_c_a_8cpp.html</Path>
    <Anchor>a259fa4834387bd68627ddf37bb3ebdb9</Anchor>
    <DeclaredIn>SoundFileCA.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uint16</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>_sound_file_c_a_8cpp.html</Path>
    <Anchor>a05f6b0ae8f6a6e135b0e290c25fe0e4e</Anchor>
    <DeclaredIn>SoundFileCA.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>int32</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>_sound_file_c_a_8cpp.html</Path>
    <Anchor>a43d43196463bde49cb067f5c20ab8481</Anchor>
    <DeclaredIn>SoundFileCA.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uint32</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>_sound_file_c_a_8cpp.html</Path>
    <Anchor>a1134b580f8da4de94ca6b1de4d37975e</Anchor>
    <DeclaredIn>SoundFileCA.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createEffectInstance</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_v_s_t_i_o_8cpp.html</Path>
    <Anchor>ac51188693176eb5278d43cca37616633</Anchor>
    <DeclaredIn>VSTIO.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cheapPrintf</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>a9d83583e09528d80856fd56a40282ab2</Anchor>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SWALLOW_CR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>ae5a635b03ab1c4c14a22cb0005370c51</Anchor>
    <Abstract>Logging code: if verbosity. </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIMER_INTERVAL</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>a2e2bf358c53c278fdff9b5bfba4efd66</Anchor>
    <Abstract>Global Sleep functions that work for windows and mac/unix. Note the use of the global flag gStopNow...</Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFileName</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>a10a56c571637951c978c6725c8acbbc3</Anchor>
    <Abstract>read/write the init file (typ. ~/.cslrc) The reader takes a char key, as in string initMsg(CGestalt::...</Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInChannels</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>a22de467cbe5c4aa7c6ceda1d61d9369f</Anchor>
    <Abstract>The actual start-up values are defined in CSL_Types.h. </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutChannels</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>afa73767d4305689d41adfab852ba915f</Anchor>
    <Abstract>stereo outputs </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>a7e674ff8cf38619d58d67c5a6fc220fa</Anchor>
    <Abstract>default sample rate (tested up to 96000) </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRateF</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>a7136e73bd781dde0a59b631cf0fe3e73</Anchor>
    <Abstract>default sample rate (tested up to 96000) </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFramePeriod</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>a0b36e98463b3963f55eac34f39626f1a</Anchor>
    <Abstract>1 / default sample rate </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBlockSize</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>a2434ba9d0bcff93bdde2455d3c2218ec</Anchor>
    <Abstract>typical block size (can be as small as 128 in real usage) </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMaxBufferFrames</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>ad07a9413b4b1e8f5f50217a576bb8942</Anchor>
    <Abstract>max block size (set large for zooming scopes) </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSndFileFrames</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>a62df629b66c2d004ac4b455cd6a95e0e</Anchor>
    <Abstract>max block size (set large for zooming scopes) </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMaxSndFileFrames</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>aa19e62956b7b854c0b41862fbd0905f1</Anchor>
    <Abstract>max block size (set large for zooming scopes) </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVerbosity</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>a98ad2f73e57954368cea6466d0317873</Anchor>
    <Abstract>very verbose </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLoggingPeriod</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>a66f17dbb1cc7a89be03ce3b6a302668a</Anchor>
    <Abstract>log CPU every 15 sec </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutPort</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>af6244d2da4c9560dd2eff1ba78a86b97</Anchor>
    <Abstract>RFS output port. </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDataFolder</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>a3481256a95317cff7420b20e84876a71</Anchor>
    <Abstract>User&amp;#39;s CSL data folder () </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStopNow</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>a2e7218f16b27e7cbebff97be7bb97c11</Anchor>
    <Abstract>flag to stop threads and timers </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sScreenWidth</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>a4f67483b75a71801732de3a642af3b4a</Anchor>
    <Abstract>screen width is global (so you can reference it without including this file) </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sScreenHeight</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8cpp.html</Path>
    <Anchor>a0c71c9490a1c058a73fb2c5c70fc0c82</Anchor>
    <Abstract>screen height is global </Abstract>
    <DeclaredIn>CGestalt.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SAFE_MALLOC</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8h.html</Path>
    <Anchor>a6580b20db89e43c9166920172e3ed751</Anchor>
    <Abstract>Useful Macros. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SAFE_MATMALLOC</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8h.html</Path>
    <Anchor>aa96126dfeeeb826c991dd943366a977a</Anchor>
    <Abstract>Matrix allocate SAFE_MATMALLOC(mRealSpectrum, FloatArray, mNumFrames, float, mWinSize); SAFE_MATMALLO...</Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SAFE_STRUCTMALLOC</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8h.html</Path>
    <Anchor>ad4e1053040763677aa04acce147c07b6</Anchor>
    <Abstract>Structure allocate SAFE_STRUCTMALLOC(mRealSpectrum, FloatArray, mNumFrames, float);. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SAFE_FREE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8h.html</Path>
    <Anchor>a5778427dcd0b3f99b0fc0be7018ec96c</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SAFE_MATFREE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8h.html</Path>
    <Anchor>af906b5f6c966b7fdb09aa750b5b3394e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>C_TIME</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_gestalt_8h.html</Path>
    <Anchor>ac1ab42a1d1262555a6137035e4c8d9c6</Anchor>
    <Abstract>Which kind of accurate timer to use? </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObserverVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a87b5f869d6b5e64cd1c76b75176a7a98</Anchor>
    <Abstract>Forward declaration. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a7ef740bb89a5ccd885a745334c83e36d</Anchor>
    <Abstract>These are the public logging messages. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>af9c507f5ab0614ab64a6cc8b359eae78</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsgNN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>aa883e3cb5d0f8cb16faf749178a3bbc7</Anchor>
    <Abstract>no-newline versions </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsgNN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a6c2ba7090e1dac5013c5ba575ce15cee</Anchor>
    <Abstract>Log the file &amp; line #. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a031fdc35f171374eff3dd06a990804f7</Anchor>
    <Abstract>Log the file &amp; line #. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logURL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a049cfb7d49c1607657475e9370d637eb</Anchor>
    <Abstract>log file/line as a URL </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vlogMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>af99219a68453bf1e839e78cba95016bd</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sleepUsec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a9cbdb3c3bb5c8dc4caca61eaff27664f</Anchor>
    <Abstract>Misc. global functions in the csl namespace. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sleepMsec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a2c42298de7cb03404809ad2359648476</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sleepSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a1012552a22ad6d30722e1a813743f1ed</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timeNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>acb93ee4b0bb8946307343ebc0afe4ec2</Anchor>
    <Abstract>high-accuracy system or IO time in ticks </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fTimeNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>aa6791ff178ae21bb5e9139236883c823</Anchor>
    <Abstract>system or IO time in seconds </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fRandZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a10f527b7a1c9f047733c79c678b001d2</Anchor>
    <Abstract>A variety of useful random-number functions. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fRand1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a1e57e4f3f987273d7039c323672e2b04</Anchor>
    <Abstract>-1 - 1 (one) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fRandV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a3ed546fdbc39d59ade6741085996a46d</Anchor>
    <Abstract>0 - v (val) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fRandM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ad27daa4fa06ee1d7301419d4b4905cda</Anchor>
    <Abstract>min - max (min/max) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fRandR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a70822f8dff36fb615b703d87140b5683</Anchor>
    <Abstract>b +- (r * b) (range) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fRandB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a510c764112f1c9c9d02a4c36162b5452</Anchor>
    <Abstract>b +- r (base) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iRandV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a81d0f12c8138f294c04155f53787473e</Anchor>
    <Abstract>Integer rands. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iRandM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>af8e785c4334c187c99a97f7cdb883295</Anchor>
    <Abstract>min - max (min/max) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iRandB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a0735d15bcba1bd3bfbb507bd2c6f4da5</Anchor>
    <Abstract>b +- r (base) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ad469415ebf6f41b88aab32f79a57280a</Anchor>
    <Abstract>Answer true or false. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ae3abe9f19304be21f56be07090a1d228</Anchor>
    <Abstract>Answer with a bias (1 –&gt; always true) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>keyToFreq</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a9ca5f413ea39083d3457f13db181a123</Anchor>
    <Abstract>MIDI Conversions. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqToKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ace00e2bf3cce796f325ed30d3ddac8bd</Anchor>
    <Abstract>freqToKey – converts from frequency in Hz to MIDI key # </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gIODevices</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_s_l___core_8cpp.html</Path>
    <Anchor>aff1ac57c0322123d7fbf7f9c65d30af0</Anchor>
    <DeclaredIn>CSL_Core.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DECLARE_SCALABLE_CONTROLS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___core_8h.html</Path>
    <Anchor>a11bd56bb294f6201345755d56f4443b3</Anchor>
    <Abstract>Macros for all the Scalable UnitGenerators (note that these don&amp;#39;t end with &quot;;&quot;) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOAD_SCALABLE_CONTROLS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___core_8h.html</Path>
    <Anchor>a34900a23f9eed71cd86fc33bb181d80b</Anchor>
    <Abstract>Load the scale/offset-related values at the start. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UPDATE_SCALABLE_CONTROLS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___core_8h.html</Path>
    <Anchor>ad321aa2637348584687dce55e9aae091</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHECK_UPDATE_SCALABLE_CONTROLS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___core_8h.html</Path>
    <Anchor>a35d99cbc506fa26e4fdd6f09df2257e8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IS_UNSCALED</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___core_8h.html</Path>
    <Anchor>a50174c627136ec269a3e3f92c9aa959c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DECLARE_PHASED_CONTROLS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___core_8h.html</Path>
    <Anchor>a000912632c0bcebcda0fd600934e8824</Anchor>
    <Abstract>Macros for all the Phased UnitGenerators (note that these don&amp;#39;t end with &quot;;&quot;) These make some assumpt...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOAD_PHASED_CONTROLS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___core_8h.html</Path>
    <Anchor>aba4fff07d1b1a4266173742fc250766d</Anchor>
    <Abstract>Load the freq-related values at the start of the callback; if the frequency is a dynamic UGen input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UPDATE_PHASED_CONTROLS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___core_8h.html</Path>
    <Anchor>a015a45a41925caa8e961f8b4567e16ad</Anchor>
    <Abstract>Update the freq-related value in the loop. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHECK_UPDATE_PHASED_CONTROLS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___core_8h.html</Path>
    <Anchor>abc0e22ece0d4e2418b03c04b28f32748</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GET_TIME</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___core_8h.html</Path>
    <Anchor>a90d5947d135344a0bb399047f0ffc890</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SUB_TIMES</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___core_8h.html</Path>
    <Anchor>ab904bef5bcd1fe5ff43223a1a0c11101</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_Types_H</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a3b249d3783cb185e3092610e80b3326f</Anchor>
    <Abstract>CSL_Types.h – the top-most include file for CSL 5.0 (September, 2009). Updated for CSL 6...</Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_ENUMS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>af9bc1e3503a40d3be35644b2a5e9e726</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_mFrameRate</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a38afb7d6a29bcef61dec2bd62eac4e0d</Anchor>
    <Abstract>default sample rate (tested up to 96000) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_mBlockSize</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a17bf7300b86de1a7462e9aae911c62c0</Anchor>
    <Abstract>normal hosts </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_mMaxBufferFrames</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a521cf1e54818310e516ec1227d059aa4</Anchor>
    <Abstract>max block size (set large for zooming scopes) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_mSndFileFrames</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a373c614878f5bc015f83d9c4082f3586</Anchor>
    <Abstract>default file cache size = 20 MFrames (~ 2 min) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_mMaxSndFileFrames</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>ae4bd3abc04b081e7252262f9a64dc07a</Anchor>
    <Abstract>max file cache size = 64 MB (set to a large value) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_WTABLE_SIZE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a58e3b4076bc8f096615e6a74ea26468c</Anchor>
    <Abstract>selected hardware interface at startup time </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_mVerbosity</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>aa6da75ea5828f1268de74a34c68b8b4b</Anchor>
    <Abstract>very verbose logging </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_mLoggingPeriod</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a786c2fb8978dc75894eec6c58508e714</Anchor>
    <Abstract>log CPU usage every N sec </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_LOG_PREFIX</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a7bec17c7bc02143be18bc20fa44b5dc3</Anchor>
    <Abstract>prefix for log msgs (may be empty) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_mOutPort</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a5b9aa9cb382873655948dcdeb8c4a254</Anchor>
    <Abstract>RFS output port. </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_mOSCPort</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a03d3f4736ac4a6b0239a01f7ac6fdec0</Anchor>
    <Abstract>OSC input port. </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_WORD_LEN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>ae67e2de8667670f8174b548476b9bf09</Anchor>
    <Abstract>default short string length </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_DEF_LEN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a845cf706a9cb151c082747f91a804ef7</Anchor>
    <Abstract>default medium string length </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_NAME_LEN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a744fe32e19c86d860ed3b2387728c284</Anchor>
    <Abstract>default string length </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_LINE_LEN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a9e20ef687373b1756ce273b3e7b65422</Anchor>
    <Abstract>default line length </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_STR_LEN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>ac9084bdd7839110343cafcc36e159b2e</Anchor>
    <Abstract>default long string length </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SAMPS_TO_WRITE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>ad995113ea7ceb2395231ce9b1ed535b7</Anchor>
    <Abstract>record 30 seconds by default </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OUT_SFILE_NAME</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a8706f9cd7e16962827eff0993f6087eb</Anchor>
    <Abstract>csl output file name temlpate </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_DATA_DIR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a2108e09a6111191bf5d2ed5e69325dae</Anchor>
    <Abstract>folder where the CSL data can be found </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_INIT_FILE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>af3d403dc0d8e4e5e6eda3a78019bfa29</Anchor>
    <Abstract>where to store the CSL init file </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DO_TIMING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a55968a72af09a67a7420f59ee7435ea3</Anchor>
    <Abstract>Gather performance timing (not on Windows) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>USE_SNDFILEBUFFER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>ac05f9050aaf6098114e5bb2ecb10344f</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_MIDI_IN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>abb8a0c247c4d672e42144e15d5ecd0b9</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_MIDI_OUT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a5bce5bf8a9cf20ba9af9aaebad79d6b8</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>USE_LOSC</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a1301e56432848cbb22e4fe1d45fd715a</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Osc</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>ab42a7c51533684dbea8d6964c9529308</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cx_r</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a374b8e703acc05adcf42fa8d392939ba</Anchor>
    <Abstract>complex # accesor macros </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cx_i</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a6560cac7f8baa55b52d7c3b8700e5276</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComplexPtr</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>ac1f07765f429a1344d9542ea4178ac17</Anchor>
    <Abstract>shorthand </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_SCALE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a8395ee6986cbf72d7ffa2a1d465ff7b1</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_OFFSET</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>ac2aae4f821f0e6851e6e4add9a1fd630</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_INPUT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a4c47debb150e171f9020cf9b3b6cfae0</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_OPERAND</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a716d1a138df239de2af0571f91b0371d</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_OPERAND2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a3db3cd4ae341e6ebbc139c24b3ae83a7</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_FREQUENCY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>aed3b634395b2c92161cb228bccf540e0</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_POSITION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a1a331fb33e84c9b22813b949ac0eb4d2</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_POSITIONX</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>ab8844bbc95bf98ef361651043e946661</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_POSITIONY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>acf0ff5a896436c9337b255e60793d26d</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_POSITIONZ</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a1ce2427d1c613eb8cc637ec3ebf65d25</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_FILTER_FREQUENCY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>ac88f9cee07df8fe00ff98d3de5866b2c</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_FILTER_AMOUNT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>ae2b661497d8261728892bbae5c62c5f5</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_RATE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a6b26793d395c8aa96672987d98982023</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl_min</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>ae8ec6a68799a96c76a1e37d9632fda38</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl_max</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>aa8b5c287842dfb1623ab53ea83c8a285</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl_between</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a9fbd23d2f2f009a0d1430e16ce6c5ba4</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl_max_r</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a78ad0a67e838ca4b8af613756dad5a43</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl_min_r</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a47ee50cdf7c7ed4bb220e6b86b873b34</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl_abs</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a92b6e0864f1ab4cbbcdbcb258d847c4f</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl_max_d</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>aa7ebf9c658f2dc5952f3ccbc383d4245</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl_min_d</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a5ebb9c0b2c2651c0eca39454a4f562cb</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl_ratio_rem</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a2d8fddaf863483a2adc8bc7fe733a859</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TRUE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>aa8cecfc5c5c054d2875c03e77b7be15d</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FALSE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>aa93f0eb578d23995850d61f7d61c55c1</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_PI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a40ed35e1b2bf63c3649e1deb75fa57b3</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_TWOPI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>adc609343f584b0ca7ec433b02ec9985d</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_PIHALF</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a63350ebd86c34b23da59a078e61db34e</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_SQRT_TWO</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a0a212ff6884b2020fe487baa47528388</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_SPEED_OF_SOUND</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>a0e5821d274c4a95390028b363ad88972</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_EXP_PER_DB</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>adde8557252dc36d451482e6a8d60d3ed</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_SAMPS_PER_METER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>aa7d096525137d5a71e69333a0e27384d</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_DEGS_PER_RAD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_s_l___types_8h.html</Path>
    <Anchor>aaa0f6b5d805dd463131d87e2933945ab</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FloatArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>aea673561142515c0c9144c61ff347aaa</Anchor>
    <Abstract>&lt; All of CSL takes place within the &quot;csl&quot; namespace </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FloatArrayPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>aef010c02fb2606197ad43b01d75aaa7e</Anchor>
    <Abstract>float pointer pointer type </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a9c90bbf38f5866df02d02866d23a58ea</Anchor>
    <Abstract>(could be changed to int, or double) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>af93f71394fa25ce10e8391bc0fb4d119</Anchor>
    <Abstract>the same, written upper-case </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a2e5ffaea3f06948bf8e7a26295dca9d5</Anchor>
    <Abstract>1-channel buffer data type, vector of (sample) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleBufferVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>af1aacd57c6b1a999e7ee2a805b45d29f</Anchor>
    <Abstract>Multi-channel buffer data type, vector of (SampleBuffer) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleBufferArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5468915ef5d90d6abdf66497b460b510</Anchor>
    <Abstract>Multi-channel buffer data type. </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleComplex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>af4a243f6b239f2f9ebecefd32787808f</Anchor>
    <Abstract>array-of-2 complex # type (like FFTW) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleComplexVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ae7dfe0e6f92a11ba45b1d6105ea5ae86</Anchor>
    <Abstract>complex vector </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleComplexPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a7c05d6df6a71ccfe0747c23a3d14ea39</Anchor>
    <Abstract>complex pointer </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleComplexMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5d13a81bb1b03d0d709218ee6c977bd9</Anchor>
    <Abstract>complex 2D matrix </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PointVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>abbf5816554d727c3a2c7059d269710ec</Anchor>
    <Abstract>Forward declaration. </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnsignedVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>af79112bfe54941c864f0391148fbd5fb</Anchor>
    <Abstract>A vector of unsigneds. </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FloatVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a20244cbefb10ad5b0533dd497ff0813d</Anchor>
    <Abstract>A vector of floats. </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VoidFcnPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a56dbaa99d848a337b3120df93ba5542e</Anchor>
    <Abstract>the generic void fcn pointer </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VoidFcnPtrN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a491909204bc69b2190e3db5ecf7cc6c3</Anchor>
    <Abstract>the truly void fcn pointer </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a49f8529fd5f0399eb3b3831ea4417fa9</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_MAP_KEY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac5e77b55f839f35209cc64fd74d363d3</Anchor>
    <Abstract>Forward declaration. </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a7e27938ef503d88d7263417b8a4b2480</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BufferVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a648c427c49b2d9983098929f059ce27e</Anchor>
    <Abstract>Buffer/UGenVector: unit generator pointers (used for outputs) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UGenVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac691ba988d2f64914df347b0cddfc3e9</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UGenMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a2a068dcc937137c6711ab84bdd742660</Anchor>
    <Abstract>UGenMap: a named map of unit generators (used for GUIs) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UGenIMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>afde5b84ce7a1b40eb50f2a72dd093f94</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FloatMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a3283b1e465a972cfda68c3788fb05c72</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IODeviceVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>af431c61923adead2285c6d83ecbba1b9</Anchor>
    <Abstract>IOs hold onto device vectors. </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstrumentVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ad07705909e8f93080be3f68d7b763387</Anchor>
    <Abstract>Players hold onto Instrument vectors/maps. </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstrumentLibrary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>adf892e2d3141b3742b1dfd210e5238a8</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstrumentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a163e7faf725b15f14538d9c88423b892</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a0813cda451a389aa40d3f909bd4a6666</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Timestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ada7631e5b457e428307368114e6fba93</Anchor>
    <Abstract>Timestamp type: we assume that we can get the host&amp;#39;s best guess at the IO word clock (normally passed...</Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DECLARE_OPERAND_CONTROLS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_binary_op_8h.html</Path>
    <Anchor>ada633f241d2e7e29f18fc6b6fd66e030</Anchor>
    <Abstract>Declare the operand port (accessing the mInputs map) and current value. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOAD_OPERAND_CONTROLS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_binary_op_8h.html</Path>
    <Anchor>aafdf4542e8cac9ff8b39f86c7490d9b6</Anchor>
    <Abstract>Load the op-related values at the start of the callback; if the operand is a dynamic UGen input...</Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UPDATE_OPERAND_CONTROLS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_binary_op_8h.html</Path>
    <Anchor>ac1ddeaf897966c2fdd2d7346c6efb8b9</Anchor>
    <Abstract>Update the op-related value in the loop. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>USE_FFTW</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_convolver2_8h.html</Path>
    <Anchor>a0ac4389428002ffb7b15d4d26487d478</Anchor>
    <Abstract>Convolver2.h – The simplified convolution class. This is an FFT-based convolver that uses the FFT wr...</Abstract>
    <DeclaredIn>Convolver2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FILTER_MAX_COEFFICIENTS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_filters_8h.html</Path>
    <Anchor>a91dd00173f5c5896293047442af3769a</Anchor>
    <Abstract>Filters.h – CSL filter classes. </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BW_LOW_PASS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_filters_8h.html</Path>
    <Anchor>af8d310c4cd70648230bf9c83ebb0caef</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BW_HIGH_PASS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_filters_8h.html</Path>
    <Anchor>a0a186cf48b40d12d1169f773999a481e</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BW_BAND_PASS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_filters_8h.html</Path>
    <Anchor>a25685f502f4755ed86f407cfcc93772c</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BW_BAND_STOP</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_filters_8h.html</Path>
    <Anchor>ab7dcaa0e180055ba872a7c75c455f063</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BW_LOW_SHELF</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_filters_8h.html</Path>
    <Anchor>a0a76eb7a72d4ae6c7ab33fd780e61775</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BW_HIGH_SHELF</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_filters_8h.html</Path>
    <Anchor>ac9cb3912eaefa08352e0f7e75a4672b5</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PEAKING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_filters_8h.html</Path>
    <Anchor>a9f6ef06d850cd49f231ab963b9f0b43f</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ALL_PASS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_filters_8h.html</Path>
    <Anchor>a47bca429764b1e4139671123893aa772</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DECLARE_FILTER_CONTROLS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_filters_8h.html</Path>
    <Anchor>a0546c3ac128754e27dcf4457046f17ad</Anchor>
    <Abstract>Declare the pointer to freq/bw buffers (if used) and current scale/offset values. ...</Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOAD_FILTER_CONTROLS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_filters_8h.html</Path>
    <Anchor>a99b4eaa48c86918d7e3cfdbce065695a</Anchor>
    <Abstract>Load the freq/bw-related values at the start. </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilterType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ae4756e82a43a2fa653f5f341372b87dd</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BANDPASS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>a3ebfa4d7e384f53e6a37ff0d0d98627d</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DIFFERENTIATOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>a677e6c6816bcf472eaf8875cc8fe729d</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HILBERT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>aff6936b3d5de51dd8968ce8a44c0176d</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NEGATIVE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>ae8da539b402ed6856028a0a60240bbff</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>POSITIVE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>aefb7723e1092c450754ef6c07922b1bf</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pi</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>a0c233fcb94ea9f05596b48427095806e</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pi2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>aa5f7ec8ff2ff24995c32143fc53005da</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GRIDDENSITY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>a701053a83ca85d18c7e72066e97eca2e</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAXITERATIONS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>a988e935ee6ed10d959e44e47780ddcbf</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remez</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>a3fc5d3fe605c3a0eba5ad6b50551b137</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CreateDenseGrid</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>ab178ceca48eb9f872535826a39da0c33</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InitialGuess</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>afd685c1c622c866839786c26b661593f</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CalcParms</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>a4261c87ad066aa678779da17d1c61175</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComputeA</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>a0e52751f94d4c3f2e5ade81d059235ae</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CalcError</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>ab83c6934bd5df22f85e2d1eed5cad889</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Search</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>aad92c31fd79d2efc81710a72b84f1e8b</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FreqSample</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>a21508975da3e2e735654f6c6eeb4a038</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDone</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_f_i_r_8cpp.html</Path>
    <Anchor>ab7e8a38d60f09445a731d9f9fe763a39</Anchor>
    <DeclaredIn>FIR.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kNumCombs</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>a3ad8e7aa8d7a666d9c80d838e0b49229</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kNumAllpasses</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>a94e9209efb70af98610842a3fc206ba0</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kMuted</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>a1b2faed349a48c95238370aaa53d9625</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kFixedGain</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>aed2df1edfd86d6502635b103d3cf6897</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kScaleWet</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>a487867209acfd2d6eca7506fb563da26</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kScaleDry</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>a0c141fe39e8e784dec5a18357d90d21c</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kScaleDamp</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>a69823a3fbde575b330d1bc9702919c5f</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kScaleRoom</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>ae4616ab929acb4a574c99abe8b6f304c</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kOffsetRoom</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>a61f2d8908a73c63425819c2fc08ffde6</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kInitialRoom</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>aaa4f58b51fe173082f5b05d20b843dd6</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kInitialDamp</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>a502c46f977479ece5cfbabef620cd5eb</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kInitialWet</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>a56ad0d74aae88bc4a048640229b81024</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kInitialDry</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>aa358ffcef94dc5f91435c72521d126ae</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kInitialWidth</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>aa68850c183311fe055f532f2ea7ac5d8</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kInitialMode</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>a3560cfc5f8ae3f260f679792c74262fb</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kFreezeMode</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>a9c6a1d3071d08737b214d32a914087f8</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kStereoSpread</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>ab5cd6c5698793d50dfe3413428ae0e22</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCombBufferSizes</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>a02dcaac4d1bfea5f712de94c09a1fb35</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kAllpassBufferSizes</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_freeverb_8cpp.html</Path>
    <Anchor>a9355c805076d8082fb119228ebe10d8e</Anchor>
    <DeclaredIn>Freeverb.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>undenormalise</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_freeverb_8h.html</Path>
    <Anchor>a06764b9a2e96fce8c8d042ca44bf9393</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kNoProc</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_in_out_8h.html</Path>
    <Anchor>a49958bd52bbb3dc57379c50bf5f4f3d0</Anchor>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kLR2M</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_in_out_8h.html</Path>
    <Anchor>a45d92403dbd763909802e5f37831f9c9</Anchor>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kL2M</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_in_out_8h.html</Path>
    <Anchor>a17119406a1db327018493e26c3a60d3f</Anchor>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kR2M</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_in_out_8h.html</Path>
    <Anchor>ae39ab892f240a96dcbcb36978bca9543</Anchor>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kN2M</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_in_out_8h.html</Path>
    <Anchor>a60604d1bd55ebf15cbee3218e6ee44ad</Anchor>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InOutFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac550f80f84e6e9df18f719fdd30f88b0</Anchor>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAX_OUTPUTS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_mixer_8h.html</Path>
    <Anchor>a526f6d0cf6414eea547e237f73715c6f</Anchor>
    <Abstract>N-channel (max 2 at present) input to M-channel output azimuth panner. </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kLine</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_envelope_8h.html</Path>
    <Anchor>a826ad4ff06c3033bc454cff54e00e0de</Anchor>
    <Abstract>LineSegment flags for line interpolation. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kExpon</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_envelope_8h.html</Path>
    <Anchor>a26bcb495bc716cdb7358fd46fdfdcfa4</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LineMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a294f8957c5dffb900bef7d2971ff08d3</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Breakpoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ace598ff3e15a3bb28bffb5fa69479579</Anchor>
    <Abstract>a map between a time and a line segment </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createGrains</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_granulator_8cpp.html</Path>
    <Anchor>a7920d9c8e2d68f5dbfd15b923b9a7bb0</Anchor>
    <DeclaredIn>Granulator.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reapGrains</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_granulator_8cpp.html</Path>
    <Anchor>add84e2457bd68cbe4f3e66154d726487</Anchor>
    <DeclaredIn>Granulator.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAXGRAINS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_granulator_8h.html</Path>
    <Anchor>ac7adab629601e2f0e1229733a4fd9f52</Anchor>
    <DeclaredIn>Granulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Grain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>aee1aed7f4066712c295e6dec02d63f37</Anchor>
    <Abstract>Grain data structure This implementation uses a linked list data structure. You might want to add a f...</Abstract>
    <DeclaredIn>Granulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PINK_MAX_RANDOM_ROWS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_noise_8h.html</Path>
    <Anchor>aacad2d0d75b07d001133a8227bb16a09</Anchor>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PINK_RANDOM_BITS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_noise_8h.html</Path>
    <Anchor>a543ce37e1e5c7fde4ec39c832136683c</Anchor>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PINK_RANDOM_SHIFT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_noise_8h.html</Path>
    <Anchor>a2bc95aedc61109291640be3c2847d21d</Anchor>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sSineTable</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_oscillator_8cpp.html</Path>
    <Anchor>adc4f34780846282d7914edb11331bca8</Anchor>
    <DeclaredIn>Oscillator.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_WAVETABLE_SIZE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_oscillator_8h.html</Path>
    <Anchor>abaf89b1193e1289dc3b5178e112da03b</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kTruncate</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_oscillator_8h.html</Path>
    <Anchor>afd271e24e606011b36c40f4763f2f1e7</Anchor>
    <Abstract>Enumeration for interpolation policies. </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kLinear</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_oscillator_8h.html</Path>
    <Anchor>aac127fe9a9fcbfed1a5f5022139df4ea</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCubic</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_oscillator_8h.html</Path>
    <Anchor>ae68af51a3c95266247ca9b2b8305b8c3</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kAllPass</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_oscillator_8h.html</Path>
    <Anchor>aafac9f8a4cab5fd7ebfe1d6e239967fc</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kFrequency</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_oscillator_8h.html</Path>
    <Anchor>a7d7114a2da83aeb538ef4b1c831d9ed8</Anchor>
    <Abstract>Enum for SumOfSines description formats. </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kFreqAmp</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_oscillator_8h.html</Path>
    <Anchor>a7d372186b6b15f7965630bd11c79a500</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kFreqAmpPhase</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_oscillator_8h.html</Path>
    <Anchor>aacd6a340d2c0a3cbd114f26a4f819e98</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InterpolationPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ae2e617db7a9904ff0d20e111308c8dbb</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PartialDescriptionMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ab089b9d3efc288214632c28ba9da723a</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAX_PARTIALS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_s_h_a_r_c_8h.html</Path>
    <Anchor>a923241155641730eccdf3034986f2b91</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAX_SPECTRA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_s_h_a_r_c_8h.html</Path>
    <Anchor>a9e9bb11a1bc26e2e959df2219dac9802</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAX_INSTRUMENTS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_s_h_a_r_c_8h.html</Path>
    <Anchor>a15b12bc8e78d7628fed07a351204903c</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AMBI_INVSQRT2</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_ambisonic_8cpp.html</Path>
    <Anchor>a6870016f528b125eb0b29b05c93f0560</Anchor>
    <DeclaredIn>Ambisonic.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INV_SQRT2</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_ambisonic_8cpp.html</Path>
    <Anchor>a9eb2cd7213f88b3f5f50c1e5642ffdf1</Anchor>
    <DeclaredIn>Ambisonic.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AMBI_INVSQRT2</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_ambisonic_8cpp.html</Path>
    <Anchor>a6870016f528b125eb0b29b05c93f0560</Anchor>
    <DeclaredIn>Ambisonic.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HOA_MAX_ORDER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_ambisonic_8h.html</Path>
    <Anchor>a5b103a0f555976cfa28d60633ee94d76</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PYTHAG</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_ambisonic_utilities_8cpp.html</Path>
    <Anchor>a97cfa0a45844dfb70b87063ca392b1b0</Anchor>
    <DeclaredIn>AmbisonicUtilities.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAX</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_ambisonic_utilities_8cpp.html</Path>
    <Anchor>afa99ec4acc4ecb2dc3c2d05da15d0e3f</Anchor>
    <DeclaredIn>AmbisonicUtilities.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SIGN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_ambisonic_utilities_8cpp.html</Path>
    <Anchor>ac89d5f8a358eb8a1abdcd0fcef134f1a</Anchor>
    <DeclaredIn>AmbisonicUtilities.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>at</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_ambisonic_utilities_8cpp.html</Path>
    <Anchor>a37fcc8784e453736049a02704e1da2e2</Anchor>
    <DeclaredIn>AmbisonicUtilities.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bt</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_ambisonic_utilities_8cpp.html</Path>
    <Anchor>a0630715fabe476d7e4b8dd8d64128daf</Anchor>
    <DeclaredIn>AmbisonicUtilities.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ct</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_ambisonic_utilities_8cpp.html</Path>
    <Anchor>a9037f0baae8f8b8c1eb17f4648431787</Anchor>
    <DeclaredIn>AmbisonicUtilities.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxarg1</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_ambisonic_utilities_8cpp.html</Path>
    <Anchor>abc59d4bbc0d32bfa3f3781fcbf4e86f4</Anchor>
    <DeclaredIn>AmbisonicUtilities.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxarg2</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_ambisonic_utilities_8cpp.html</Path>
    <Anchor>a9a3caa54f202441d8ca46930c8a09b62</Anchor>
    <DeclaredIn>AmbisonicUtilities.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AMBI_INVSQRT2</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_ambisonic_utilities_8h.html</Path>
    <Anchor>a6870016f528b125eb0b29b05c93f0560</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SUM_DOWNS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_binaural_8h.html</Path>
    <Anchor>a185dc3f5f2b5a2b97399cca304465606</Anchor>
    <Abstract>Binaural.h – Specification of the HRTF-based binaural spatializer. This is the CSL 5 version that us...</Abstract>
    <DeclaredIn>Binaural.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFT_DOWNS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_binaural_8h.html</Path>
    <Anchor>a58c8e9896e7394f5ace7dbc41f2fda93</Anchor>
    <DeclaredIn>Binaural.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LEN_DOWNS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_binaural_8h.html</Path>
    <Anchor>a10e9477c1af6e0474740553213e3c6ef</Anchor>
    <DeclaredIn>Binaural.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HRTF_BLOCK_SIZE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_binaural_d_b_8h.html</Path>
    <Anchor>a0b8c53920d9c4c1f8006788a3e93900c</Anchor>
    <Abstract>BinauralDB.h – Specification of the HRTF file format and database This is the CSL 5 version that use...</Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HRIR_SIZE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_binaural_d_b_8h.html</Path>
    <Anchor>a94982d0b55e2831241e74a734703af48</Anchor>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLIST_NAME</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_binaural_d_b_8h.html</Path>
    <Anchor>a8a1da7dda7be7617938c822544c20635</Anchor>
    <Abstract>name of file list file </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFAULT_HRTF_FOLDER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_binaural_d_b_8h.html</Path>
    <Anchor>ac807b24fa93a4fa7e02b5e40f86a0c3c</Anchor>
    <Abstract>where are the HRTFs under the CSL_Data folder? </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HRTF_RESOURCE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_binaural_d_b_8h.html</Path>
    <Anchor>a385893ba27d4739ecbac6bdfca107cb7</Anchor>
    <Abstract>What&amp;#39;s the default HRTF folder under data? </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cmac</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_binaural_d_b_8h.html</Path>
    <Anchor>a66ef1a40b93e9a9baac1526bfcc310c5</Anchor>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HRTFVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a59b02713a67587b4f6682884d994f0bd</Anchor>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SPEED_OF_SOUND</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_shoe_box_8cpp.html</Path>
    <Anchor>ac9f9f9d25bbf964365102f1ef77d359e</Anchor>
    <DeclaredIn>ShoeBox.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kWoodCoefficient</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_shoe_box_8cpp.html</Path>
    <Anchor>a7eeadeb0b9d687f3883768272e0a2f45</Anchor>
    <DeclaredIn>ShoeBox.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kMarbleCoefficient</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_shoe_box_8cpp.html</Path>
    <Anchor>a11c48f4c5a5da43acfa8f89c06ca9a61</Anchor>
    <DeclaredIn>ShoeBox.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kConcreteCoefficient</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_shoe_box_8cpp.html</Path>
    <Anchor>a9e02bc2cbe29e2506aa3600ab929fbc7</Anchor>
    <DeclaredIn>ShoeBox.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kBrockCoefficient</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_shoe_box_8cpp.html</Path>
    <Anchor>ab73036eec9dbb2d35daeedd79dacd17f</Anchor>
    <DeclaredIn>ShoeBox.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kGlassCoefficient</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_shoe_box_8cpp.html</Path>
    <Anchor>a5c88c99b28138f06c624ae225f26f0de</Anchor>
    <DeclaredIn>ShoeBox.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INV_SQRT2</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_speaker_layout_8cpp.html</Path>
    <Anchor>a9eb2cd7213f88b3f5f50c1e5642ffdf1</Anchor>
    <DeclaredIn>SpeakerLayout.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>signof</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_p_m_e_8cpp.html</Path>
    <Anchor>a3c7382d5cba8d006e7c9fa11cbbcdc55</Anchor>
    <DeclaredIn>PME.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RMAX</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_p_m_e_8cpp.html</Path>
    <Anchor>a66d21d4cc0d35bfe93b68f7a5089eb8b</Anchor>
    <DeclaredIn>PME.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MIN_GRAB_DISTANCE_SQ</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_p_m_e_8cpp.html</Path>
    <Anchor>a2509054590e0eb7c3bd18714b02c1839</Anchor>
    <DeclaredIn>PME.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kTwoPi</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_p_m_e_8cpp.html</Path>
    <Anchor>a9c7bd7d371e58acf182a06d6b7ca3c2a</Anchor>
    <Abstract>PME.h – Ventriloquist See the copyright notice and acknowledgment of authors in the file COPYRIGHT D...</Abstract>
    <DeclaredIn>PME.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit_count</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_p_m_e_8cpp.html</Path>
    <Anchor>a4cbe8a3e2176552e377cdec02baa7194</Anchor>
    <DeclaredIn>PME.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAX_TRACE_LENGTH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_p_m_e_8h.html</Path>
    <Anchor>af0c0584410364a83dba3db590aa157e7</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kStopped</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_p_m_e_8h.html</Path>
    <Anchor>a8a93b61bc797a7d1907f42796a252493a142714524ffdfe9cfebaa1033fd1a18f</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kGrabbed</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_p_m_e_8h.html</Path>
    <Anchor>a8a93b61bc797a7d1907f42796a252493a6dc1f4bfa508fa12fa98043e639a842b</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kOrbit</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_p_m_e_8h.html</Path>
    <Anchor>a8a93b61bc797a7d1907f42796a252493a8a3ef57d1a3518b5b00ecc28604c8729</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kDraw</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_p_m_e_8h.html</Path>
    <Anchor>a8a93b61bc797a7d1907f42796a252493a58ffaeabb756b82d9c5560fc42bbbec1</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kBounce</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_p_m_e_8h.html</Path>
    <Anchor>a8a93b61bc797a7d1907f42796a252493a189c4c8b2df91e998abfdd100e4f1266</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kInvalid</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_p_m_e_8h.html</Path>
    <Anchor>a964edef3f0f33a4aa551f6501821c59aa94dd08feda7b2cf0ff8262312c4fcc09</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kClosed</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_p_m_e_8h.html</Path>
    <Anchor>a964edef3f0f33a4aa551f6501821c59aa44be8f61450ed22be5adcc881a95570f</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kPoint</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_p_m_e_8h.html</Path>
    <Anchor>a964edef3f0f33a4aa551f6501821c59aa38146a834eece30f0cbb59d1f0e05145</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kOpen</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_p_m_e_8h.html</Path>
    <Anchor>a964edef3f0f33a4aa551f6501821c59aa7fb3bf49ba349ca1a266be41df447b5b</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>raw_type</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>_practical_socket_8cpp.html</Path>
    <Anchor>aba7a57aadc5c75eaab8ee698d0fa6608</Anchor>
    <DeclaredIn>PracticalSocket.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillAddr</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_practical_socket_8cpp.html</Path>
    <Anchor>a155e03535e1d5c1f5df7ceafe63dbdb0</Anchor>
    <DeclaredIn>PracticalSocket.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAX_NUM_VBAP_TRIPLETS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_v_b_a_p_8cpp.html</Path>
    <Anchor>afcec86f6f7307d4cfbd5b538d57b6992</Anchor>
    <Abstract>VBAP.h – Vector Base Amplitude Panning class (v2 - Nov 2006) See the copyright notice and acknowledg...</Abstract>
    <DeclaredIn>VBAP.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MIN_VOLUME_TO_LENGTH_RATIO</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_v_b_a_p_8cpp.html</Path>
    <Anchor>a740c00972ee54196c68650c618a1a295</Anchor>
    <DeclaredIn>VBAP.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vecAngle</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_v_b_a_p_8cpp.html</Path>
    <Anchor>a53c4e4537f9c36e7fd42435d3d007401</Anchor>
    <DeclaredIn>VBAP.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vectorMultiply</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_v_b_a_p_8cpp.html</Path>
    <Anchor>ab154d53cdce4425fb4188a86f0e29987</Anchor>
    <DeclaredIn>VBAP.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAX_NUM_VBAP_SOURCES</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_v_b_a_p_8h.html</Path>
    <Anchor>ad71cc257c5758af01a507daffe10cd0a</Anchor>
    <Abstract>VBAP.h – Vector Base Amplitude Panning class (v2 - Nov 2006) See the copyright notice and acknowledg...</Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_NO_EXCEPTION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_v_b_a_p_8h.html</Path>
    <Anchor>ab9f2466893d703a4efe52b507c2c17b1</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_v_b_a_p_8h.html</Path>
    <Anchor>ac8013bd40e966bc6ba364e0f6ff7acb7</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TRYBEGIN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_v_b_a_p_8h.html</Path>
    <Anchor>a5ec6d8002507de81f8691b3058795737</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CATCHERROR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_v_b_a_p_8h.html</Path>
    <Anchor>a3626d5230d5bd2e6172a52c8dd5ac007</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deg2rad</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_v_b_a_p_8h.html</Path>
    <Anchor>a0578fc1dd44e655837453fde19c6b46f</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSLMatrix</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>_v_b_a_p_8h.html</Path>
    <Anchor>aece1353e137d913aaa22a8575686d605</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>main</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_v_b_a_p__test_8cpp.html</Path>
    <Anchor>ac0f2228420376f4db7e1274f2b41667c</Anchor>
    <DeclaredIn>VBAP_test.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_IR1_size</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_filter_data_8h.html</Path>
    <Anchor>abbd30993622066a39c95a950edddacaf</Anchor>
    <Abstract>FilterData.h - some FIR tap gain lists for testing RoCoCo. </Abstract>
    <DeclaredIn>FilterData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_IR1</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_filter_data_8h.html</Path>
    <Anchor>ac7d0d7078d6e855cd295016c5eaa98f1</Anchor>
    <DeclaredIn>FilterData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_IR2_size</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_filter_data_8h.html</Path>
    <Anchor>a2b3f58044300ef593d7c5eb1d55af254</Anchor>
    <DeclaredIn>FilterData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_IR2</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_filter_data_8h.html</Path>
    <Anchor>a3dab4d0b7556d161bae0c57fe88ed922</Anchor>
    <DeclaredIn>FilterData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_IR3_size</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_filter_data_8h.html</Path>
    <Anchor>aec63073f74192d3f01743f897ba3c380</Anchor>
    <DeclaredIn>FilterData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_IR3</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_filter_data_8h.html</Path>
    <Anchor>a42abb7d6e0167e998998ff3b7782c66d</Anchor>
    <DeclaredIn>FilterData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_IR4_size</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_filter_data_8h.html</Path>
    <Anchor>a2167f6ffc213fbc29c5b60f8c524798e</Anchor>
    <DeclaredIn>FilterData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_IR4</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_filter_data_8h.html</Path>
    <Anchor>a9aa786d8b1f0eee3ba25bbde17586a8b</Anchor>
    <DeclaredIn>FilterData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_IR5_size</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_filter_data_8h.html</Path>
    <Anchor>aa79e5c9d6c01a94b6fe990efb53fc0d1</Anchor>
    <DeclaredIn>FilterData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_IR5</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_filter_data_8h.html</Path>
    <Anchor>a22e096752be1b60e8787f5b01e637508</Anchor>
    <DeclaredIn>FilterData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NUM_NOTES</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_test___o_s_c___client_8cpp.html</Path>
    <Anchor>a5b0b677cb9527865430a9b3d7a71cb03</Anchor>
    <DeclaredIn>Test_OSC_Client.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>noteLoop</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___o_s_c___client_8cpp.html</Path>
    <Anchor>a57dae1f466faace0b8a58cc775a7002f</Anchor>
    <DeclaredIn>Test_OSC_Client.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>main</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___o_s_c___client_8cpp.html</Path>
    <Anchor>a9adec5b0ff06247a1ee2406b34464192</Anchor>
    <DeclaredIn>Test_OSC_Client.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>USE_TEST_MAIN</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_test___audio_8cpp.html</Path>
    <Anchor>a8cb66fa186ca4331bbdb9c15a8c89117</Anchor>
    <DeclaredIn>Test_Audio.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>audio_dump</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___audio_8cpp.html</Path>
    <Anchor>addf3e572bd9459fbfa37b203e1888873</Anchor>
    <DeclaredIn>Test_Audio.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mic_test</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___audio_8cpp.html</Path>
    <Anchor>a17717d0474e8fa186d0b1dfceb0396a2</Anchor>
    <DeclaredIn>Test_Audio.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filt_test</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___audio_8cpp.html</Path>
    <Anchor>a82abc7a97da85bb281bdcede61ca17df</Anchor>
    <DeclaredIn>Test_Audio.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>echo_test</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___audio_8cpp.html</Path>
    <Anchor>ae0c4743e5b85f2452030429ee4aed9fd</Anchor>
    <DeclaredIn>Test_Audio.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>panner_test</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___audio_8cpp.html</Path>
    <Anchor>a7f1a9be30120183b96e14bd249e1b04c</Anchor>
    <DeclaredIn>Test_Audio.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>listener_test</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___audio_8cpp.html</Path>
    <Anchor>a7987a4226a628d79157d60a072b7fdc2</Anchor>
    <DeclaredIn>Test_Audio.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gAudioDeviceManager</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_test___audio_8cpp.html</Path>
    <Anchor>aa234e60809560475361878578c96e6eb</Anchor>
    <DeclaredIn>Test_Audio.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>audioTestList</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_test___audio_8cpp.html</Path>
    <Anchor>a74a14b4f763d44283c80e72b53a79ef7</Anchor>
    <DeclaredIn>Test_Audio.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>USE_TEST_MAIN</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_test___control_8cpp.html</Path>
    <Anchor>a8cb66fa186ca4331bbdb9c15a8c89117</Anchor>
    <DeclaredIn>Test_Control.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>USE_TEST_MAIN</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>a8cb66fa186ca4331bbdb9c15a8c89117</Anchor>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testClipper</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>ae9625d0c21795776463d1a2b914f91a5</Anchor>
    <Abstract>Clip some sound. </Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testFIR</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>a20d6fccf755147b04e91512f65560082</Anchor>
    <Abstract>Test the FIR filter - LPF @ 300 Hz on pink noise. </Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testFilters</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>a375e7fc1105127f231e979b427de698d</Anchor>
    <Abstract>Filter tests. </Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testBiquads</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>a9959990e0d2b0071ccbc214a35014ca3</Anchor>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testDynamicFilters</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>a4af66905fdf94634718216fe8a9d70e3</Anchor>
    <Abstract>Test dynamic BP filter. </Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testDynamicVoice</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>a76face6367bd43eb454aa4c20a27c183</Anchor>
    <Abstract>Test dynamic BP filter on a sound file. </Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testNDynamicFilters</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>abbba29c216ee85d270c07ed6d8f71c77</Anchor>
    <Abstract>Pan and mix many sines. </Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testReverb</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>a089a840b0962b0d9b7f7ffd7f1537420</Anchor>
    <Abstract>Play noise bursts into reverb. </Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testStereoverb</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>a23dc9b37c4ee0cab793972382af9aef2</Anchor>
    <Abstract>Play noise bursts into reverb. </Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testMultiTap</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>ab25d4b3154b179ef79aea86f5df9d1f0</Anchor>
    <Abstract>Play noise bursts into multi-tap delay line. </Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testBlockUpsizer</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>a1744e34ab6f7e8658670470d68a5defe</Anchor>
    <Abstract>Test a block resizer by running a random gliss with a small block size. </Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testBlockDownsizer</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>a1c610a2061cac93164b2c1643e40b153</Anchor>
    <Abstract>Test a block resizer by running a random gliss with a huge block size. </Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testSplitJoin1</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>ac7993b6e49130b9289be02563c68f52b</Anchor>
    <Abstract>Test a Split/Join with a cross-over filter pair LPF to left, HPF to the right. </Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testSplitJoin2</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>a9b0145f4b21bad882f0e4da1293a64c8</Anchor>
    <Abstract>Test a Split/Join with a cross-over filter pair LPF to left, HPF to the right mixer added in just for...</Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testFanMix1</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>af5ccb0ad8d03385113132aee32407f5f</Anchor>
    <Abstract>Test a fan-out + mixer using UnitGenerator&amp;#39;s built-in fan-out. </Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testFanMix2</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>aab8c2101173734e32288769e283cbfcf</Anchor>
    <Abstract>Test a real fan-out + mixer. </Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRandFreqEnvPatch</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>ace4c6f1b503dccf443c2dc63cb708ac5</Anchor>
    <Abstract>Function to create and answer a RandFreqEnv UGen patch this is in test envelopes. ...</Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testDynamicMixer</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>a4c0ddfe6849232ee99ac12cebb07df85</Anchor>
    <Abstract>Mix a few sources, adding/dropping graphs. </Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testSAFilter</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>ad1c2e7af742c3aeb268e2028f5e8b76c</Anchor>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runTests</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___effects_8cpp.html</Path>
    <Anchor>a5dcb537699bebb9e9db36ab19c5aacf7</Anchor>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>USE_TEST_MAIN</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>a8cb66fa186ca4331bbdb9c15a8c89117</Anchor>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BASE_FREQ</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>a25cc638ebb9c29f5ea0a545454c50d31</Anchor>
    <Abstract>FM using 2 oscs and 2 ADSRs. </Abstract>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testGliss</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>a5e4927847df489d3e3546c18c52fbab2</Anchor>
    <Abstract>Apply a glissando to a sine with a LineSegment. </Abstract>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testSwell</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>a00487c4bee34dccb5e81506dd1faa615</Anchor>
    <Abstract>test an amplitude swell </Abstract>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testARSin</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>a445e4ce3562d9cbefbcf90779060476e</Anchor>
    <Abstract>AM and FM using the dynamic scale and frequency inputs. </Abstract>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testARSin2</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>af5ac67b9cca3e32ffb50982aa9aa9abf</Anchor>
    <Abstract>Do the same using the Envelope as an effect. </Abstract>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testFrequencyEnv</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>a742f3fcac000904ae4465da0dd61c78e</Anchor>
    <Abstract>Test an envelope applied to frequency. </Abstract>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testAMFMEnvs</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>a626c10b652e7b6e15f66fe7ef36a987f</Anchor>
    <Abstract>Test an envelope applied to frequency &amp; scale. </Abstract>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testADSR2</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>a45be0faf8e46f63c3f914b3c2fb69a81</Anchor>
    <Abstract>Demonstrate an ADSR. </Abstract>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testADSR_FM</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>ab128e070e76f1d0c2a190a82b791fa2f</Anchor>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testRandFreqEnv</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>a68514e7ec33b00bcf0f4a62bbdf5c354</Anchor>
    <Abstract>test the rand env as the freq of a SOS </Abstract>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRandFreqEnvPatch</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>ace4c6f1b503dccf443c2dc63cb708ac5</Anchor>
    <Abstract>Function to create and answer a RandFreqEnv UGen patch. </Abstract>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test50RandFreqEnv</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>a15e3362d827619c28f966c31414f55e7</Anchor>
    <Abstract>set up 50 RandFreqEnv patches </Abstract>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testEnvScale</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>aa3b38d49f37b2739e8d93314517e3c05</Anchor>
    <Abstract>test the use of scaling </Abstract>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testFancy_FM</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>add4501bfc702f9a5e9a99579530b7abf</Anchor>
    <Abstract>FM with vibrato (with AR-envelope), attack chiff (filtered noise with AR-envelope), and random freq. drift and ampl. swell envelopes. </Abstract>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testComplexEnvelope</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>a465551551807c226b4f1288733acafe1</Anchor>
    <Abstract>Make an envelope from scratch by adding breakpoints. </Abstract>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sosNote</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>a6b3ba9c9fee2b034af4435b888f03f4b</Anchor>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testManyRandSOS</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>acb1013aa3bc96395b2f2226918824b84</Anchor>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runTests</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___envelopes_8cpp.html</Path>
    <Anchor>a5dcb537699bebb9e9db36ab19c5aacf7</Anchor>
    <DeclaredIn>Test_Envelopes.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>USE_TEST_MAIN</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>a8cb66fa186ca4331bbdb9c15a8c89117</Anchor>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TABLE_SIZE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>a032503e76d6f69bc67e99e909c8125da</Anchor>
    <Abstract>Test truncating and interpolating wavetable osc with a small wavetable (these should sound different ...</Abstract>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testSweep</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>aacf61b81fdb0357f8db807d0c2b3bfa9</Anchor>
    <Abstract>Apply a glissando and swell to a sine oscillator with LineSegments. </Abstract>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testSimpleSines</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>a0f75f194bf70083fe3b794a076f3c4c1</Anchor>
    <Abstract>Simplest sine wave tests using the tutorial example classes. </Abstract>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testBasicWaves</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>a6398d4e6f9edda00e6ec01ca077473c3</Anchor>
    <Abstract>Test/demonstrate the basic waveform oscillators. </Abstract>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testScaledSin</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>a9404b24355bb397a1dd93ec944227da4</Anchor>
    <Abstract>Scaled sine wave – 3 methods: with a MulOp and using the Sine&amp;#39;s scale input. </Abstract>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testWavetableInterpolation</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>a2666c8f3263eaa57fd0a4e66e9979326</Anchor>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testAMFMSin</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>aa191c56a16d70327670997305c29d229</Anchor>
    <Abstract>AM and FM using the dynamic scale and frequency inputs. </Abstract>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dumpAMFMSin</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>a056ec2f62c5d581fcb25a50ccdd042f9</Anchor>
    <Abstract>use the dumpTest call to dump the whole graph </Abstract>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testSumOfSinesCached</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>a0d4fee0b749e38c02827159ae6eba21d</Anchor>
    <Abstract>Play a sum of sines waveform – cached harmonic overtone series. </Abstract>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testSumOfSines1F</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>afce1168f6bff4c61003d580761144b3b</Anchor>
    <Abstract>Play a sum of sines waveform – 1/f + noise. </Abstract>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testSumOfSinesSteps</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>a6a1dd927f2d6ce731b34385b0b9dba8e</Anchor>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testSumOfSinesNonCached</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>af72dabba33cc043d8c55079972d41fc7</Anchor>
    <Abstract>Now test an uncached inharmonic series constructor format 3 = list of (freq/amp/phase) for (not-neces...</Abstract>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testWaveTableFromFile</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>a78730da4bb7f0c2d042de5c5b8acb55f</Anchor>
    <Abstract>Load an oscillator&amp;#39;s wave table from a file – a single cycle of the vowel &quot;oo&quot; from the word &quot;moon&quot;...</Abstract>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_SHARC</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>a59bd65676fab0cce8b1720dc197d965e</Anchor>
    <Abstract>Test loading the SHARC samples. </Abstract>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_SHARC2</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>abc81ef3765e2a05e96560e1082b47210</Anchor>
    <Abstract>test vector SHARC - load 3 spectra into SOS oscillators and cross-fade </Abstract>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runTests</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___oscillators_8cpp.html</Path>
    <Anchor>a5dcb537699bebb9e9db36ab19c5aacf7</Anchor>
    <DeclaredIn>Test_Oscillators.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>USE_TEST_MAIN</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>a8cb66fa186ca4331bbdb9c15a8c89117</Anchor>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>USE_CONVOLVER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>a2c837edef48d91c83baeb201a35f65e0</Anchor>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IR_FILE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>ac2c47d9a2ab3c43ab45398e37541e6ef</Anchor>
    <Abstract>NEW (1905) Convolver. </Abstract>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>USE_SND_FILES</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>a6668ca21f5e73a24f42960d2b5358bed</Anchor>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testPan</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>a7b642c790e02594f783a7acf773a6630</Anchor>
    <Abstract>Pan a sine to stereo. </Abstract>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testN2MPan</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>a242fbf85077a353eeb0b78e2108694d3</Anchor>
    <Abstract>Pan a sine to &quot;N&quot; channels. </Abstract>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testSineMixer</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>a4a1bce91c1c3fa8b1cad1081a7c7d493</Anchor>
    <Abstract>Test mixer – really slow additive synthesis. </Abstract>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testPanMix</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>a620af7b0bb578203534310dfaab50c5c</Anchor>
    <Abstract>Pan and mix 2 sines. </Abstract>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testBigPanMix</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>ad3543f0bb9f2b070e3a9319dc8c222cc</Anchor>
    <Abstract>Pan and mix many sines. </Abstract>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testOscBank</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>af81c89c1c61b3b7a37d53c4c2367e3fd</Anchor>
    <Abstract>Make a bank or 50 sines with random walk panners and glissandi. </Abstract>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testCMapIO</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>a0b140b19ac10ac76bd949e6078d988ad</Anchor>
    <Abstract>swap sound channels with a ChannelMappedBuffer InOut Constructor: InOut(input, inChan, outChan, [ch-1 ... ch-outChan]); </Abstract>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_Binaural_horiz</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>aa215418b09ca99b042995c178aa3d5b9</Anchor>
    <Abstract>Spatializer with HRTF. </Abstract>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_Binaural_vertAxial</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>a7761596d9265549c945d98f5c5ce6d37</Anchor>
    <Abstract>Repeat a short test file moving in circles around the vertical plane at AZ = CSL_PIHALF (axial plane ...</Abstract>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_Binaural_vertMedian</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>ab7767e55439217b949d9bb39e0c15397</Anchor>
    <Abstract>Repeat a short test file moving in circles around the vertical plane at AZ = 0 (median plane between ...</Abstract>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_Ambi_horiz</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>a354c0c6e03ed47c292539ef5ae26cb58</Anchor>
    <Abstract>Spatializer with Ambisonics. </Abstract>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_SimpleP</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>ad48133a27e7ed4f06fa302f409cc4390</Anchor>
    <Abstract>Spatializer with simple panners &amp; filters and/or reverb. </Abstract>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_VBAP_horiz</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>a191f53f80a498e6960cb446d304aadb7</Anchor>
    <Abstract>Spatializer with VBAP. </Abstract>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_convolution</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>a4c2033d74578ab42bdc79c973c6f50ce</Anchor>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load_filter_data</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>aafc8f6c008b431046e3aaf88d66fede0</Anchor>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_convolution_file</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>af5b045ab76ea51acba5b8582da76498f</Anchor>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_convolution_files</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>a2d2eb9b9b6c29016be2d4c5a1d6f7c4c</Anchor>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runTests</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>a5dcb537699bebb9e9db36ab19c5aacf7</Anchor>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_IR</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_test___panners_8cpp.html</Path>
    <Anchor>aa478dd728f8008d9f54fd76d9faa0443</Anchor>
    <DeclaredIn>Test_Panners.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>USE_TEST_MAIN</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>a8cb66fa186ca4331bbdb9c15a8c89117</Anchor>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testNoises</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>a7f5b74ac2e833ea77f7ba4d40d9e719a</Anchor>
    <Abstract>Noise tests, WhiteNoise &amp; PinkNoise - using Scalable to protect our ears. </Abstract>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testString</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>a455c6a4de69bcb9f31e44bbb2f8c75db</Anchor>
    <Abstract>Plucked string simulation. </Abstract>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testStringChorus</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>a759bb955e56645aa90fa237c71bc439e</Anchor>
    <Abstract>Test a chorus of strings – this demo plays an endless loop of string arpeggii. For each arpeggio...</Abstract>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testMonoFilePlayer</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>a78fcf6e69b9f1040a57400aea94e81bd</Anchor>
    <Abstract>Test the sound file player - mono, stereo input files. </Abstract>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testStereoFilePlayer</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>a573dbe267876b02713ed43465029513b</Anchor>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testSoundFileTranspose</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>a081852720db8b5ebb44664bb93286bec</Anchor>
    <Abstract>Test the sound file player with rate shift. </Abstract>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testWaveShaper</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>a9a9825d808e107500bdb5bd9d3ed673a</Anchor>
    <Abstract>Test the WaveShaper. </Abstract>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testFMInstrument</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>aeb9740462d7fca4d3b70ffdd38c902cb</Anchor>
    <Abstract>Test basic FM instrument. </Abstract>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testSOSInstrument</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>a3a505cabf48532dd40d8abcacd5541f1</Anchor>
    <Abstract>Test SOS instrument - play 3 different timbres. </Abstract>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testFancyFMInstrument</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>a06e2cebf6a43a8672d636ce0d77daffd</Anchor>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testSndFileInstrument</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>ad6faf12eaee534dfb0abe630f89427ef</Anchor>
    <Abstract>Test SoundFile instrument. </Abstract>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSndtoBank</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>a23e8d880945f61b6ab43ea64645828a4</Anchor>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testSndFileBank</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>af067389f779c06140d8589a2935d2ef0</Anchor>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testGrainCloud</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>a67dd1aed5518c470e586390da3248eab</Anchor>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_ifft</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>aa349cd02179e653ba38ad24d17e007b0</Anchor>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_vector_ifft</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>a6d43c5fb8e7f2bea1b23b8e39a620c77</Anchor>
    <Abstract>do vector cross-fade the long way </Abstract>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runTests</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___sources_8cpp.html</Path>
    <Anchor>a5dcb537699bebb9e9db36ab19c5aacf7</Anchor>
    <DeclaredIn>Test_Sources.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_CSL_OPTS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_test___support_8cpp.html</Path>
    <Anchor>a57a6ae53da416c131be6a0117ed709a8</Anchor>
    <DeclaredIn>Test_Support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runTest</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___support_8cpp.html</Path>
    <Anchor>a05fcebdb4ddd4ac2cf46698ec7e0cbf6</Anchor>
    <DeclaredIn>Test_Support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runTest</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___support_8cpp.html</Path>
    <Anchor>a25bd9f9ce8d31877d5acb6c4d3052b78</Anchor>
    <DeclaredIn>Test_Support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dumpTest</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___support_8cpp.html</Path>
    <Anchor>a138f64e401c929ff566c844e66f93b45</Anchor>
    <DeclaredIn>Test_Support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_option</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___support_8cpp.html</Path>
    <Anchor>a36a8082b6bcb99a3bf9ad5cd2d26349d</Anchor>
    <DeclaredIn>Test_Support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usage</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___support_8cpp.html</Path>
    <Anchor>a7cac13da282785878351e0a820104851</Anchor>
    <DeclaredIn>Test_Support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>theIO</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_test___support_8cpp.html</Path>
    <Anchor>afbeecbaede667412cc93e70c4d4cc385</Anchor>
    <DeclaredIn>Test_Support.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>USE_PAIO</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_test___support_8h.html</Path>
    <Anchor>a5fe30de260f8224ff2bb215e9c29a710</Anchor>
    <DeclaredIn>Test_Support.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IO_CLASS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_test___support_8h.html</Path>
    <Anchor>ae9967f943d3352142b683dd620c23b4b</Anchor>
    <DeclaredIn>Test_Support.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runTest</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___support_8h.html</Path>
    <Anchor>a05fcebdb4ddd4ac2cf46698ec7e0cbf6</Anchor>
    <DeclaredIn>Test_Support.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runTest</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___support_8h.html</Path>
    <Anchor>a25bd9f9ce8d31877d5acb6c4d3052b78</Anchor>
    <DeclaredIn>Test_Support.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dumpTest</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_test___support_8h.html</Path>
    <Anchor>a138f64e401c929ff566c844e66f93b45</Anchor>
    <DeclaredIn>Test_Support.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>theIO</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_test___support_8h.html</Path>
    <Anchor>afbeecbaede667412cc93e70c4d4cc385</Anchor>
    <DeclaredIn>Test_Support.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_point_8cpp.html</Path>
    <Anchor>a17aa751694b23abfc4cbc703218cc576</Anchor>
    <DeclaredIn>CPoint.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_point_8cpp.html</Path>
    <Anchor>abcd81773084c6d843bed363d1fb3a517</Anchor>
    <DeclaredIn>CPoint.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_point_8cpp.html</Path>
    <Anchor>a17ad281173d8eb16ba3c0494bce75c3d</Anchor>
    <DeclaredIn>CPoint.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_point_8cpp.html</Path>
    <Anchor>a86c5dfb9dc82743d2e7f7ebb9801cd9c</Anchor>
    <DeclaredIn>CPoint.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_point_8cpp.html</Path>
    <Anchor>a036dacb7c8cc2b4b9a87a6b28adabd15</Anchor>
    <DeclaredIn>CPoint.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_point_8cpp.html</Path>
    <Anchor>aebf935f49b70427078e947bf0ac5b611</Anchor>
    <DeclaredIn>CPoint.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_point_8cpp.html</Path>
    <Anchor>a7b58e5b157ba091a4fa76a1a970da294</Anchor>
    <DeclaredIn>CPoint.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_point_8cpp.html</Path>
    <Anchor>a824a3d6fb02023d1f6252743395b7555</Anchor>
    <DeclaredIn>CPoint.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_point_8cpp.html</Path>
    <Anchor>afd7191130cecd23bbdae54d0c47cadcd</Anchor>
    <DeclaredIn>CPoint.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_point_8cpp.html</Path>
    <Anchor>ad9d9eb3cfdb05813e12447fb73dee3ca</Anchor>
    <DeclaredIn>CPoint.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>COORD_TYPE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_point_8h.html</Path>
    <Anchor>af5de27bf260c383ea42f075cea728384</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCartesian</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_point_8h.html</Path>
    <Anchor>a9723b2d4c05161ff992284db9395391d</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kPolar</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_point_8h.html</Path>
    <Anchor>a47dc3cd6835503bd440e5df5f6950245</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PointMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac757ccc065e8c555a30fcf12b92b4791</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse_bits</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fft___n_8c.html</Path>
    <Anchor>ac4cc5a67f1f623d03317efd5cd7bee4b</Anchor>
    <DeclaredIn>fft_N.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memdup</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fft___n_8c.html</Path>
    <Anchor>af701f2252f1011d051c8dd1b9418ea89</Anchor>
    <DeclaredIn>fft_N.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_setup</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fft___n_8c.html</Path>
    <Anchor>a4f4e65ae57f47a5c8026f8be6a542fc5</Anchor>
    <DeclaredIn>fft_N.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_transform</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fft___n_8c.html</Path>
    <Anchor>a389b5e345c26f621a663c5b4fa891b1e</Anchor>
    <DeclaredIn>fft_N.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_inverseTransform</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fft___n_8c.html</Path>
    <Anchor>a3284f60997c19cf6c80b0c0f0d9986cd</Anchor>
    <DeclaredIn>fft_N.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fft_transformRadix2</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fft___n_8c.html</Path>
    <Anchor>add7c020d060470fb5b51bd19b1c41d7f</Anchor>
    <DeclaredIn>fft_N.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cos_table</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>fft___n_8c.html</Path>
    <Anchor>a6e8a439409fd6c9cd4a05e787bb00588</Anchor>
    <DeclaredIn>fft_N.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sin_table</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>fft___n_8c.html</Path>
    <Anchor>a05a893fdc5bb42525041479a95c32145</Anchor>
    <DeclaredIn>fft_N.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>len</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>fft___n_8c.html</Path>
    <Anchor>a4960e0db764d064fd8e2ed33fe9bdbe9</Anchor>
    <DeclaredIn>fft_N.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>fft___n_8c.html</Path>
    <Anchor>a854352f53b148adc24983a58a1866d66</Anchor>
    <DeclaredIn>fft_N.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTReal_CURRENT_HEADER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_f_f_t_real_8h.html</Path>
    <Anchor>a5386cb625b0754f62becb0eac67f5d46</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTReal_HEADER_INCLUDED</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_f_f_t_real_8h.html</Path>
    <Anchor>a1c01c2bbbc2964e267014f4e3afdb94b</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kOpPlus</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_variable_8h.html</Path>
    <Anchor>a41bea5872c6c808f0bf36a84f0a25485</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kOpTimes</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_variable_8h.html</Path>
    <Anchor>ac0999620c974e7714bb40b3c8c37dbad</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kOpMinus</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_variable_8h.html</Path>
    <Anchor>aa8ce9670a11b209a8d673ec1b254c369</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kOpDivided</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_variable_8h.html</Path>
    <Anchor>af2e03130409b66008f520d2fd25c041e</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kOpNegated</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_variable_8h.html</Path>
    <Anchor>aa5e5518ed93586372ef6718a7fc493be</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VOperator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a522d0f576bc4bbc4009b0caf4d5344b1</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>todo</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>todo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommunicatingSocket</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>a9192374d9baab8e189860aa8d913683c</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>aca4e86085c064641e86ae24ea29bbb94</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>a7cf1fd470c0060171b68df9f68c7bd01</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getForeignAddress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>a13f9eca30ef56836cf23c163c848c09e</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getForeignPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>a184fbb4775184b87ebd886a5587eb1a3</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLocalAddress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a0fca07bdfa97874fba1a17995ed7cda3</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLocalPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>ae01143b667d69483a2f53d0f4ce7eeed</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a773fe4a35146002de76952e16fdebcfa</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalAddressAndPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>aa6b986410bc2e606ba27d01fa7cb8836</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>ac5060aeb501044044351d5a85b3fc95f</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveService</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a982c63b25c5b756321a74074a275adbc</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommunicatingSocket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>a0017517b8d6e761fde0c40475af3b2ab</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommunicatingSocket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>a27d758db782b3be7d28741e92cb613d1</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sockDesc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>ad5704d2fdfb062139e1f88831617bbfb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Connection</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Connection</Scope>
    </TokenIdentifier>
    <Path>struct_connection.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Connection</Scope>
    </TokenIdentifier>
    <Path>struct_connection.html</Path>
    <Anchor>ad8f23f40ca49bf8ef8f7db1e5a46ed8e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>secondNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Connection</Scope>
    </TokenIdentifier>
    <Path>struct_connection.html</Path>
    <Anchor>a5376fff4798e20f972e3548aeba2fcdf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Controller</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Controller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>a48c4a2f33621df3657862211eb9c5e27</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Controller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>a95c56822d667e94b031451729ce069a9</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Controller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>a0ab87934c4f7a266cfdb86e0f36bc1b5</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_remote_addr_and_port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>a202cb85241ee303baf1970e632b76405</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>ac82c5f6c1b508a72ade5afd4d8b74edc</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>ab9b02e8fa0e35f18fbd4648cd5b2cbab</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>a07f3d56a136951098fc7f35ff5e7b84e</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remote_read_func</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>ae645e4a09f76f8c8e752f7d2d2c602f5</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start_reader_thread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>a059ea02eb3864260d5dd6123b20c48be</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_remote_data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>a60726fdfdaac83b9dfb454591bce42f9</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>a149ede6996e40156f568649d1a41726f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_velocity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>a07349785d8ac64218a54b2a143133ed3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glove_state</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>a8c6ee2cb5e85d23dc179a50ab316a0af</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>a9adee94a7b606fd84ea61fbb306b2fa2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>thread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>a35aac886f1fd617b318837bd3320873c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>foreign_port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>a055a13ae7c29104a8d05b95f2414c2f3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>foreign_net_address</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>a817b7bd89ffe4f933d818ebd467bde73</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>class_controller.html</Path>
    <Anchor>a731d22f887d2d8d9fc5420ad09eed2a1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>controller_str</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>controller_str</Scope>
    </TokenIdentifier>
    <Path>structcontroller__str.html</Path>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>controller_str</Scope>
    </TokenIdentifier>
    <Path>structcontroller__str.html</Path>
    <Anchor>a7d9e8955fdbfeb303b61b45f44b9aab6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>controller_str</Scope>
    </TokenIdentifier>
    <Path>structcontroller__str.html</Path>
    <Anchor>af4c0e44b874020b7f24e7003a59674ea</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>z</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>controller_str</Scope>
    </TokenIdentifier>
    <Path>structcontroller__str.html</Path>
    <Anchor>a97a5664754b3a29d5946268afa09fc95</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>controller_str</Scope>
    </TokenIdentifier>
    <Path>structcontroller__str.html</Path>
    <Anchor>ab222c4f2fbb11fc859f097d5fe4d5e20</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>controller_str</Scope>
    </TokenIdentifier>
    <Path>structcontroller__str.html</Path>
    <Anchor>ae9f06fb3d66c537542a10c491b2d8c2e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>controller_str</Scope>
    </TokenIdentifier>
    <Path>structcontroller__str.html</Path>
    <Anchor>ab5d1e2b50542f22d39a1288205cac8a0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glove_state</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>controller_str</Scope>
    </TokenIdentifier>
    <Path>structcontroller__str.html</Path>
    <Anchor>a062dc99cb9abc23db13ddc3d61d32fdf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTReal</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flt_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <Anchor>ada31be985e426271d81f373603272b11</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTReal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <Anchor>ac98f9b768dc122c212b6f6e4ce878e18</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFTReal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <Anchor>a28ef7dceefba4ab73b3fecdb68a56334</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>do_fft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <Anchor>aaef06fd9a9f9e070c5a64b8c4191c1b7</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>do_ifft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <Anchor>a8a09a4f467150be6714a2895654e9c83</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rescale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <Anchor>abf221c16cff2a4787765f4258c567a3a</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTReal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <Anchor>a1ebad9c5cbe255ff47e1e16cfa3184bd</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <Anchor>ae8c414cfa8cbf2e767d7d5da83aadd45</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <Anchor>ae353aed8b2ca1e3779a616309ac836c2</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <Anchor>aa6cb1a262290d52713382e5ce40498b2</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_bit_rev_lut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <Anchor>ab24e686a3b807eb9c186a5c8d62af332</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_trigo_lut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <Anchor>a83dbf5146fee4411bc9640cd2add6967</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sqrt2_2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <Anchor>aa04dbad4863a20847b0d532e2cbf812e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <Anchor>a10fa025196fafd071a86f536872a9618</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nbr_bits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <Anchor>a95eaee60efb0bea37854bb14782948ff</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_buffer_ptr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FFTReal</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real.html</Path>
    <Anchor>a5ba67ad51433f3cc971f9471ac49b3ad</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTReal::BitReversedLUT</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFTReal::BitReversedLUT</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real_1_1_bit_reversed_l_u_t.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BitReversedLUT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFTReal::BitReversedLUT</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real_1_1_bit_reversed_l_u_t.html</Path>
    <Anchor>a4884cc9476a18cd8dc4e6adadcaeda05</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BitReversedLUT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFTReal::BitReversedLUT</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real_1_1_bit_reversed_l_u_t.html</Path>
    <Anchor>acd6b43a503b288fd5438f950ec1408e1</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_ptr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFTReal::BitReversedLUT</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real_1_1_bit_reversed_l_u_t.html</Path>
    <Anchor>aaacc5dd9eb14b471cde94af8514284cd</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ptr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FFTReal::BitReversedLUT</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real_1_1_bit_reversed_l_u_t.html</Path>
    <Anchor>aec78994abe6de0454179b32a6c46041b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFTReal::TrigoLUT</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFTReal::TrigoLUT</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real_1_1_trigo_l_u_t.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TrigoLUT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFTReal::TrigoLUT</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real_1_1_trigo_l_u_t.html</Path>
    <Anchor>a72ce3a8c6dedb2e645ec67c2403c57a0</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TrigoLUT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFTReal::TrigoLUT</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real_1_1_trigo_l_u_t.html</Path>
    <Anchor>a1badcc873fb25be6ddb5d1c2298dcc01</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_ptr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFTReal::TrigoLUT</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real_1_1_trigo_l_u_t.html</Path>
    <Anchor>a11eac2658604a9de81df351f299a648b</Anchor>
    <DeclaredIn>FFTReal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ptr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FFTReal::TrigoLUT</Scope>
    </TokenIdentifier>
    <Path>class_f_f_t_real_1_1_trigo_l_u_t.html</Path>
    <Anchor>a47d7a8e201d482a4a145178942d5ff4a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Inst_Context</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Inst_Context</Scope>
    </TokenIdentifier>
    <Path>struct_inst___context.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Inst_Context</Scope>
    </TokenIdentifier>
    <Path>struct_inst___context.html</Path>
    <Anchor>a59a7b3fa10a23d013ba5f9ea62a45523</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>num</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Inst_Context</Scope>
    </TokenIdentifier>
    <Path>struct_inst___context.html</Path>
    <Anchor>ac4893d4e9263515560e6f03f8451f23c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Inst_Context</Scope>
    </TokenIdentifier>
    <Path>struct_inst___context.html</Path>
    <Anchor>af1e7bb623c1dadf37a4b55973ace856b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Orbit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Orbit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>a11634064bb08e732dc2089d3894daa30</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Orbit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>ade6aeddd2f80af7ace3dbc4fa8fabc0f</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculate_eccentricity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>af8858209e5050a584d65b68ecc08726c</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculate_orbital_params</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>afd54b783a8ba17fb99926cef5bbbcaee</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculate_absolute_position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>a356e5c53ae14ca0a949edebb1fe648cc</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculate_new_position_in_orbit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>a4e217de8826d8d8b807145136926bd93</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>afed4b16d1462217f2b8785ba4c3d6af4</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>a80f7d9179bd6ca0be8cf8c4b8f06c88e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>n</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>a834b9a99c476fff21542a61cc00b37da</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>e</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>a9df1de9d5dd95a0906c1e513b466b938</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>i</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>a220d15efae6505cc1961eb83c6d86f5f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>omega</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>a202a0ac149ab912a7bd56e1bf8b5fa5c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>w</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>a189683eb6f736a3c04f5dc5ce86bbabd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nu</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>a09e6ff9679bb962dde56df3635b49b8e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>e_vec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>a3041fc24ea77c0b4edb3912f06284df1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>n_vec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>a30348026bc9cbb1595fb6bcff97d0b5d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mu</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Orbit</Scope>
    </TokenIdentifier>
    <Path>class_orbit.html</Path>
    <Anchor>a44488a7886c98c0f5868900165c31f18</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PME</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add_pme_source</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>abea1995cd5329661c376c2e9fbe04d8f</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove_all_sources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>a98b752a41adc92379a57966539901d0f</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>manage_sources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>aa3306abdd6206a5f5879761777df48a4</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_remote_addr_and_port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>a9e17d0c13821fddbba5dedbc83cec80f</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start_management_thread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>a63c0e7b0bcc90c141322b4f4d5f1a8b8</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop_management_thread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>a77cd5fb6f45451d99c6c7b66537e5fa9</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PME</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>a1a963c7479060abe2fac536f94bc60c0</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PME</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>ad488ab3dcc831dc86f88f25078ab6bba</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PME</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>a3ff0d2990f8071444591f1d3af2d2867</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>management_func</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>a627434ab2d942ce40a0e1c8e44e150e6</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update_grabbed_position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>aebc4fb369b9f2ffc48afa3c3e2e0df4a</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check_for_grabbed_source</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>a5f95f7a0ae2bad47943dbe20ce62a03c</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>management_thread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>a291e79a25053151dc601d056589afab9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>controller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>acb5cff4ef22e06202737caef4c50e6d9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pme_source_list</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>a0a82833c20de10e0140226d5aa5db930</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>grabbed_source</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>af5ba16ccf19bf56ddf86457581cd3187</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>num_sources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>a147fa404d11f8e59b346ba8e60f60544</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>keep_processing_sources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PME</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e.html</Path>
    <Anchor>a4fd29ac373c465bb978ab252c464169e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PMESource</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>a1baf4096ed402421cb60d95cb68c0413</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>abf1df0f221eda77aee5c2e43cd41a30a</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update_position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>acdf3e9386f0e6646cb55b4a6ca319f02</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_orbit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>a2fc3196e06152dcccade3b090e73d400</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_current_move_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>acb15110dd428dfb19c3595b097351992</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_next_move_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>adae3f607b0d3d3d75741cea965f9837c</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update_move_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>a1d905fb59abf008b72dbf730ff7ab306</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_next_move_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>a5c43d7e8944d8190555618d4e2f51782</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_current_move_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>a43a53fd997e8267c8084887bea8cb6ab</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push_trace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>aff2171c0fdf894881b0b3b8abb27b34a</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset_trace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>a1a3e8457aeeb75ee5b5c372424db9617</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_bounce_velocity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>a15adf895de733dd3510441d7e10c2986</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_bounce_distance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>a234c43ce50f5c7a0e4f3e0b5da57ab33</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PMESource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>ab12c9b4543b4620e57942994a5d89ece</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PMESource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>af3e3baa123bcf643e4e9dff256c9b5b5</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PMESource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>ad6680b4e0a0308df2b607c8eedd969e6</Anchor>
    <DeclaredIn>PME.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>source</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>adda3c8c85e8f0fcf348181d16bb92ba0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orbit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>acdd993fb867737073e5b769ebb0833e6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>current_move_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>a4904c5713c6699b270df069b97e896e1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>next_move_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>a66d2c4fde686d8436c5fb0cc9cdcc959</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>a33965511ea7e3218787c84b7124c961d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bounce_distance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>ad2a37fba0133dd7a6be3e02602614c95</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bounce_velocity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>acd5bf24a89d31bcaccef60833a7da78b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>current_trace_index</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>a5b727134ee55e0335b92dbbd7fa2ae66</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trace_length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PMESource</Scope>
    </TokenIdentifier>
    <Path>class_p_m_e_source.html</Path>
    <Anchor>af14dc03c25867d7052d5d77cabc440a7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SAFliter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SAFliter</Scope>
    </TokenIdentifier>
    <Path>class_s_a_fliter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SAFliter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SAFliter</Scope>
    </TokenIdentifier>
    <Path>class_s_a_fliter.html</Path>
    <Anchor>a036972ec11cfc5ce5146d788a439b948</Anchor>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SAFliter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SAFliter</Scope>
    </TokenIdentifier>
    <Path>class_s_a_fliter.html</Path>
    <Anchor>ac383ab6e0e5072af2a4190b84989173a</Anchor>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SAFliter</Scope>
    </TokenIdentifier>
    <Path>class_s_a_fliter.html</Path>
    <Anchor>a9eab89a1fdf9aee9949e8f7614241635</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Test_Effects.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SAFliter</Scope>
    </TokenIdentifier>
    <Path>class_s_a_fliter.html</Path>
    <Anchor>a0260800fb8f275d40cbd0820e49f1b18</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SAFliter</Scope>
    </TokenIdentifier>
    <Path>class_s_a_fliter.html</Path>
    <Anchor>a46e8fd873a16fc96ae717fd60795890c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Socket</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Socket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>aeac4eb6379a543d38ed88977d3b6630a</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLocalAddress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a0fca07bdfa97874fba1a17995ed7cda3</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLocalPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>ae01143b667d69483a2f53d0f4ce7eeed</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a773fe4a35146002de76952e16fdebcfa</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalAddressAndPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>aa6b986410bc2e606ba27d01fa7cb8836</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>ac5060aeb501044044351d5a85b3fc95f</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveService</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a982c63b25c5b756321a74074a275adbc</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Socket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a53e00027bab2125a2b407914c6148589</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Socket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a6a2609eef6559336a595a336f138d395</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sockDesc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>ad5704d2fdfb062139e1f88831617bbfb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Socket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a656389d58fa00729ff70c4e159623f5c</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a1ef8f4c222c32756c8b1537323702df8</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SocketException</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SocketException</Scope>
    </TokenIdentifier>
    <Path>class_socket_exception.html</Path>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SocketException</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SocketException</Scope>
    </TokenIdentifier>
    <Path>class_socket_exception.html</Path>
    <Anchor>abb5bcecd9d9e20868c237ec5a82cf5c3</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SocketException</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SocketException</Scope>
    </TokenIdentifier>
    <Path>class_socket_exception.html</Path>
    <Anchor>a659557c899329aea01977c980c4db9b9</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SocketException</Scope>
    </TokenIdentifier>
    <Path>class_socket_exception.html</Path>
    <Anchor>a06b7b3f186976bb5ec7e7bf007c4f0ac</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>userMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SocketException</Scope>
    </TokenIdentifier>
    <Path>class_socket_exception.html</Path>
    <Anchor>adcfeba6d4ce5754b48ae9d37b07a7e87</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TCPServerSocket</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TCPServerSocket</Scope>
    </TokenIdentifier>
    <Path>class_t_c_p_server_socket.html</Path>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TCPServerSocket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TCPServerSocket</Scope>
    </TokenIdentifier>
    <Path>class_t_c_p_server_socket.html</Path>
    <Anchor>ae559a3154527d09fe14a8e5ee1f53d7a</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TCPServerSocket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TCPServerSocket</Scope>
    </TokenIdentifier>
    <Path>class_t_c_p_server_socket.html</Path>
    <Anchor>a3908fecb1b038f7c14fcc7726f54d01d</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TCPServerSocket</Scope>
    </TokenIdentifier>
    <Path>class_t_c_p_server_socket.html</Path>
    <Anchor>a1d161137e1b069de7a7bfc14d3f8212c</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLocalAddress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a0fca07bdfa97874fba1a17995ed7cda3</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLocalPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>ae01143b667d69483a2f53d0f4ce7eeed</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a773fe4a35146002de76952e16fdebcfa</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalAddressAndPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>aa6b986410bc2e606ba27d01fa7cb8836</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>ac5060aeb501044044351d5a85b3fc95f</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveService</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a982c63b25c5b756321a74074a275adbc</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sockDesc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>ad5704d2fdfb062139e1f88831617bbfb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setListen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TCPServerSocket</Scope>
    </TokenIdentifier>
    <Path>class_t_c_p_server_socket.html</Path>
    <Anchor>a1f39a2e6721ab62d8875a234eb300bab</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TCPSocket</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TCPSocket</Scope>
    </TokenIdentifier>
    <Path>class_t_c_p_socket.html</Path>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TCPSocket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TCPSocket</Scope>
    </TokenIdentifier>
    <Path>class_t_c_p_socket.html</Path>
    <Anchor>a7a50427a401d1a6f3209d51818bad901</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TCPSocket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TCPSocket</Scope>
    </TokenIdentifier>
    <Path>class_t_c_p_socket.html</Path>
    <Anchor>a7b246b66f6dc3246ab2777b771e5f917</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>a9192374d9baab8e189860aa8d913683c</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>aca4e86085c064641e86ae24ea29bbb94</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>a7cf1fd470c0060171b68df9f68c7bd01</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getForeignAddress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>a13f9eca30ef56836cf23c163c848c09e</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getForeignPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>a184fbb4775184b87ebd886a5587eb1a3</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLocalAddress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a0fca07bdfa97874fba1a17995ed7cda3</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLocalPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>ae01143b667d69483a2f53d0f4ce7eeed</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a773fe4a35146002de76952e16fdebcfa</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalAddressAndPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>aa6b986410bc2e606ba27d01fa7cb8836</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>ac5060aeb501044044351d5a85b3fc95f</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveService</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a982c63b25c5b756321a74074a275adbc</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sockDesc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>ad5704d2fdfb062139e1f88831617bbfb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TCPSocket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TCPSocket</Scope>
    </TokenIdentifier>
    <Path>class_t_c_p_socket.html</Path>
    <Anchor>a4763ac3be0d7d5e143884bef45e351c5</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TCPServerSocket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>TCPSocket</Scope>
    </TokenIdentifier>
    <Path>class_t_c_p_socket.html</Path>
    <Anchor>ae8bcdc0d25881a17b23e557296236fa9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UDPSocket</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>UDPSocket</Scope>
    </TokenIdentifier>
    <Path>class_u_d_p_socket.html</Path>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UDPSocket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>UDPSocket</Scope>
    </TokenIdentifier>
    <Path>class_u_d_p_socket.html</Path>
    <Anchor>a4f86f3023f5a08f6355802599a10e100</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UDPSocket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>UDPSocket</Scope>
    </TokenIdentifier>
    <Path>class_u_d_p_socket.html</Path>
    <Anchor>a14dcb55c4b60b12d4a7fff648cbb825f</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UDPSocket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>UDPSocket</Scope>
    </TokenIdentifier>
    <Path>class_u_d_p_socket.html</Path>
    <Anchor>af19281c523f15ed30d7d78f09033713d</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disconnect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>UDPSocket</Scope>
    </TokenIdentifier>
    <Path>class_u_d_p_socket.html</Path>
    <Anchor>a7482e8e61cef160e1a7c0d6ac15c01be</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>UDPSocket</Scope>
    </TokenIdentifier>
    <Path>class_u_d_p_socket.html</Path>
    <Anchor>a41a3595e226f273953cbd38618af5d5b</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recvFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>UDPSocket</Scope>
    </TokenIdentifier>
    <Path>class_u_d_p_socket.html</Path>
    <Anchor>abcd5c064e2496bd8b1888fd4e1b68949</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMulticastTTL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>UDPSocket</Scope>
    </TokenIdentifier>
    <Path>class_u_d_p_socket.html</Path>
    <Anchor>a4dcfff33b45d1b84b5a602fc6f4a27f8</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>UDPSocket</Scope>
    </TokenIdentifier>
    <Path>class_u_d_p_socket.html</Path>
    <Anchor>a1b20c1e8bd49a9bd9b53dd4f1c8d4c11</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leaveGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>UDPSocket</Scope>
    </TokenIdentifier>
    <Path>class_u_d_p_socket.html</Path>
    <Anchor>a78835eaeca8a5ac039b4579c795e3640</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>a9192374d9baab8e189860aa8d913683c</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>aca4e86085c064641e86ae24ea29bbb94</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>a7cf1fd470c0060171b68df9f68c7bd01</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getForeignAddress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>a13f9eca30ef56836cf23c163c848c09e</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getForeignPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommunicatingSocket</Scope>
    </TokenIdentifier>
    <Path>class_communicating_socket.html</Path>
    <Anchor>a184fbb4775184b87ebd886a5587eb1a3</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLocalAddress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a0fca07bdfa97874fba1a17995ed7cda3</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLocalPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>ae01143b667d69483a2f53d0f4ce7eeed</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a773fe4a35146002de76952e16fdebcfa</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalAddressAndPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>aa6b986410bc2e606ba27d01fa7cb8836</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>ac5060aeb501044044351d5a85b3fc95f</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolveService</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>a982c63b25c5b756321a74074a275adbc</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sockDesc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Socket</Scope>
    </TokenIdentifier>
    <Path>class_socket.html</Path>
    <Anchor>ad5704d2fdfb062139e1f88831617bbfb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBroadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>UDPSocket</Scope>
    </TokenIdentifier>
    <Path>class_u_d_p_socket.html</Path>
    <Anchor>a316f08a017aa160643812f3c08734d27</Anchor>
    <DeclaredIn>PracticalSocket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Abstract>Convolver.h – The way-simplified convolution class. This is an FFT-based convolver that uses the Nay...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AccessorVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a734ef5998654afa826d6a009d19a59c1</Anchor>
    <Abstract>Typedef for AccessorVector object. </Abstract>
    <DeclaredIn>Accessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>THREAD_START_ROUTINE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a49b3f7e5149273a7a82e06695809c9d1</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SoundFileMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a4ade6957da2b012211453bd36eecf3e2</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SoundFileFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a2022a31a2ae858ba627d79ee25c8355d</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObserverVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a87b5f869d6b5e64cd1c76b75176a7a98</Anchor>
    <Abstract>Forward declaration. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FloatArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>aea673561142515c0c9144c61ff347aaa</Anchor>
    <Abstract>&lt; All of CSL takes place within the &quot;csl&quot; namespace </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FloatArrayPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>aef010c02fb2606197ad43b01d75aaa7e</Anchor>
    <Abstract>float pointer pointer type </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a9c90bbf38f5866df02d02866d23a58ea</Anchor>
    <Abstract>(could be changed to int, or double) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>af93f71394fa25ce10e8391bc0fb4d119</Anchor>
    <Abstract>the same, written upper-case </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a2e5ffaea3f06948bf8e7a26295dca9d5</Anchor>
    <Abstract>1-channel buffer data type, vector of (sample) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleBufferVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>af1aacd57c6b1a999e7ee2a805b45d29f</Anchor>
    <Abstract>Multi-channel buffer data type, vector of (SampleBuffer) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleBufferArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5468915ef5d90d6abdf66497b460b510</Anchor>
    <Abstract>Multi-channel buffer data type. </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleComplex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>af4a243f6b239f2f9ebecefd32787808f</Anchor>
    <Abstract>array-of-2 complex # type (like FFTW) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleComplexVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ae7dfe0e6f92a11ba45b1d6105ea5ae86</Anchor>
    <Abstract>complex vector </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleComplexPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a7c05d6df6a71ccfe0747c23a3d14ea39</Anchor>
    <Abstract>complex pointer </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleComplexMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5d13a81bb1b03d0d709218ee6c977bd9</Anchor>
    <Abstract>complex 2D matrix </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PointVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>abbf5816554d727c3a2c7059d269710ec</Anchor>
    <Abstract>Forward declaration. </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnsignedVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>af79112bfe54941c864f0391148fbd5fb</Anchor>
    <Abstract>A vector of unsigneds. </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FloatVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a20244cbefb10ad5b0533dd497ff0813d</Anchor>
    <Abstract>A vector of floats. </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VoidFcnPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a56dbaa99d848a337b3120df93ba5542e</Anchor>
    <Abstract>the generic void fcn pointer </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VoidFcnPtrN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a491909204bc69b2190e3db5ecf7cc6c3</Anchor>
    <Abstract>the truly void fcn pointer </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a49f8529fd5f0399eb3b3831ea4417fa9</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_MAP_KEY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac5e77b55f839f35209cc64fd74d363d3</Anchor>
    <Abstract>Forward declaration. </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PortMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a7e27938ef503d88d7263417b8a4b2480</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BufferVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a648c427c49b2d9983098929f059ce27e</Anchor>
    <Abstract>Buffer/UGenVector: unit generator pointers (used for outputs) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UGenVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac691ba988d2f64914df347b0cddfc3e9</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UGenMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a2a068dcc937137c6711ab84bdd742660</Anchor>
    <Abstract>UGenMap: a named map of unit generators (used for GUIs) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UGenIMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>afde5b84ce7a1b40eb50f2a72dd093f94</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FloatMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a3283b1e465a972cfda68c3788fb05c72</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IODeviceVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>af431c61923adead2285c6d83ecbba1b9</Anchor>
    <Abstract>IOs hold onto device vectors. </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstrumentVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ad07705909e8f93080be3f68d7b763387</Anchor>
    <Abstract>Players hold onto Instrument vectors/maps. </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstrumentLibrary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>adf892e2d3141b3742b1dfd210e5238a8</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstrumentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a163e7faf725b15f14538d9c88423b892</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a0813cda451a389aa40d3f909bd4a6666</Anchor>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Timestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ada7631e5b457e428307368114e6fba93</Anchor>
    <Abstract>Timestamp type: we assume that we can get the host&amp;#39;s best guess at the IO word clock (normally passed...</Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilterType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ae4756e82a43a2fa653f5f341372b87dd</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InOutFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac550f80f84e6e9df18f719fdd30f88b0</Anchor>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LineMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a294f8957c5dffb900bef7d2971ff08d3</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Breakpoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ace598ff3e15a3bb28bffb5fa69479579</Anchor>
    <Abstract>a map between a time and a line segment </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Grain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>aee1aed7f4066712c295e6dec02d63f37</Anchor>
    <Abstract>Grain data structure This implementation uses a linked list data structure. You might want to add a f...</Abstract>
    <DeclaredIn>Granulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InterpolationPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ae2e617db7a9904ff0d20e111308c8dbb</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PartialDescriptionMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ab089b9d3efc288214632c28ba9da723a</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HRTFVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a59b02713a67587b4f6682884d994f0bd</Anchor>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PointMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac757ccc065e8c555a30fcf12b92b4791</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VOperator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a522d0f576bc4bbc4009b0caf4d5344b1</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy_CSL_MIDIMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>abea5ad4204ba302b456e4e23fb7cb5e0</Anchor>
    <Abstract>copy_CSL_MIDIMessage – copies CSL_MIDIMessage </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_MIDIMessageToPmEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>abb40606ce15868fb182b53ccb61574cd</Anchor>
    <Abstract>CSL_MIDIMessageToPmEvent – converts CSL_MIDIMessage to PmEvent. </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PmEventToCSL_MIDIMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a50169416ae8c22af2ee26f43b0adac94</Anchor>
    <Abstract>PmEventToCSL_MIDIMessage – converts PmEvent to CSL_MIDIMessage. </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Message_ChannelToStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a9566760d3ab76504407536ca36b01e58</Anchor>
    <Abstract>Message_ChannelToStatus – converts from message and channel to status byte. </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteIO_read_loop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ae995dafbe6c68682527ecf0711e46ebd</Anchor>
    <DeclaredIn>RemoteIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RS_read_loop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a7389a0812ba23655b413c475c020f37d</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_CreateThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac1db4c6c8383e3b7137972cc94b77c7e</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a7ef740bb89a5ccd885a745334c83e36d</Anchor>
    <Abstract>These are the public logging messages. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>af9c507f5ab0614ab64a6cc8b359eae78</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsgNN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>aa883e3cb5d0f8cb16faf749178a3bbc7</Anchor>
    <Abstract>no-newline versions </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsgNN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a6c2ba7090e1dac5013c5ba575ce15cee</Anchor>
    <Abstract>Log the file &amp; line #. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a031fdc35f171374eff3dd06a990804f7</Anchor>
    <Abstract>Log the file &amp; line #. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logURL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a049cfb7d49c1607657475e9370d637eb</Anchor>
    <Abstract>log file/line as a URL </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vlogMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>af99219a68453bf1e839e78cba95016bd</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sleepUsec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a9cbdb3c3bb5c8dc4caca61eaff27664f</Anchor>
    <Abstract>Misc. global functions in the csl namespace. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sleepMsec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a2c42298de7cb03404809ad2359648476</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sleepSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a1012552a22ad6d30722e1a813743f1ed</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timeNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>acb93ee4b0bb8946307343ebc0afe4ec2</Anchor>
    <Abstract>high-accuracy system or IO time in ticks </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fTimeNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>aa6791ff178ae21bb5e9139236883c823</Anchor>
    <Abstract>system or IO time in seconds </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fRandZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a10f527b7a1c9f047733c79c678b001d2</Anchor>
    <Abstract>A variety of useful random-number functions. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fRand1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a1e57e4f3f987273d7039c323672e2b04</Anchor>
    <Abstract>-1 - 1 (one) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fRandV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a3ed546fdbc39d59ade6741085996a46d</Anchor>
    <Abstract>0 - v (val) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fRandM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ad27daa4fa06ee1d7301419d4b4905cda</Anchor>
    <Abstract>min - max (min/max) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fRandR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a70822f8dff36fb615b703d87140b5683</Anchor>
    <Abstract>b +- (r * b) (range) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fRandB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a510c764112f1c9c9d02a4c36162b5452</Anchor>
    <Abstract>b +- r (base) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iRandV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a81d0f12c8138f294c04155f53787473e</Anchor>
    <Abstract>Integer rands. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iRandM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>af8e785c4334c187c99a97f7cdb883295</Anchor>
    <Abstract>min - max (min/max) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iRandB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a0735d15bcba1bd3bfbb507bd2c6f4da5</Anchor>
    <Abstract>b +- r (base) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ad469415ebf6f41b88aab32f79a57280a</Anchor>
    <Abstract>Answer true or false. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ae3abe9f19304be21f56be07090a1d228</Anchor>
    <Abstract>Answer with a bias (1 –&gt; always true) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>keyToFreq</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a9ca5f413ea39083d3457f13db181a123</Anchor>
    <Abstract>MIDI Conversions. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freqToKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ace00e2bf3cce796f325ed30d3ddac8bd</Anchor>
    <Abstract>freqToKey – converts from frequency in Hz to MIDI key # </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>singularValueDecomposition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a9e59f270c22b987a5b06484abc53b98f</Anchor>
    <Abstract>Utility function used in calculating the inverse of a matrix, used in AmbisonicDecoder for the pseudo...</Abstract>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fumaEncodingWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a00d2bb3af40df0438f5af4f06cde1f26</Anchor>
    <Abstract>Utility function that calculates fuma encoding weights for a given order, azimuth and elevation...</Abstract>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fumaIndexedEncodingWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a260525bb28882f9122be05f080ae141f</Anchor>
    <Abstract>Utility function that calculates fuma encoding weights for a given order, azimuth and elevation...</Abstract>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kNumParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ab79a9af96f7fda3d1a984ccf62178feda4dc401e131b73627f57efb0a5c77bda7</Anchor>
    <DeclaredIn>WhiteNoiseInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kThresh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ab79a9af96f7fda3d1a984ccf62178feda425cf6eb7dc42ba9603dab72994189b4</Anchor>
    <DeclaredIn>WhiteNoiseInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kWindowSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ab79a9af96f7fda3d1a984ccf62178feda2ba26ecfa602e3210776d20450d0e4f5</Anchor>
    <DeclaredIn>WhiteNoiseInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kNumBins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ab79a9af96f7fda3d1a984ccf62178fedad93d7915d39a3e178a0eb20c63e642ea</Anchor>
    <DeclaredIn>WhiteNoiseInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ab79a9af96f7fda3d1a984ccf62178fedad724fdd15a23c5ee13f13833a982c5fb</Anchor>
    <DeclaredIn>WhiteNoiseInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kNumParams</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ab79a9af96f7fda3d1a984ccf62178feda6bb7cc5910a0793afb0909ca675dc0bb</Anchor>
    <DeclaredIn>WhiteNoiseInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kNone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6a83dda44f162ccaf5438501871d11858a</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kNoteOff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6a6d5a304742bc4bf86303029b6d37280a</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kNoteOn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6a55823aff06d70659325a9c1553f2578e</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kPolyTouch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6aa6bd08fdcd09750f381c287c389b1512</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kControlChange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6a4c612d4ccc054b9f1705e52f6fc6bda1</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kProgramChange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6accc1122101e17bcc7ce97b91691e3a79</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kAftertouch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6a137fb0579bb424dc00226cacb1755385</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kPitchWheel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6a8d5c7e2211997228e6250cecb1572ab7</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kSysEX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6aa33126e67683b9b679c39b15fced1927</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kNone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6a83dda44f162ccaf5438501871d11858a</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kNoteOff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6a6d5a304742bc4bf86303029b6d37280a</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kNoteOn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6a55823aff06d70659325a9c1553f2578e</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kPolyTouch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6aa6bd08fdcd09750f381c287c389b1512</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kControlChange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6a4c612d4ccc054b9f1705e52f6fc6bda1</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kProgramChange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6accc1122101e17bcc7ce97b91691e3a79</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kAftertouch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6a137fb0579bb424dc00226cacb1755385</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kPitchWheel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6a8d5c7e2211997228e6250cecb1572ab7</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kSysEX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a8d0bb7b7a5b1a54cbd43e67d48c555d6aa33126e67683b9b679c39b15fced1927</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kLogInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>abac90833d4619f34250e6a669ff127c7a3885ed19aceb2ef202eec45075b1076a</Anchor>
    <Abstract>Enumeration for log message severity level. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kLogWarning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>abac90833d4619f34250e6a669ff127c7a485102c8bc69cd88ffc89bf5d91411b3</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kLogError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>abac90833d4619f34250e6a669ff127c7a32856b6dbfa48d010094cd39ef0ebdb7</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kLogFatal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>abac90833d4619f34250e6a669ff127c7abf286eb4ffb00881ba4b44a07c3c312e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5af458483d71530692674c12d94d67e7af150be1bd16d08aba03503029871090d</Anchor>
    <Abstract>Regular audio samples. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kSpectra</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5af458483d71530692674c12d94d67e7a8a318b71438ee65bd42765f231b526ed</Anchor>
    <Abstract>FFT complex spectral frames. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kLPCCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5af458483d71530692674c12d94d67e7a0901f35eceec4fedb0fb0b27dbfef8b4</Anchor>
    <Abstract>LPC reflection coefficients. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kIRData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5af458483d71530692674c12d94d67e7aa2b7121a60c350a5f123d29b025184ad</Anchor>
    <Abstract>FIR Impulse Response frames. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kWavelet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5af458483d71530692674c12d94d67e7a3a00ca511a7c71f7cc9c06b95a337650</Anchor>
    <Abstract>Wavelet coefficients. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5af458483d71530692674c12d94d67e7ae364a85696d03e26254ba59faa0ec34a</Anchor>
    <Abstract>Spatial geometry buffers. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kUnknown</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5af458483d71530692674c12d94d67e7a56d9787fbf6518466818b6d8c8b4d555</Anchor>
    <Abstract>Unknown or other data type. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ab643cfedf47a3924126b5ff703eae29baa9e680ac8d474993f51fe6cf33797807</Anchor>
    <Abstract>compute 1 channel and copy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kExpand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ab643cfedf47a3924126b5ff703eae29ba196bb6b87762914aaada00b2e2eae238</Anchor>
    <Abstract>call monoNextBuffer multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kIgnore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ab643cfedf47a3924126b5ff703eae29ba8a962be1944af47bcefc32855c5268d9</Anchor>
    <Abstract>ignore extra buffer channels </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kPositionStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ad581b11596079b5e108e260d8480380ca007f48e136a6bcf5ee1caa803182b2a5</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kPositionCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ad581b11596079b5e108e260d8480380ca5610ab0ecff110bfb53994069989eee1</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kPositionEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ad581b11596079b5e108e260d8480380ca4de8e1e5e6848cc2f8b703c84dece57e</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kIONew</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a440dbcbda1bbc58f088ae31dfbcb3f67a4a3159bbf70e3934011566b8051080d3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kIOInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a440dbcbda1bbc58f088ae31dfbcb3f67ad10a21482ca1c9450cb87fce5468b2f9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kIOOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a440dbcbda1bbc58f088ae31dfbcb3f67a0678a1534dc2ada7457a278bc7be2f8a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kIORunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a440dbcbda1bbc58f088ae31dfbcb3f67a6707b6056769a8669d44fa0cf145ac41</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kIOClosed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a440dbcbda1bbc58f088ae31dfbcb3f67ade34be5f695caba8c145648f4eec8605</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kIOExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a440dbcbda1bbc58f088ae31dfbcb3f67ac76e1c441f036a3cc0f1865ccd6dfb36</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kOk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac2c2565225bd914df34848bfcc5517f6aaa59f61470af66f345ad160987eca8c2</Anchor>
    <Abstract>&quot;OK&quot; return status </Abstract>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kFound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac2c2565225bd914df34848bfcc5517f6acdfcb4f9849df5e2ba299bd6b421d97d</Anchor>
    <Abstract>&quot;found&quot; return status </Abstract>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kNotFound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac2c2565225bd914df34848bfcc5517f6aa0c74ff9c94bab40439704ccd052b36f</Anchor>
    <Abstract>&quot;not found&quot; return status </Abstract>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac2c2565225bd914df34848bfcc5517f6ab4f9930c15fdd9b011104f62759ea36d</Anchor>
    <Abstract>&quot;empty&quot; return status </Abstract>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kErr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac2c2565225bd914df34848bfcc5517f6a452950010f4a2bea6156404e12a824d3</Anchor>
    <Abstract>&quot;error&quot; return status </Abstract>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kMin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a86daae45e8e75cc60983b1e464a3bbc1a815c66dd62c5cd9ee2952ad7f24a6f50</Anchor>
    <DeclaredIn>Clipper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a86daae45e8e75cc60983b1e464a3bbc1a75550571e5400544a7e4494f69083879</Anchor>
    <DeclaredIn>Clipper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kBoth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a86daae45e8e75cc60983b1e464a3bbc1ac18cdd279f63c3c537c36ca6a68bea82</Anchor>
    <DeclaredIn>Clipper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kFree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ab018a0dfbf920a92b094024e343148eea39e0c80c5e589948a357728ae1dcc7e4</Anchor>
    <Abstract>free state </Abstract>
    <DeclaredIn>Granulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kDSP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ab018a0dfbf920a92b094024e343148eeaaf65302c79ca10b7f1d5c47e4fa3f8de</Anchor>
    <Abstract>calculating audio samples </Abstract>
    <DeclaredIn>Granulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kSched</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ab018a0dfbf920a92b094024e343148eead2250533567535a6b602532579006190</Anchor>
    <Abstract>scheduling grains </Abstract>
    <DeclaredIn>Granulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kPSEUDOINVERSE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a6eb455fefa5dbe2d2e2ac940a9fe8a53ad3a4e2d8ddc4459eb74255672c5e5516</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kPROJECTION</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a6eb455fefa5dbe2d2e2ac940a9fe8a53adc71e2ca19a515b683d445075347a322</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kBASIC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5c85f74d4716858c62c3d50f45d4b68eabce9238d0ff7e501a9e0e69b6bce8a20</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kINPHASE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5c85f74d4716858c62c3d50f45d4b68ea823d0f5107cb7f572f01f0383bf33b47</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kMAXRE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5c85f74d4716858c62c3d50f45d4b68eadc2e2840e7ee71f287816567ea7cee0f</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kTILT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5ce0ce604e0e0d6fb264300837887d43a52e6387936ce0d8a295aefd3c441625f</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kTUMBLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5ce0ce604e0e0d6fb264300837887d43ab4465c2ffbdf140c239b5b1c805b30d0</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kROTATE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a5ce0ce604e0e0d6fb264300837887d43af033bc6f7518455844e0f08624cedbe1</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kMarble</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a09ef78d917dbd97d3a1dd7e9237eff92a4531966b54fea7c8635bd027466961a6</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kConcrete</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a09ef78d917dbd97d3a1dd7e9237eff92aab56a3c1af79230c08efa7c46474516c</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kBrick</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a09ef78d917dbd97d3a1dd7e9237eff92acba59f42df9781d8a20f52bbbc092ce5</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kGlass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a09ef78d917dbd97d3a1dd7e9237eff92a44cdb08875f08701e2d3047f6b728bc3</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kWood</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a09ef78d917dbd97d3a1dd7e9237eff92a90e6cef57e42a99396ea77cb80fe926b</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kAutomatic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>abbcd4b0b66467bc98cd7b0e18f23721aa0bfab71fe931bc4c7bea13a30f46ec5a</Anchor>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kBinaural</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>abbcd4b0b66467bc98cd7b0e18f23721aa38104cdba75d64b1be6c5a6c6b2c42f3</Anchor>
    <Abstract>HRTF 2-channel panning. </Abstract>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kVBAP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>abbcd4b0b66467bc98cd7b0e18f23721aa363ab9ea1f540283f46d7373fbd019bf</Anchor>
    <Abstract>Vector Base Amplitude Panning. </Abstract>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kAmbisonic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>abbcd4b0b66467bc98cd7b0e18f23721aa990e3ee7269c4cf501549d78c57762ee</Anchor>
    <Abstract>Full 3D Ambisonics. </Abstract>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kSimple</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>abbcd4b0b66467bc98cd7b0e18f23721aa7348581b05aa7761b438c40b0d37a52a</Anchor>
    <Abstract>Simple panning/filtering spatializer. </Abstract>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kWFS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>abbcd4b0b66467bc98cd7b0e18f23721aae159ec6f757691dd54b72869596aabbf</Anchor>
    <Abstract>Wave Field Synthesis. </Abstract>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kTruncate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac5b6adff8fa0a25e336fa0fd3f70c841abcd0efe94cb4277c982b8f08d113ad27</Anchor>
    <DeclaredIn>DLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kLinear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac5b6adff8fa0a25e336fa0fd3f70c841afd9ef4a7c19308888ccc367d5d317075</Anchor>
    <DeclaredIn>DLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kAllPass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ac5b6adff8fa0a25e336fa0fd3f70c841a31b74485e6b9fa62166251508d522ec1</Anchor>
    <DeclaredIn>DLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kAuto</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ad50dc2adb06a7b131f98c7eaaaa826caa8c4ffd482a273f50e1441701629f611d</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kPantophonic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ad50dc2adb06a7b131f98c7eaaaa826caad3cf179975d2c99b10e7eb196c356861</Anchor>
    <Abstract>Only uses the horizontally placed speakers (zero elevation) </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kPeriphonic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>ad50dc2adb06a7b131f98c7eaaaa826caa14b6888a26727f38ef86bfed23c46b03</Anchor>
    <Abstract>Full 3D VBAP. </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_FFT_REAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a43b6ef5ac5ebbd89646ca593e5aaa09da9fb5e4c03ca33f7d76364d3417d99e44</Anchor>
    <DeclaredIn>FFT_Wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_FFT_COMPLEX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a43b6ef5ac5ebbd89646ca593e5aaa09da33b5a91793f688bc749245ae4b52003f</Anchor>
    <DeclaredIn>FFT_Wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_FFT_MAGPHASE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a43b6ef5ac5ebbd89646ca593e5aaa09da31c1c89ad2b88859a804bd951a3e8dc4</Anchor>
    <DeclaredIn>FFT_Wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_FFT_FORWARD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a6c0450b399878c57afc7365708142057a04d5da509aa8f06a95d91089f8bd2c39</Anchor>
    <DeclaredIn>FFT_Wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_FFT_INVERSE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>csl</Scope>
    </TokenIdentifier>
    <Path>namespacecsl.html</Path>
    <Anchor>a6c0450b399878c57afc7365708142057a970063c67256c8f89dbfd1938685bd69</Anchor>
    <DeclaredIn>FFT_Wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Abst_FFT_W</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Abst_FFT_W</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___f_f_t___w.html</Path>
    <Abstract>Abstract FFT class can do forward/reverse real/complex I/O FFTs. </Abstract>
    <DeclaredIn>FFT_Wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Abst_FFT_W</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_FFT_W</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___f_f_t___w.html</Path>
    <Anchor>abe9ed18725de85d80905c67706269e82</Anchor>
    <Abstract>Constuctor sets up twiddle factor tables. </Abstract>
    <DeclaredIn>FFT_Wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Abst_FFT_W</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_FFT_W</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___f_f_t___w.html</Path>
    <Anchor>ae10bf08fd6a551b7c668c4026ac8d079</Anchor>
    <DeclaredIn>FFT_Wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_FFT_W</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___f_f_t___w.html</Path>
    <Anchor>a2116f3aef5bc1bc417cbf855d729c30b</Anchor>
    <Abstract>destructor frees tables </Abstract>
    <DeclaredIn>FFT_Wrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_FFT_W</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___f_f_t___w.html</Path>
    <Anchor>a9b86442fc057b812d5341fcf077bf406</Anchor>
    <Abstract>FFT length. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_FFT_W</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___f_f_t___w.html</Path>
    <Anchor>a8ab7c6ee00d8e8354a2e98152fca976e</Anchor>
    <Abstract>FFT length / 2 + 1. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_FFT_W</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___f_f_t___w.html</Path>
    <Anchor>a1fa0cd7d8fac82014e49453ac093fcbd</Anchor>
    <Abstract>real/complex output </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_FFT_W</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___f_f_t___w.html</Path>
    <Anchor>aa01c5b8416f9fc1fa0f3e53a47caa456</Anchor>
    <Abstract>forward/reverse </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Abst_SoundFile</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Abstract>Here&amp;#39;s the abstract sound file reader/writer class, a sample player UGen. The concrete subclasses rep...</Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Abst_SoundFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a93e34149a42577384b105163a01d2be3</Anchor>
    <Abstract>Constructor. Values not passed default to null. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Abst_SoundFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1d22e7a6d6b2d4eb2b257214d8de3990</Anchor>
    <Abstract>Copy constructor – shares sample buffer. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Abst_SoundFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a5e17e9281ed0a25afd9315a65bff17b4</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openForRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a9f122bb280dc9cd26d2ea7dc5e67b81c</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openForWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a42fecadd50ca8f1b82803623f3a5c44b</Anchor>
    <Abstract>Open a file for writing. Default values are some common format. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seekTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a943e952f326133aafd189f841e6dd0fd</Anchor>
    <Abstract>seek to some position relative to &quot;whence&quot; </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seekTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a91a9c0a87cfadef30c85c87036e0c44d</Anchor>
    <Abstract>read a buffer from the file (possibly all of it) </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readBufferFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a37448399f0eeaac06f95d3d4e89eceac</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1c0a5b8c0b7b88f6aededaf3cac11b3a</Anchor>
    <Abstract>UGen operations are implemented here copy next buffer from file cache. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ab304e124e6552b2a45af01df3d25ff63</Anchor>
    <Abstract>write a buffer of data into the file </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a92dad375e86953b5fbf1485cfcf0f3e7</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a81eea91b52e169befa68a5a29d3da112</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a05e5efd5f4d9e3b8f3d5b232f9a3837f</Anchor>
    <Abstract>accessors </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ac956abb9c44bb61ab9ca4f523ae4b0ba</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>durationInSecs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>abb47af4a2d3f91e54fc2f41f484df3e5</Anchor>
    <Abstract>number of frames in the sound file </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sampleSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a761cf27eb474b6b59da6adbf7a39c020</Anchor>
    <Abstract>get the bytes-per-sample </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a474309df902bbd2fa3a40ef349e0beda</Anchor>
    <Abstract>r/w mode </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1712da90ed0fb0f942a200efcd082e39</Anchor>
    <Abstract>size in frames of cached portion </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mergeToMono</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a8c7c51e6f47210ce696acab098407de5</Anchor>
    <Abstract>average all the channels to mono </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setToEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad31170b93471b41f3631443778f3c70e</Anchor>
    <Abstract>set to end position </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a793fb9e9842dec545a2103beade94d71</Anchor>
    <Abstract>reset to start </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a5c4fd3733462ae7e510ce508bb7f48bf</Anchor>
    <Abstract>close file </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aff53ca4f2f799ec07ec8f97d1943b30c</Anchor>
    <Abstract>free the file cache </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad6d37c628d7f8c76774a173263959829</Anchor>
    <Abstract>perform sample-rate conversion </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a27c2487b064c91a585a7dac86bceaa3c</Anchor>
    <Abstract>answer if a valid file/buffer </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aa41bac4065f4d8337fcc4b8308ff3a6d</Anchor>
    <Abstract>answer if currently active </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a83560f6b69745afe3e608359ce78343f</Anchor>
    <Abstract>answer if file is loaded into RAM </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a90010297cfb69ddee6a04ee340cccb85</Anchor>
    <Abstract>answer if file has X samples in RAM </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>af8f20cc5a2e3ac0b7e47ec88a4a29453</Anchor>
    <Abstract>set file name path string </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a44834d40244991303c33c38a9232b803</Anchor>
    <Abstract>file name </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ade0cbeee4b4a0ce45b60f85fb673b20d</Anchor>
    <Abstract>log snd file props </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a6a438a4de00c32fe6341b01e757df41b</Anchor>
    <Abstract>get/set start frame </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a19f8496091b356079b3b3c88e2a298ad</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStartSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a2d85c9ddaa6405e7a868ff81ff5db9c1</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStartRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ae536aee3c744609f11f2ab001f47914f</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad2e6efb607e1238475634aa59b29da73</Anchor>
    <Abstract>get/set stop frame </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a92bffa7ebfc3785cea9a150326c79625</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStopSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a4b942b2ab31ba7548f297533feb8cd77</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStopRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aedba2ef6ff53cb9a8b6b248e57cbff73</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a703520f519b9784a6940143586ed9ff8</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a7c317a27143e0b5667a668f9dcd9648b</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playbackRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1cbaa98caa45514e8282593b04e97508</Anchor>
    <Abstract>playback rate (pitch ratio) </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a00abea2b87cb5fef1b67e13e2b1fc72c</Anchor>
    <Abstract>set the receiver&amp;#39;s playback rate (pitch ratio) </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1da9c9d3913f1b3c98ca26dc7220c718</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLooping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad8a32faddd42359d9273fff4307f9ea1</Anchor>
    <Abstract>get/set looping state </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIsLooping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a0d80781863eb728a43f930bd2f32e28d</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWaveform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a3f201809be66f80f23b50161f0deaed9</Anchor>
    <Abstract>plug in waveforms set the interpolation flag </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a246e451b9ccaa15d818c4417adfb7cf9</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>abf76877b80d84a924c71cfe057c589c9</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a28b5bad4f2349398de3c6d09304fef4c</Anchor>
    <Abstract>reset-to-zero </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSndfileName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a939c5b11014fdda7d241f4fe95a2a8d8</Anchor>
    <Abstract>Answer whether the given name looks like a snd file. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sndfileNameType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ac750acef6fba96a989e3f1749b0bbb45</Anchor>
    <Abstract>Answer the snd file type. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mimeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a08cb1ee054382a06d925d2328ce32286</Anchor>
    <Abstract>Answer the MIME type based on the file name. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ae273a3d1c120209e883198e006b12b52</Anchor>
    <Abstract>the ID3 tags properties </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a1d37712b7fd137dab432d733003eca71</Anchor>
    <Abstract>whether/how I should interpolate between samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWavetable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a926e9d03bb39119f4c0992143cb3baaa</Anchor>
    <Abstract>the stored wave form </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a323673b284a59f017163a9d4bac3e51b</Anchor>
    <Abstract>where I currently am in the buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mActualFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a473db0a6a9460c7c4f162648e19f8421</Anchor>
    <Abstract>where I actually am in the buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromSndfile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad77cafbca2aa49d0efeb946982c60c42</Anchor>
    <Abstract>read SF header </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1a86a2b513d543b7ea804039c55eaded</Anchor>
    <Abstract>allocate buffer lazily </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aa326942115ced26aa160a14a48d424e0</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad7f7cb3958081adfaabc0e7fd6c4676a</Anchor>
    <Abstract>read the ID3 or other tags. Returns true if able to read them. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillSine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a983c39e543ebf3781e4b99bb7573eb05</Anchor>
    <Abstract>fill the shared wavetable with 1 cycle of a sine wave </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Writeable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_writeable.html</Path>
    <Anchor>ac402dc4b6151052465f5ca9c4554b7a0</Anchor>
    <Abstract>write to the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a95dafe980f08f7b9560c1cae87b6dd3d</Anchor>
    <Abstract>file name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a449d4217d42485410d7f7749b2bc2278</Anchor>
    <Abstract>r/w mode </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a56b5142eb3308123411125930dbc8251</Anchor>
    <Abstract>sf format </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aeed69e1885231279589ec6a19ec80429</Anchor>
    <Abstract>is my file valid? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsLooping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a0689b61b407433cc008f0b57086ae030</Anchor>
    <Abstract>am i looping start-stop? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad23941ac7c045ee53d91d36b0780413e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a4c6d2508c69701c8348119dbf409668d</Anchor>
    <Abstract>starting/ending frames (or -1 if not used) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aa49de507d9c70a82214f838bd0ec1cce</Anchor>
    <Abstract>sample rate ratio </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ae675a4778bf49016f165dff612940d95</Anchor>
    <Abstract>sample frames</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBytesPerSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a0d6ae096275a3456fc86b1f864ff2e67</Anchor>
    <Abstract>the # of bytes per sample </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>afe3f27c850929e60f1d63b630e17aef1</Anchor>
    <Abstract>starting frame in file of buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Accessor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Accessor</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_accessor.html</Path>
    <Abstract>The Accessor class has public data members. </Abstract>
    <DeclaredIn>Accessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Accessor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Accessor</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_accessor.html</Path>
    <Anchor>a5bf34e1d7e4ee45ba5e771b70e3be53c</Anchor>
    <Abstract>Convenient constructor. </Abstract>
    <DeclaredIn>Accessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Accessor</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_accessor.html</Path>
    <Anchor>a894b22bce5c08eaf8ad1bc0e5fc1d86e</Anchor>
    <Abstract>name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSelector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Accessor</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_accessor.html</Path>
    <Anchor>a0c0c3acd4eb2927ccb072dd4206a480a</Anchor>
    <Abstract>operand selector (see macros in the instruments, e.g., set_attack_f) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Accessor</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_accessor.html</Path>
    <Anchor>a6c8bd669f93cf07fc352e334e804d231</Anchor>
    <Abstract>argument type (see macros above, e.g., CSL_FLOAT_TYPE) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::AdditiveInstrument</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::AdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_additive_instrument.html</Path>
    <Abstract>AdditiveInstrument. </Abstract>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdditiveInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_additive_instrument.html</Path>
    <Anchor>a0a58a9083692c9b76a7e8dfff227b1da</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdditiveInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_additive_instrument.html</Path>
    <Anchor>a8b38b79e1ebf1184f860f1f995023617</Anchor>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdditiveInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_additive_instrument.html</Path>
    <Anchor>ac0f86f908a74d6ec65ddade76e413164</Anchor>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdditiveInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_additive_instrument.html</Path>
    <Anchor>a28f08eb655732bb8123b7668efb564c5</Anchor>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdditiveInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_additive_instrument.html</Path>
    <Anchor>ae9c1949bae090274c7073027413044e9</Anchor>
    <Abstract>copy constructor </Abstract>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AdditiveInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_additive_instrument.html</Path>
    <Anchor>af03ca5f2edcc415f33ff5e20c9c8b578</Anchor>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_additive_instrument.html</Path>
    <Anchor>a436162d34348e1fe8f14bd0b7b267abe</Anchor>
    <Abstract>Plug functions. </Abstract>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playOSC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_additive_instrument.html</Path>
    <Anchor>a19f40ddc8c3370413973fe26a4a2d5dd</Anchor>
    <Abstract>Play functions. </Abstract>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_additive_instrument.html</Path>
    <Anchor>abf729f55c14862c98b5088a1ac8bb013</Anchor>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playMIDI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_additive_instrument.html</Path>
    <Anchor>a013a670370de1cc560c2cba3995b0f43</Anchor>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>afa6f111dc85dab7a7bdf5e2cc6c165af</Anchor>
    <Abstract>Accessors. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a79aab7d10f67e121641d09224eb230bb</Anchor>
    <Abstract>my UGen graph </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>envelopes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a58dc9b22696af5314e391ed1212782c6</Anchor>
    <Abstract>the map of ugens in the graph by name </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a2714d7d2ec9c9dc7008e81b31e423f1b</Anchor>
    <Abstract>the vector of envelopes to query or trigger </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genNamed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abccad2cc3a254ae6bac8c660f7518778</Anchor>
    <Abstract>answer my name answer the number of channels </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abeb0b477a2388f8c7a2b41e87ad24c01</Anchor>
    <Abstract>Accessor management. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ae5f78c65cf53af61bbdcc3a8e228f947</Anchor>
    <Abstract>answer the accessor vector </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a751268fdb83b44806a6f0b745400fce5</Anchor>
    <Abstract>set a named parameter </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a05fbcc14ac4a0cd792e85aff09147b3b</Anchor>
    <Abstract>Envelope query and re-trigger. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>play</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ab643e7923572c1cf2b4edb62cb1fc14a</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a1b783961f66930972f30e242139be90f</Anchor>
    <Abstract>Play a note (subclasses refine) </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abffd98c97971ef8ec4c893f8d019e3c1</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAEnv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_additive_instrument.html</Path>
    <Anchor>a95be8a3220209aa12de7b5355bafc721</Anchor>
    <Abstract>amplitude envelope </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSOS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_additive_instrument.html</Path>
    <Anchor>a85301348fa199cf66c43935b07af382e</Anchor>
    <Abstract>sum-of-sine oscillator </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_additive_instrument.html</Path>
    <Anchor>a4899ffd0310fa23dba905d3869b05c17</Anchor>
    <Abstract>stereo panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_additive_instrument.html</Path>
    <Anchor>a3e47ec1bb2f937b3cc23bd591197f466</Anchor>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a3685284d2311cfe1d10f38536c424666</Anchor>
    <Abstract>Caches. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a660770fe07dc68cb05f277ff03130ec5</Anchor>
    <Abstract>my name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUGens</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ab5af1851504b58a140055423100bc61a</Anchor>
    <Abstract>the map of ugens in the graph by name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnvelopes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a07ff212be08d5cc25fa2a328dd630188</Anchor>
    <Abstract>the vector of envelopes to query or trigger </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ad52424c33a5b87976186ef9e3f784a73</Anchor>
    <Abstract>the accessor vector </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::AddOp</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::AddOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_add_op.html</Path>
    <Abstract>AddOp – A BinaryOp that adds two UnitGenerators or fixed constants together. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AddOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AddOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_add_op.html</Path>
    <Anchor>a84c5b0108f46361a4d05a23101a5955b</Anchor>
    <Abstract>The constructor for dual-UnitGenerator operation. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AddOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AddOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_add_op.html</Path>
    <Anchor>a1ebbe58f216c77e99da88e83ce38869f</Anchor>
    <Abstract>Constructuctor for operating a UnitGenerator and a fixed float. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AddOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AddOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_add_op.html</Path>
    <Anchor>a4f79f2194ebd504899f310e36000550a</Anchor>
    <Abstract>Returns the next individual frame (for fixed values) </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>aea0c63160ddbde8d930f68bcbe084bfd</Anchor>
    <Abstract>Prints instance info. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOperand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>ad867251b56b221ea0c7bf8cf7dd8016c</Anchor>
    <Abstract>Set the operand from a fixed float. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AddOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_add_op.html</Path>
    <Anchor>abac00ae0b0c5e893355ca7247ba221ca</Anchor>
    <Abstract>Function that implements the adding routine. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>acb0d105256bf40b19e2b63e6b8479dd7</Anchor>
    <Abstract>Is the input fixed or a dynamic UnitGenerator? </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inputIsFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>a0fc33c48cd24c4fbc5f7acc5ba9d9858</Anchor>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operandIsFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>a819c2e5d7ef172cd87ae0ae2778fb0ca</Anchor>
    <Abstract>Is the operand fixed or a dynamic UnitGenerator? </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operandFixedValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>a8f1207331a9be9297c4cd3bee0231321</Anchor>
    <Abstract>Convert the dynamic operand to a fixed sample (if operand is fixed) </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::ADSR</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::ADSR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_d_s_r.html</Path>
    <Abstract>ADSR = 4-segment attack/decay/sustain/release envelope class. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ADSR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ADSR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_d_s_r.html</Path>
    <Anchor>aa57bf463da68fb0067f18ce85a49d9fe</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ADSR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ADSR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_d_s_r.html</Path>
    <Anchor>a203b2eccc7bf23b38478c89c6b97b4e5</Anchor>
    <Abstract>Minimal version - ADSR. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ADSR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ADSR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_d_s_r.html</Path>
    <Anchor>afb35484d03690b6616036bc41603d4ce</Anchor>
    <Abstract>with initial delay - IADSR </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ADSR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ADSR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_d_s_r.html</Path>
    <Anchor>a8d8bbd811aabada5739bba55e5584fe3</Anchor>
    <Abstract>Minimal version - ADSR. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ADSR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ADSR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_d_s_r.html</Path>
    <Anchor>a8ca8017d8c65893da11c38d9fdbad2c7</Anchor>
    <Abstract>with initial delay - IADSR </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ADSR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ADSR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_d_s_r.html</Path>
    <Anchor>ab0a0bc2fb0f1cbd34040eaa082794018</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ADSR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_d_s_r.html</Path>
    <Anchor>aa014597aff695a575a988439853671b4</Anchor>
    <Abstract>Special accessors. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDelay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ADSR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_d_s_r.html</Path>
    <Anchor>a60c9b33f6b93f89371901132a1b24122</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ADSR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_d_s_r.html</Path>
    <Anchor>a5a2f1d985f59625389f05b08d52f7a7b</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDecay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ADSR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_d_s_r.html</Path>
    <Anchor>a646174e45983502d83eb10e96e698a88</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSustain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ADSR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_d_s_r.html</Path>
    <Anchor>ad790cbcce2f66765c25c5ecbb75686c9</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRelease</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ADSR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_d_s_r.html</Path>
    <Anchor>abe6810e173f27d072cab0e0afd037681</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ADSR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_d_s_r.html</Path>
    <Anchor>afff300bf4a2f951a8def820aea49a5b5</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>ad467b3c7afce695b428a9cc66e10c712</Anchor>
    <Abstract>This answers whether I&amp;#39;m active (ptr &lt; end) </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBreakpoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>ad39e120b2cc844caaf579599cd44c097</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a9421a5f45b37fdeaa7915b2e7a9da366</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleTimes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a3ecc09876d58baab0489517864240a8f</Anchor>
    <Abstract>scale durations </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>abc3a00d656fed9abb632fc1b374adf27</Anchor>
    <Abstract>scale values so the max is s </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>af93203a7ae1fec4791eb36565db934f0</Anchor>
    <Abstract>reset internal time to restart envelope </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a03b0aeb7f8550ec701e3a07839ad47ec</Anchor>
    <Abstract>reset internal time to restart envelope </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a7642a463c20819de6d04a6b102b91976</Anchor>
    <Abstract>Pretty-printer. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a5068ded8e64397f2756c9967cb10eac6</Anchor>
    <Abstract>The main FrameStream work method. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>privateNextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a5e8bc26caab6bb76f84c855d04dbebe5</Anchor>
    <Abstract>Internal helper method for computing the next buffer. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>abd2ecb2dca6859c7da2e8e8e1689bb37</Anchor>
    <Abstract>Allocate memory for the segments. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculateSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a233714c4b55f4f8e974a6827ea5ead42</Anchor>
    <Abstract>Calculate the internal data. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a3a740e34b7872a2599f21ff3b37a0e0f</Anchor>
    <Abstract>Total duration, typically in seconds. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentMark</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>aeb4f7e489cb6d3863be43318a9e59f44</Anchor>
    <Abstract>How far we have read. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSegmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a806c34bfc5febd95060670a80bf48521</Anchor>
    <Abstract>list of envelope breakpoints </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>ad72b1156da3b7db2990da98b50d209bc</Anchor>
    <Abstract>array of line segments that for the envelope </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a7a1cba39a17c49d070b6f2b0fb100ebc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a0632379f852825bee1477a09320f3d98</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::AirAbsorptionCue</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::AirAbsorptionCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_air_absorption_cue.html</Path>
    <Abstract>Simulates the frequency dependent air absorption using a one pole/zero lowpass filter. </Abstract>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AirAbsorptionCue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AirAbsorptionCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_air_absorption_cue.html</Path>
    <Anchor>a8c929688a2f107999845a3f80303bce5</Anchor>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AirAbsorptionCue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AirAbsorptionCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_air_absorption_cue.html</Path>
    <Anchor>a6615ceac6dfa1706acc42bfea4eaadff</Anchor>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AirAbsorptionCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_air_absorption_cue.html</Path>
    <Anchor>a5270ab9af2fee21e01408eb222e118c4</Anchor>
    <Abstract>Calculate the filter coefficients. </Abstract>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AirAbsorptionCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_air_absorption_cue.html</Path>
    <Anchor>a753ef46d1cfb6b95591a3300bc043ece</Anchor>
    <Abstract>Process each sample in the buffer, applying the filter. </Abstract>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AirAbsorptionCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_air_absorption_cue.html</Path>
    <Anchor>a251f6d858162fc9fe159d3cbe75af42e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mACoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AirAbsorptionCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_air_absorption_cue.html</Path>
    <Anchor>acb6d962ce91f86b4b1a70658a0a52391</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AirAbsorptionCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_air_absorption_cue.html</Path>
    <Anchor>a1cf93b03d17fc7040159b7991e38e881</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AirAbsorptionCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_air_absorption_cue.html</Path>
    <Anchor>a626c1c337792914a01812f4308757d77</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Allpass</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Allpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_allpass.html</Path>
    <Abstract>Allpass Filter with a pole and a zero at equal frequency and straddling the unit circle. Allows all freqs to pass through but messes with phases. </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Allpass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Allpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_allpass.html</Path>
    <Anchor>a419042723a9a96eb3063abdfff6e25ed</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Allpass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Allpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_allpass.html</Path>
    <Anchor>a7b21784aa1aa963bf6d4f5a90b6c7606</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Allpass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Allpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_allpass.html</Path>
    <Anchor>a0f85a985dbc8db581e312df8043f8afa</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupCoeffs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Allpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_allpass.html</Path>
    <Anchor>a948adc968218d3d4d48433ba9908d8ca</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a0025ddcb760ab59042a1b7f1454d7f86</Anchor>
    <Abstract>clears the input/output buffers </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupCoeffs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a005874013140674786666154cf493acf</Anchor>
    <Abstract>to be overloaded by subclasses supply the coefficients directly </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>aa8026143668464aa692e4cecf3092a59</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>af498bd7cc09785fb5c1a4c80ac603015</Anchor>
    <Abstract>log information about myself </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ac6cae58dc83261deb85088a3e42beb73</Anchor>
    <Abstract>set the receiver&amp;#39;s frequency to a UGen or a float </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ae1d49bbec872cf00f373df250af154a5</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a330e3b583d58717d2423f888fddb6dbd</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a33b250117a39b2fdda305daa8b472fbd</Anchor>
    <Abstract>set the receiver&amp;#39;s amount to a UGen or a float </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a8d4de20eb83b38c4b85866e226fca39b</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a689e7ff28c2d3336a408965c79674853</Anchor>
    <Abstract>shared initialization function </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCoeffUGen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Allpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_allpass.html</Path>
    <Anchor>a7d1072ffa6307fa9272cf9fc60f3c097</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Allpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_allpass.html</Path>
    <Anchor>a357afdb2059088b596f830e3161b164b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCoeffBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Allpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_allpass.html</Path>
    <Anchor>a131851f440b0216f6cd275ef5ab73a02</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>ae88e176028ac99dbc4fe816289b90dcb</Anchor>
    <Abstract>array of numerator coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mACoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a95b02921293a9ff951107a2568ba7731</Anchor>
    <Abstract>array of denominator coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBNum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>aa7156b0b5d3c8d4f08181325654262b2</Anchor>
    <Abstract>number of coeffs in b </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mANum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>abbd984700c6190e0737d626eed850bf4</Anchor>
    <Abstract>number of coeffs in a </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a5b23dbbb4d7dd347280e188c7ddda873</Anchor>
    <Abstract>arrays of past input and output samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a869ea8dedfde47401e02e4c1944efac3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a95cd99da2071d440280d5b10d74226df</Anchor>
    <Abstract>to keep hold of sample rate for calculating coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::AmbisonicDecoder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicDecoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>ad3563a407f6d7112d694e37ce4c23304</Anchor>
    <Abstract>Defaults to standard speaker layout as defined in &quot;HOA_SpeakerLayout&quot; class and to Ambisonic order of...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicDecoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>a9781eb25b1cb9217eac0d5c317eb4b9e</Anchor>
    <Abstract>Initializes with uniform Ambisonic order, defaults to standard speaker layout as defined in &quot;HOA_Spea...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicDecoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>a0d18b35b5710378a5c84f3db0355b523</Anchor>
    <Abstract>Initializes with hybrid Ambisonic order. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AmbisonicDecoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>a19bab096eec2cdfbbbc97d1795b5fae5</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>a2d2d38a8c3126d41c4776cd0963805d0</Anchor>
    <Abstract>Does the DSP processing for the Ambisonic Decoder. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>order</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a81de04b6b617317cb7a91ac8ba6cc8e3</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>aeced8fff4ca63c017192b46a981875d5</Anchor>
    <Abstract>initializing method called by constructors </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>a555c11f90e4ae5a5b7dc8b075ba0f044</Anchor>
    <Abstract>Create the decoding matrix &quot;D&quot; using the projection method. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asPseudoInverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>a7e1ae60c0782abdd55ef8c6e01e8d867</Anchor>
    <Abstract>create the decoding matrix &quot;D&quot; using the pseudoinverse method </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeInPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>a9e6e327069134caede29c535eaa05814</Anchor>
    <Abstract>Adjusts the decoding matrix D for in-phase flavour. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeMaxRE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>a638c0e651aa3a92e76c676e169b2aa5c</Anchor>
    <Abstract>Adjusts the decoding matrix D for Max rE flavour. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeTransposedReEncodingMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>aa73b92180723a4fa02e7caae7a46b5ee</Anchor>
    <Abstract>Utility method that creates the transposed re-encoding matrix C&amp;#39;. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a82a3cd47247d7963fb0afeed3e8ff396</Anchor>
    <Abstract>Returns the Ambisonic order. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channelsToUniformOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aef6630f5658a481f40666a0d1f9aed72</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>greaterOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aee167665376c9f6930d93cd307aafd72</Anchor>
    <Abstract>Compares the horizontal and vertical Ambisonic order of a hybrid order and returns the largest...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aeb0d600a21c2cdd75c8b1c124cfab925</Anchor>
    <Abstract>Returns the number of Ambisonic channels from a hybrid Ambisonic order: N = 2*M_h + 1 + (M_v + 1)^2 -...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a7d4577722aab22f48ee742bf3faa2be4</Anchor>
    <Abstract>Returns the number of Ambisonic channels corresponding to a uniform Ambisonic order: N = (M+1)^2...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToHorizontalChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a91e69fefc24cf9250f60d8bb2ba3525b</Anchor>
    <Abstract>Returns the number of horizontal Ambisonic channels from a hybrid Ambisonic order: N_h = 2*M_h + 1...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToVerticalChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a901ba515f98a30c2e7a870f96d31373f</Anchor>
    <Abstract>Returns the number of vertical Ambisonic channels from a hybrid Ambisonic order: N_v = (M_v + 1)^2 - ...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channelIndexer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>afc4e4a09e43af91258e9dfbd270ffe18</Anchor>
    <Abstract>Calculates a lookup table to map Ambisonic channel index to actually used UnitGenerator channel...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invChannelIndexer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>ad6a05e324c2096106bf078577aa02329</Anchor>
    <Abstract>Calculates a lookup table to map actually used UnitGenerator channel to Ambisonic channel index...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>a30a93f6b3b729d84e79a9c99ef97c66d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannelsInv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>ad94be489782e03a11c3e3f8710ad6ae5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIOChannelMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>aec8fed27a76f326cf71862c42cc4767d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDecodingMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>a9dcd42d280115c86ab7fc83ddfaac688</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>ad7c19545d94622026078fb4e3a6ab8d2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDecodingMethod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>afa37b80b4455fb658b36e5bf90c757eb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDecoderFlavour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicDecoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_decoder.html</Path>
    <Anchor>a04b59eb0cedfb8abaefaf6e112baa2cc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a888fd84e776431ab51f480f4c2566767</Anchor>
    <Abstract>the order of the Unit Generator </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>singularValueDecomposition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a15e17036e26ff4faba532a8f33fd7dbb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fumaEncodingWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a7581ec106282cd3ac1cdb5882a901337</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fumaIndexedEncodingWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aef59f6987fe4fb1d3c97debec4be9808</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::AmbisonicEncoder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::AmbisonicEncoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_encoder.html</Path>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicEncoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicEncoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_encoder.html</Path>
    <Anchor>ad9fa44dde896ed23f0957f1e5bcccb67</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicEncoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicEncoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_encoder.html</Path>
    <Anchor>a5f889d7e64b0ac0f6b8b7711aa1f468e</Anchor>
    <Abstract>Initialize with uniform Ambisonic order. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicEncoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicEncoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_encoder.html</Path>
    <Anchor>a553f9b2bb12621103b3fde810e04a4a9</Anchor>
    <Abstract>Initialize with hybrid Ambisonic order. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AmbisonicEncoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicEncoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_encoder.html</Path>
    <Anchor>a99cb2fbfd9c75c9fac713aff3bc61f54</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicEncoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_encoder.html</Path>
    <Anchor>ae48161ee6625156c7edc27d152585aed</Anchor>
    <Abstract>Set my input. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>input</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicEncoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_encoder.html</Path>
    <Anchor>a426bf3bd08236b67c15817831c0ca964</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicEncoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_encoder.html</Path>
    <Anchor>a258729ab9fc9b7444685ff2160a8e628</Anchor>
    <Abstract>Does the DSP processing for the Ambisonic Encoder. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>order</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a81de04b6b617317cb7a91ac8ba6cc8e3</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicEncoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_encoder.html</Path>
    <Anchor>ad35dae22770bad19299cac596a1807aa</Anchor>
    <Abstract>Initializing method called by constructors. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a82a3cd47247d7963fb0afeed3e8ff396</Anchor>
    <Abstract>Returns the Ambisonic order. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channelsToUniformOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aef6630f5658a481f40666a0d1f9aed72</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>greaterOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aee167665376c9f6930d93cd307aafd72</Anchor>
    <Abstract>Compares the horizontal and vertical Ambisonic order of a hybrid order and returns the largest...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aeb0d600a21c2cdd75c8b1c124cfab925</Anchor>
    <Abstract>Returns the number of Ambisonic channels from a hybrid Ambisonic order: N = 2*M_h + 1 + (M_v + 1)^2 -...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a7d4577722aab22f48ee742bf3faa2be4</Anchor>
    <Abstract>Returns the number of Ambisonic channels corresponding to a uniform Ambisonic order: N = (M+1)^2...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToHorizontalChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a91e69fefc24cf9250f60d8bb2ba3525b</Anchor>
    <Abstract>Returns the number of horizontal Ambisonic channels from a hybrid Ambisonic order: N_h = 2*M_h + 1...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToVerticalChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a901ba515f98a30c2e7a870f96d31373f</Anchor>
    <Abstract>Returns the number of vertical Ambisonic channels from a hybrid Ambisonic order: N_v = (M_v + 1)^2 - ...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channelIndexer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>afc4e4a09e43af91258e9dfbd270ffe18</Anchor>
    <Abstract>Calculates a lookup table to map Ambisonic channel index to actually used UnitGenerator channel...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invChannelIndexer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>ad6a05e324c2096106bf078577aa02329</Anchor>
    <Abstract>Calculates a lookup table to map actually used UnitGenerator channel to Ambisonic channel index...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicEncoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_encoder.html</Path>
    <Anchor>a73d6c34a4efadc55839ecbbc93fe78ce</Anchor>
    <Abstract>Encoding weights for each order (per source) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicEncoder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_encoder.html</Path>
    <Anchor>ac11190ced20d304089305a28e417ec55</Anchor>
    <Abstract>Holds the input to be encoded. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a888fd84e776431ab51f480f4c2566767</Anchor>
    <Abstract>the order of the Unit Generator </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>singularValueDecomposition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a15e17036e26ff4faba532a8f33fd7dbb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fumaEncodingWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a7581ec106282cd3ac1cdb5882a901337</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fumaIndexedEncodingWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aef59f6987fe4fb1d3c97debec4be9808</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::AmbisonicMixer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::AmbisonicMixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_mixer.html</Path>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicMixer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicMixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_mixer.html</Path>
    <Anchor>a8516caee50d6cc8803746efc5226c0d9</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicMixer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicMixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_mixer.html</Path>
    <Anchor>aac0de12c9957d5dde1c2cb6eb63259be</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AmbisonicMixer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicMixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_mixer.html</Path>
    <Anchor>a8b7dbdcb7f4907718a8983ebd2319b1e</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicMixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_mixer.html</Path>
    <Anchor>ae9b946ade1dac924cdc950b138203b67</Anchor>
    <Abstract>Initializing method called by constructors. </Abstract>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicMixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_mixer.html</Path>
    <Anchor>a03a4bc1c5f4e870d2bbb540ae6a37252</Anchor>
    <Abstract>methods for adding/removing inputs to the mixer. </Abstract>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicMixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_mixer.html</Path>
    <Anchor>a3525c77f129c024a99f48d085c06536d</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicMixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_mixer.html</Path>
    <Anchor>ade5fd0bcd3a8412924b7c56aa319bfac</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicMixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_mixer.html</Path>
    <Anchor>a15a3a5457c806efae0046be64ea898ea</Anchor>
    <Abstract>Number of active inputs. </Abstract>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>order</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a81de04b6b617317cb7a91ac8ba6cc8e3</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a82a3cd47247d7963fb0afeed3e8ff396</Anchor>
    <Abstract>Returns the Ambisonic order. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channelsToUniformOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aef6630f5658a481f40666a0d1f9aed72</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>greaterOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aee167665376c9f6930d93cd307aafd72</Anchor>
    <Abstract>Compares the horizontal and vertical Ambisonic order of a hybrid order and returns the largest...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aeb0d600a21c2cdd75c8b1c124cfab925</Anchor>
    <Abstract>Returns the number of Ambisonic channels from a hybrid Ambisonic order: N = 2*M_h + 1 + (M_v + 1)^2 -...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a7d4577722aab22f48ee742bf3faa2be4</Anchor>
    <Abstract>Returns the number of Ambisonic channels corresponding to a uniform Ambisonic order: N = (M+1)^2...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToHorizontalChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a91e69fefc24cf9250f60d8bb2ba3525b</Anchor>
    <Abstract>Returns the number of horizontal Ambisonic channels from a hybrid Ambisonic order: N_h = 2*M_h + 1...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToVerticalChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a901ba515f98a30c2e7a870f96d31373f</Anchor>
    <Abstract>Returns the number of vertical Ambisonic channels from a hybrid Ambisonic order: N_v = (M_v + 1)^2 - ...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channelIndexer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>afc4e4a09e43af91258e9dfbd270ffe18</Anchor>
    <Abstract>Calculates a lookup table to map Ambisonic channel index to actually used UnitGenerator channel...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invChannelIndexer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>ad6a05e324c2096106bf078577aa02329</Anchor>
    <Abstract>Calculates a lookup table to map actually used UnitGenerator channel to Ambisonic channel index...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicMixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_mixer.html</Path>
    <Anchor>a89a1d57869070e7f86f1f13ccf2fb5ad</Anchor>
    <Abstract>vector of pointers to the loudspeakers </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicMixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_mixer.html</Path>
    <Anchor>afcc5c64c130f5d8899a1a70216d92049</Anchor>
    <Abstract>buffer for the input framestream </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInvNumInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicMixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_mixer.html</Path>
    <Anchor>aa498289260fe884f857ec2a5847020cb</Anchor>
    <Abstract>the inverse of the number of inputs (used for normalization) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a888fd84e776431ab51f480f4c2566767</Anchor>
    <Abstract>the order of the Unit Generator </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>singularValueDecomposition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a15e17036e26ff4faba532a8f33fd7dbb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fumaEncodingWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a7581ec106282cd3ac1cdb5882a901337</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fumaIndexedEncodingWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aef59f6987fe4fb1d3c97debec4be9808</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::AmbisonicOrder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::AmbisonicOrder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_order.html</Path>
    <Abstract>Ambisonic order structure (separate definition for horizontal and vertical order): ...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicOrder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_order.html</Path>
    <Anchor>a8b6ab47842877ffa40d15830dca38eb3</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AmbisonicOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicOrder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_order.html</Path>
    <Anchor>a5eb327b76104018694795c2f34ad3625</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>horizontalOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicOrder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_order.html</Path>
    <Anchor>a9e329743505e0ed415cc05b9eb32484f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>verticalOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicOrder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_order.html</Path>
    <Anchor>a51ee6fbca9c0f92d7c217d41366d900f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUniform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicOrder</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_order.html</Path>
    <Anchor>ad74320be896d028dee9ef1a962c51d5b</Anchor>
    <Abstract>Returns true if horizontal and verical orders are identical. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::AmbisonicPanner</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::AmbisonicPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_panner.html</Path>
    <Abstract>Ambisonic Panner Wraps around the different ambisonic classes, providing a single interface for encod...</Abstract>
    <DeclaredIn>AmbisonicPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_panner.html</Path>
    <Anchor>ad5cd8c632d9caaa65d4249a57dcfedcd</Anchor>
    <DeclaredIn>AmbisonicPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_panner.html</Path>
    <Anchor>a75e8f01798fa7db8ec3a2fd5eed0cd94</Anchor>
    <DeclaredIn>AmbisonicPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AmbisonicPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_panner.html</Path>
    <Anchor>aa3c364c233c0d0f5acbdec7cd8adc1dc</Anchor>
    <DeclaredIn>AmbisonicPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_panner.html</Path>
    <Anchor>a10273ae9e2a1e559437983dc87fad6e7</Anchor>
    <Abstract>Implement Panner&amp;#39;s addSource, inserting an Encoder to each source. </Abstract>
    <DeclaredIn>AmbisonicPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_panner.html</Path>
    <Anchor>a41cb98060290203d9133718b58e8b16d</Anchor>
    <Abstract>Remove a sound source. </Abstract>
    <DeclaredIn>AmbisonicPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_panner.html</Path>
    <Anchor>aef34261596682bd75ebd766d207debba</Anchor>
    <DeclaredIn>AmbisonicPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_panner.html</Path>
    <Anchor>a2353e59497fae34a7f99d246abaaede3</Anchor>
    <Abstract>fill the buffer with the next buffer_length of values </Abstract>
    <DeclaredIn>AmbisonicPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_panner.html</Path>
    <Anchor>ad53ec17a38091f0f0f5ec5add87daf7f</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>AmbisonicPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a681b55756470d82ba0c2bd938eed2616</Anchor>
    <Abstract>Set the speaker layout to be used by this panner. The panner will request the default layout if not s...</Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ad0d4c19bff2cf93f663929138b9d4f46</Anchor>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ae50d5734f1e3594201bf8ddb55b5f6b3</Anchor>
    <Abstract>Called when the speaker layout changes. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a26a1956b527dd6476a516f01cf6fcf7e</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a8ef58a48644074a87b9ad63a99d68240</Anchor>
    <Abstract>virtual destructor (don&amp;#39;t notify or delete observers in this version) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a084498ac68190916f37d5922f5bf7b6c</Anchor>
    <Abstract>key selector (e.g., MIDI chan) I receive update() mesages from my model; </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a45bd029de329ef1c2374b3721a87978f</Anchor>
    <Abstract>create the cache </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speakerLayoutChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ac52ed2037d08a4c02fc71f2c25945f2d</Anchor>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMixer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_panner.html</Path>
    <Anchor>a5da8e3cd465a75ea0b4461acf00fbebc</Anchor>
    <Abstract>Print info about this instance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDecoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_panner.html</Path>
    <Anchor>a20e293f92b3194bf70bdeb0d612176ff</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRotator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_panner.html</Path>
    <Anchor>ab3667e8b3dfb71bfb842936768da96f4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a470567e2f64564c4ec0c80bc6faaaa97</Anchor>
    <Abstract>SpatialSource... refers to its input UGen, but with the knowledge of its position within a space...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a7165ffb7e0fe7fe6454409f9ac8ff50a</Anchor>
    <Abstract>Vector of pointers to the prior I/O data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a0a81e9957bf271e336e8efc6a5381bb0</Anchor>
    <Abstract>If null, it will use the default layout by calling SpeakerLayout::defaultSpeakerLayout();. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTempBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a3d4d8e6502c2528597973f344b3acc37</Anchor>
    <Abstract>Buffer used to temporarily hold input source data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::AmbisonicRotator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicRotator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>ab81d782d28c9643cffc8fe383f230b15</Anchor>
    <Abstract>initializes with no rotation </Abstract>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicRotator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>ab16361ca484a54cd6adacb288fa19343</Anchor>
    <Abstract>initializes with uniform Ambisonic order and no rotation </Abstract>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicRotator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>aecbe499b660a5e5a4b59f924a3ada658</Anchor>
    <Abstract>initializes with hybrid Ambisonic order and no rotation </Abstract>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AmbisonicRotator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a589afe90cea3bd9afafbcab0e96272be</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNthInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>aa5f2f7dce4b48de34dba1990c9ef99e1</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTilt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>aad66ac5fd1ecacb738a7d5df59997488</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTumble</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a8d304ddb9205b0b69d2aeb1b5470de43</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRotate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a266bbc681f6c159d46e6ea26bcc0494b</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>add206a81d1b0504f128efecd969b3775</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>order</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a81de04b6b617317cb7a91ac8ba6cc8e3</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a82a3cd47247d7963fb0afeed3e8ff396</Anchor>
    <Abstract>Returns the Ambisonic order. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channelsToUniformOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aef6630f5658a481f40666a0d1f9aed72</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>greaterOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aee167665376c9f6930d93cd307aafd72</Anchor>
    <Abstract>Compares the horizontal and vertical Ambisonic order of a hybrid order and returns the largest...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aeb0d600a21c2cdd75c8b1c124cfab925</Anchor>
    <Abstract>Returns the number of Ambisonic channels from a hybrid Ambisonic order: N = 2*M_h + 1 + (M_v + 1)^2 -...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a7d4577722aab22f48ee742bf3faa2be4</Anchor>
    <Abstract>Returns the number of Ambisonic channels corresponding to a uniform Ambisonic order: N = (M+1)^2...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToHorizontalChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a91e69fefc24cf9250f60d8bb2ba3525b</Anchor>
    <Abstract>Returns the number of horizontal Ambisonic channels from a hybrid Ambisonic order: N_h = 2*M_h + 1...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToVerticalChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a901ba515f98a30c2e7a870f96d31373f</Anchor>
    <Abstract>Returns the number of vertical Ambisonic channels from a hybrid Ambisonic order: N_v = (M_v + 1)^2 - ...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channelIndexer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>afc4e4a09e43af91258e9dfbd270ffe18</Anchor>
    <Abstract>Calculates a lookup table to map Ambisonic channel index to actually used UnitGenerator channel...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invChannelIndexer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>ad6a05e324c2096106bf078577aa02329</Anchor>
    <Abstract>Calculates a lookup table to map actually used UnitGenerator channel to Ambisonic channel index...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a4bd38a07dd67c0266e924106a7302578</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGreaterOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>ab1da52118d2b33dbd068b68154907d96</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannelsGreaterOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a076fec195f0f9cfdcb8bc808d55c4dda</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChannelIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a7fe3cc6d26162940b990149c931c5e98</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputChannelIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a079ff038ddfb6f95e9e820c7e0849100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mShouldRotate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>af14512a9b8e0d0e3a610b6c104482637</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mShouldTurn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a8763bb667d97052868d149d2b32f39f3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mShouldTilt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a906e4bf2eafbf2cb61d48c434ea66469</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a888fd84e776431ab51f480f4c2566767</Anchor>
    <Abstract>the order of the Unit Generator </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a669a3278932e5f918d8b6030b309e976</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tiltFirstOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>aa32c2ffe95d223cd4bb4f56bf91277d8</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tiltSecondOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a16c1f6cf2e4b425ee7d0fae46b682cd5</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tiltThirdOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>aa26beb5508009908765861113ff86c1f</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tumbleFirstOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a877c615e115fa69247de01464cdbce58</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tumbleSecondOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a1af9fcd65dd947236c79f5a55015e483</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tumbleThirdOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>afd437a02c1beaa2443329d6599bf1168</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateZerothOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a30b428b4733f63ae1c1ef052434bbd4e</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateFirstOrderHorizontal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>aab2e4785a971dd288c3a8e29bbd8a1c8</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateSecondOrderHorizontal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>ac588addbf40bf0837bd52e057f9b9200</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateThirdOrderHorizontal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>aee42662ec1ce384f62c5b8737a70000c</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateFirstOrderVertical</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a7434acac01ea5474151d10085c980c88</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateSecondOrderVertical</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a9ca2ce3b2c2f6fac031a14fbb5fd0820</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateThirdOrderVertical</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>ac8b0fffff869604e82161358820585a5</Anchor>
    <DeclaredIn>AmbisonicUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a8f12fd1bd18bb0040ea16143ef98d8d9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRotate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>afef7937a8fc04f4882145824d5527d0d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTumble</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>af70c413904b7bb90172925b46ad18db2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTilt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>ae57d0a5c37f914d8e441a46536df39ce</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSinAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a818c410777891a5a541372d103d04260</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCosAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>ac59248e28135483a4522aa9dc8dafb0c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a7e61a526d1c8e2ec152ee144d603c1ea</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicRotator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_rotator.html</Path>
    <Anchor>a8e282ba72328224476498e01733a367e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>singularValueDecomposition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a15e17036e26ff4faba532a8f33fd7dbb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fumaEncodingWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a7581ec106282cd3ac1cdb5882a901337</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fumaIndexedEncodingWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aef59f6987fe4fb1d3c97debec4be9808</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::AmbisonicUnitGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Abstract>Ambisonic Abstract Base Class. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicUnitGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>ad6650d5b3ae41e8fa5c4cb4e0434293b</Anchor>
    <Abstract>Initialize with uniform Ambisonic order. Defaults to zeroth order. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicUnitGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a1667c650715b06f7d83b4a02518a1860</Anchor>
    <Abstract>Initialize with hybrid Ambisonic order. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbisonicUnitGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>adff3dac0fa963c664332d73ad7ce26df</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AmbisonicUnitGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a35bfebd454a179af3e5989ac0dac7dad</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>order</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a81de04b6b617317cb7a91ac8ba6cc8e3</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a82a3cd47247d7963fb0afeed3e8ff396</Anchor>
    <Abstract>Returns the Ambisonic order. </Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channelsToUniformOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aef6630f5658a481f40666a0d1f9aed72</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>greaterOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aee167665376c9f6930d93cd307aafd72</Anchor>
    <Abstract>Compares the horizontal and vertical Ambisonic order of a hybrid order and returns the largest...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aeb0d600a21c2cdd75c8b1c124cfab925</Anchor>
    <Abstract>Returns the number of Ambisonic channels from a hybrid Ambisonic order: N = 2*M_h + 1 + (M_v + 1)^2 -...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a7d4577722aab22f48ee742bf3faa2be4</Anchor>
    <Abstract>Returns the number of Ambisonic channels corresponding to a uniform Ambisonic order: N = (M+1)^2...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToHorizontalChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a91e69fefc24cf9250f60d8bb2ba3525b</Anchor>
    <Abstract>Returns the number of horizontal Ambisonic channels from a hybrid Ambisonic order: N_h = 2*M_h + 1...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderToVerticalChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a901ba515f98a30c2e7a870f96d31373f</Anchor>
    <Abstract>Returns the number of vertical Ambisonic channels from a hybrid Ambisonic order: N_v = (M_v + 1)^2 - ...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channelIndexer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>afc4e4a09e43af91258e9dfbd270ffe18</Anchor>
    <Abstract>Calculates a lookup table to map Ambisonic channel index to actually used UnitGenerator channel...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invChannelIndexer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>ad6a05e324c2096106bf078577aa02329</Anchor>
    <Abstract>Calculates a lookup table to map actually used UnitGenerator channel to Ambisonic channel index...</Abstract>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a888fd84e776431ab51f480f4c2566767</Anchor>
    <Abstract>the order of the Unit Generator </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aba9c62a42be5c50b18836ed3d4df13da</Anchor>
    <DeclaredIn>Ambisonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>singularValueDecomposition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a15e17036e26ff4faba532a8f33fd7dbb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fumaEncodingWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>a7581ec106282cd3ac1cdb5882a901337</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fumaIndexedEncodingWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AmbisonicUnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ambisonic_unit_generator.html</Path>
    <Anchor>aef59f6987fe4fb1d3c97debec4be9808</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::AR</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::AR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_r.html</Path>
    <Abstract>AR = 3-segment attack/release envelope class. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_r.html</Path>
    <Anchor>a3686dfeb39f53ca636b8f35ee38b0c40</Anchor>
    <Abstract>Various Constructors. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_r.html</Path>
    <Anchor>ab862ac51f7184a7ebdfed66dfcd68379</Anchor>
    <Abstract>Minimal version - AR. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_r.html</Path>
    <Anchor>ad50475ac1aa27f8eb1c8db915ab5c1a5</Anchor>
    <Abstract>with initial delay - IAR </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_r.html</Path>
    <Anchor>a80cdefc9f6e0c2628a89d8ae7b136292</Anchor>
    <Abstract>Minimal version - AR. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_r.html</Path>
    <Anchor>a568e85753c000fe91067df1bf9dd6e17</Anchor>
    <Abstract>with initial delay - IAR </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_r.html</Path>
    <Anchor>a19431ce87250f9242013cec93c40301e</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_r.html</Path>
    <Anchor>a30eb7b82d545373a097776f16fd779b0</Anchor>
    <Abstract>Special accessors. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDelay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_r.html</Path>
    <Anchor>a170af56d40ad99f9c0736b50b5863c3d</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_r.html</Path>
    <Anchor>aebbf343fbf7c86298899727d05a4364f</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRelease</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_r.html</Path>
    <Anchor>ad254d42114cb03f4e559b5f91a19892e</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_r.html</Path>
    <Anchor>a38e80c02054fb8820237f23d6bfff89f</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_r.html</Path>
    <Anchor>af7e6928be78cf5e597e66781ec85f473</Anchor>
    <Abstract>Operations. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>ad467b3c7afce695b428a9cc66e10c712</Anchor>
    <Abstract>This answers whether I&amp;#39;m active (ptr &lt; end) </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBreakpoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>ad39e120b2cc844caaf579599cd44c097</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a9421a5f45b37fdeaa7915b2e7a9da366</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleTimes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a3ecc09876d58baab0489517864240a8f</Anchor>
    <Abstract>scale durations </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>abc3a00d656fed9abb632fc1b374adf27</Anchor>
    <Abstract>scale values so the max is s </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>af93203a7ae1fec4791eb36565db934f0</Anchor>
    <Abstract>reset internal time to restart envelope </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a03b0aeb7f8550ec701e3a07839ad47ec</Anchor>
    <Abstract>reset internal time to restart envelope </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a7642a463c20819de6d04a6b102b91976</Anchor>
    <Abstract>Pretty-printer. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a5068ded8e64397f2756c9967cb10eac6</Anchor>
    <Abstract>The main FrameStream work method. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>privateNextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a5e8bc26caab6bb76f84c855d04dbebe5</Anchor>
    <Abstract>Internal helper method for computing the next buffer. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>abd2ecb2dca6859c7da2e8e8e1689bb37</Anchor>
    <Abstract>Allocate memory for the segments. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculateSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a233714c4b55f4f8e974a6827ea5ead42</Anchor>
    <Abstract>Calculate the internal data. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a3a740e34b7872a2599f21ff3b37a0e0f</Anchor>
    <Abstract>Total duration, typically in seconds. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentMark</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>aeb4f7e489cb6d3863be43318a9e59f44</Anchor>
    <Abstract>How far we have read. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSegmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a806c34bfc5febd95060670a80bf48521</Anchor>
    <Abstract>list of envelope breakpoints </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>ad72b1156da3b7db2990da98b50d209bc</Anchor>
    <Abstract>array of line segments that for the envelope </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a7a1cba39a17c49d070b6f2b0fb100ebc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a0632379f852825bee1477a09320f3d98</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::AUIO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Abstract>General-purpose AudioUnit IO class. </Abstract>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a6d6a5bd61fb8c43c1c05e889473df59b</Anchor>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a6381e4c92fd6d6722e5f1c0276df6587</Anchor>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AUIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a7e423068d92d79f589c9469aef15c18d</Anchor>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a1903cd169a968f745473cbe760b4756c</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>ad015d9cc6b9f26126a8112132b2dc41c</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a505d0a82a4665e8fe99114c7789ae14e</Anchor>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a0bcfd366acfa1d25546f644839f75398</Anchor>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAudioUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>ad81e59e1636a681527a23737905b5570</Anchor>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a7f164ed81ffdca6c7b117fc24ac41d34</Anchor>
    <Abstract>get the current input buffer </Abstract>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a55bf4cba93ef6eb5f73f1fea96fca4da</Anchor>
    <Abstract>get the current input buffer </Abstract>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a4c3a0ba2bd4cb0634282522d96886cdd</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a508d031e4164f139633b4654cac7cb08</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AUIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a9078988b2222d320398f5f09b049a62a</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a85da57193ce61394eabeb74017d47eee</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a541dcdbd5c01bb6088aea2392d99adf6</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>acbb207c8745820ef546ff1530eb4f8a0</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>afc7d54ce96191dcbf679b36cd3a7b028</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAudioUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>ad81e59e1636a681527a23737905b5570</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>aeb87717c93d4188b164f6747e8c751ad</Anchor>
    <Abstract>get the current input buffer get the current input buffer </Abstract>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a330e67dda82f547ae9fc64ab03dcf2de</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6a8d3350db4f0b632509e6cbcf81b5c9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_on</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a33d3dfbf6b9de273c70491e4ed3540c0</Anchor>
    <Abstract>test the IO&amp;#39;s graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_off</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a29d83e9b6fc2610ea3cbac33588b9dcf</Anchor>
    <Abstract>end output capture </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_capture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0ce9f71e62551b921a17869f0d4ea3c8</Anchor>
    <Abstract>answer the capture buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0cd73786ea896b62cf0ec3e3e0367dd8</Anchor>
    <Abstract>set/clear my graph root generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a538b273c6de621b2e38266e6216bde1c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7cca2bf79735626d7ab93684554e0bff</Anchor>
    <Abstract>get a buffer from the CSL graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAndIncrementSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af2075a50a32bf0cfddae3183b37e0959</Anchor>
    <Abstract>increment and answer my seq # </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printTimeStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc6975037c1beec8dadf8f4bb1405549</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af8690c5e8a8f34a0b10b74f3cd066063</Anchor>
    <Abstract>the root of my client DSP graph, often a mixer or panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a688331f6e9a2b1356f545d2ace55f41a</Anchor>
    <Abstract>the most recent input buffer (if it&amp;#39;s turned on) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a3c5d6efa6e7750baa2c271bb075b476c</Anchor>
    <Abstract>the output buffer I use (passed to nextBuffer calls) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCaptureBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a795d3c1ee90a4cdcd802b4592beb97d4</Anchor>
    <Abstract>the output buffer I use for capturing output (for testing) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afff5975d365381be5385ebe15b3a7bd2</Anchor>
    <Abstract>the buffer for holding the sound card input (if open) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChannelMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc83a0ce4a361d076eea2e657e256683</Anchor>
    <Abstract>the output channel remapping array </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFramesPlayed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7b84206149d0f23fee4669838291f222</Anchor>
    <Abstract>counter of frames I&amp;#39;ve played </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afc645076ff45980d4b9d8c2209f55850</Anchor>
    <Abstract>sequence counter </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLoggingPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a297e157c9f133ea1d9face8f08165478</Anchor>
    <Abstract>logging period in seconds </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a5e0be8bcb1d550c798d0cd12885754a7</Anchor>
    <Abstract>inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa384e814fb13e794b11f6ece70c37f21</Anchor>
    <Abstract>outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa00a157f1e87264998ba876740e80448</Anchor>
    <Abstract>physical inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a42b4e4ef54d1ae1f5a35bf962767608d</Anchor>
    <Abstract>physical outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a00e7e09a91e97b4fe51e9f1cab42354e</Anchor>
    <Abstract>status flag </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0f04053849229c3aa671f67783fee760</Anchor>
    <Abstract>flag if IO is interleaved </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a34133e4a0b4c142541f11fc67c1d76fc</Anchor>
    <Abstract>used for capture offset </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aacec7725efc2851f7cfd94c12f5c3c90</Anchor>
    <Abstract>used for getting the real time </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeVals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6347e98caa1e7767dabae8a6c75c3535</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThisSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a62812f8f78f1e1859fd8b39a4e0f047c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7fe073467db4543ef9c925151f65a13c</Anchor>
    <Abstract>for printing run-time statistics </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a03a3a04552d3c4862dceffdc6d513376</Anchor>
    <Abstract>cpu usage % print the CPU usage message </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>adc69fd8bd65160cfd6036dace2db7010</Anchor>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>ab5fd8d95fdcb3aaa65049f2711328a10</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af4d52f5f176a5d68ddd88fd4fbaa6eca</Anchor>
    <Abstract>initialize overridden in subclasses </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAudioUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a140c2b8aa61826c7672068c12d4967ae</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAudioUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>ab4d2654f6fb47c214b2afcd4a68258a5</Anchor>
    <Abstract>The AudioUnit we play out. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxSampEver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a531db5245d57b705379d5949f2d7e24c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Auralizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Auralizer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_auralizer.html</Path>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Auralizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Auralizer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_auralizer.html</Path>
    <Anchor>a30de4385efd97c301911d603133799f9</Anchor>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Auralizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Auralizer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_auralizer.html</Path>
    <Anchor>aab6fdb932f641f0f6b0e83c0437e082f</Anchor>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>a54a1067751a42391200e5d1a7e10282c</Anchor>
    <Abstract>Add a sound souce to the list of inputs to be processed. </Abstract>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>a84bf103d5c94f0307877936e49f2e495</Anchor>
    <Abstract>Remove a Sound Source. </Abstract>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>a7a214d33c4ff2bf1061d450cf7b37634</Anchor>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPanningMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>a4bffbf5e792562babd26c315cf42081f</Anchor>
    <Abstract>number of active inputs. </Abstract>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>a3463e81630cbcbf5042b2b5db4af56ff</Anchor>
    <Abstract>called when the speaker layout changes, so panners update precalculated data. </Abstract>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>ae359a1092edcf16405d78d3db75aac9c</Anchor>
    <Abstract>fill the buffer with data :-) </Abstract>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a8ef58a48644074a87b9ad63a99d68240</Anchor>
    <Abstract>virtual destructor (don&amp;#39;t notify or delete observers in this version) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a084498ac68190916f37d5922f5bf7b6c</Anchor>
    <Abstract>key selector (e.g., MIDI chan) I receive update() mesages from my model; </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::BinaryOp</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Abstract>BinaryOp – An Effect that takes two input sources (UnitGenerators or scalars) and gives a single Uni...</Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BinaryOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>af7b3a412e744d553cd8e67fced7fb424</Anchor>
    <Abstract>The constructor for dual-UnitGenerator operation. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BinaryOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>af474a8c8bb80842c6484070c52090aa1</Anchor>
    <Abstract>Constructuctor for operating a UnitGenerator and a fixed float. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BinaryOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>a5967515ce6bf0932a3bbd2aa0c837996</Anchor>
    <Abstract>The same constructor, but with UGen and float inputs. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BinaryOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>afe841a33f4042a0c31fed8f63f296994</Anchor>
    <Abstract>The destructor. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>aea0c63160ddbde8d930f68bcbe084bfd</Anchor>
    <Abstract>Prints instance info. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOperand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>ad867251b56b221ea0c7bf8cf7dd8016c</Anchor>
    <Abstract>Set the operand from a fixed float. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>ad72952c13be82515389fc790042d97fd</Anchor>
    <Abstract>Abstract function that will do the processing for each buffer. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>acb0d105256bf40b19e2b63e6b8479dd7</Anchor>
    <Abstract>Is the input fixed or a dynamic UnitGenerator? </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inputIsFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>a0fc33c48cd24c4fbc5f7acc5ba9d9858</Anchor>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operandIsFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>a819c2e5d7ef172cd87ae0ae2778fb0ca</Anchor>
    <Abstract>Is the operand fixed or a dynamic UnitGenerator? </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operandFixedValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>a8f1207331a9be9297c4cd3bee0231321</Anchor>
    <Abstract>Convert the dynamic operand to a fixed sample (if operand is fixed) </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::BinauralPanner</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Abstract>forward declaration </Abstract>
    <DeclaredIn>Binaural.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BinauralPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>a93f381ac594627bd38cf13a04c99248c</Anchor>
    <DeclaredIn>Binaural.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BinauralPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>a13b2fa18e7fdf40558cff56dfe030faa</Anchor>
    <DeclaredIn>Binaural.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>a8100322c120fd6c3d93fc6b2ab1b9a8c</Anchor>
    <Abstract>work-horse method reads &amp; transforms input, sums previous data, and takes the IFFT for each of multip...</Abstract>
    <DeclaredIn>Binaural.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a681b55756470d82ba0c2bd938eed2616</Anchor>
    <Abstract>Set the speaker layout to be used by this panner. The panner will request the default layout if not s...</Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ad0d4c19bff2cf93f663929138b9d4f46</Anchor>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a749e35896956fac6034e6c7904dd2b19</Anchor>
    <Abstract>number of active inputs. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a325baea355171ce19e7e385ed3ea0915</Anchor>
    <Abstract>Remove a Sound Source. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ae50d5734f1e3594201bf8ddb55b5f6b3</Anchor>
    <Abstract>Called when the speaker layout changes. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a26a1956b527dd6476a516f01cf6fcf7e</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumBlocks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>ac162ea064c229fc8ee091b958e8bdf32</Anchor>
    <Abstract>blocks per HRTF</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumBlocksToSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>a31a799d7d342f390624a8183b3076b20</Anchor>
    <Abstract>blocks to include in sum per HRTF</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFramesPerBlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>addab7c3d5e9f07e2dec066ec1341d670</Anchor>
    <Abstract>frames per block</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a8ef58a48644074a87b9ad63a99d68240</Anchor>
    <Abstract>virtual destructor (don&amp;#39;t notify or delete observers in this version) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a084498ac68190916f37d5922f5bf7b6c</Anchor>
    <Abstract>key selector (e.g., MIDI chan) I receive update() mesages from my model; </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>af926fb419aaf0a8736811cd1b7cec4c3</Anchor>
    <Abstract>Returns an instance of its cache data per sound source. </Abstract>
    <DeclaredIn>Binaural.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speakerLayoutChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ac52ed2037d08a4c02fc71f2c25945f2d</Anchor>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInFFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>a4ef3660f04c39d0e2f00d32f3dba850f</Anchor>
    <Abstract>FFT Wrappers for in and out processing. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutFFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>a8131dbbfff1008f4afe4a565a1b284ed</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInBuf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>ad5d02a9d03ecbe4d5ec73cc50c27758e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTmpBuf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>a352c647b4013bbc87db8c42ac1b61f2c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutBuf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>a4e7aae84161e4f9317cedadeb91ffa5e</Anchor>
    <Abstract>temp buffers for input and FFT wrappers </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mHOutL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>adcd54d3826867b8959b7caf5d9a730a4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mHOutR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>ae2b25b49d4d0b130799ad2d9a6551f48</Anchor>
    <Abstract>buffers for the mixed HRTF &amp; input data pre-IFFT </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIFFTOutL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>a7dda9735b06f8ef86d9c1391f58ee049</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIFFTOutR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>a6948419dbc932e34fcf800ca5143d150</Anchor>
    <Abstract>outputs of the IFFT </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBlockInd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_panner.html</Path>
    <Anchor>ae2fa37c0a01518f6ce8c35b04aad2423</Anchor>
    <Abstract>block index </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a470567e2f64564c4ec0c80bc6faaaa97</Anchor>
    <Abstract>SpatialSource... refers to its input UGen, but with the knowledge of its position within a space...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a7165ffb7e0fe7fe6454409f9ac8ff50a</Anchor>
    <Abstract>Vector of pointers to the prior I/O data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a0a81e9957bf271e336e8efc6a5381bb0</Anchor>
    <Abstract>If null, it will use the default layout by calling SpeakerLayout::defaultSpeakerLayout();. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTempBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a3d4d8e6502c2528597973f344b3acc37</Anchor>
    <Abstract>Buffer used to temporarily hold input source data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::BinauralSourceCache</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::BinauralSourceCache</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_source_cache.html</Path>
    <Abstract>BinauralSourceCache: used for caching previous state of spatial sources. This has the history of inpu...</Abstract>
    <DeclaredIn>Binaural.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BinauralSourceCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinauralSourceCache</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_source_cache.html</Path>
    <Anchor>a8bed88baf8ff3ddfd7bd6852e604532d</Anchor>
    <DeclaredIn>Binaural.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BinauralSourceCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinauralSourceCache</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_source_cache.html</Path>
    <Anchor>a331e2ef98c8f2c7cad957edde67621a4</Anchor>
    <DeclaredIn>Binaural.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInSpect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralSourceCache</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_source_cache.html</Path>
    <Anchor>aae96f049bcc2f3c1093b16786e1f462b</Anchor>
    <Abstract>complex spectra of mNumBlocks past inputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevOutL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralSourceCache</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_source_cache.html</Path>
    <Anchor>af19a0ea5afc3cb8515bf3a80cac423bb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevOutR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralSourceCache</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_source_cache.html</Path>
    <Anchor>a61725350e7a24c96284f6880c61ddf22</Anchor>
    <Abstract>previous sample window from the IFFT </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mHRTF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralSourceCache</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_source_cache.html</Path>
    <Anchor>ad46460630e26164b5b7e43459a3e8e4b</Anchor>
    <Abstract>list of block IDs of the &quot;split&quot; hrtf </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumBlocks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BinauralSourceCache</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binaural_source_cache.html</Path>
    <Anchor>aba9b917512925fb01a9b07d1750c7f67</Anchor>
    <Abstract>size of caches (16) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Biquad</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Abstract>General-purpose Biquad IIR (2nd order recursive) filter. This is simplified and optimized, but doesn&amp;#39;t support dynamic or scalable controls. It uses inst vars rather than arrays for the coefficients. NB: peak gain (dB) is used only for the peak and shelf types) </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Biquad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>a52dca857188efd568cce9e763c1fcb82</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Biquad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>a204d821a994bdff6754c7c179816058a</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Biquad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>aa583f17e81b478ace0219f5168ffcd39</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>a9c960bf03d3d9da21e849e1609d2b3c2</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>ac2c8ae2cd6b5ac1174b733afb8f2dbc6</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrq</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>a1be17860242243858e2a13268db1d555</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>incrFrq</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>ab4fa13ca448b6adb87675dd064581f5a</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBoost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>a6f87f3c80cef25b1b1e39376ccc3141e</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>incrBoost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>a7325d550de9f82e82dfc45f4f5afa5e2</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a0025ddcb760ab59042a1b7f1454d7f86</Anchor>
    <Abstract>clears the input/output buffers </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupCoeffs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a005874013140674786666154cf493acf</Anchor>
    <Abstract>to be overloaded by subclasses supply the coefficients directly </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>af498bd7cc09785fb5c1a4c80ac603015</Anchor>
    <Abstract>log information about myself </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ac6cae58dc83261deb85088a3e42beb73</Anchor>
    <Abstract>set the receiver&amp;#39;s frequency to a UGen or a float </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ae1d49bbec872cf00f373df250af154a5</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a330e3b583d58717d2423f888fddb6dbd</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a33b250117a39b2fdda305daa8b472fbd</Anchor>
    <Abstract>set the receiver&amp;#39;s amount to a UGen or a float </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a8d4de20eb83b38c4b85866e226fca39b</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupCoeffs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>a0f1dd7623d3aeb83d3c3781c62cd7aa0</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a689e7ff28c2d3336a408965c79674853</Anchor>
    <Abstract>shared initialization function </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFilterType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>a69a91992f04756ffd5dcd5d76830dc81</Anchor>
    <Abstract>flag as to what kind of filter I am </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>a4fe87c56245240e05fcc5dd332fb5ac1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>aea68e0cce9fdf6d47cc95ef248ee81f7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Q</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>a455b86f1a1dc7396152b7dcab4592602</Anchor>
    <Abstract>ctr frq (Hz), peak (dB), Q(uality) factor </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>a7fc2f724256b78b6b193336c65850c03</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>aa7006264c9e52cbfab93d017f1510134</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>aaa64c226cbcba8e0d6421b53141cf4c2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>a10fc6ad1b6b513906145d01fbae1f91d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>a17cd41f5848de9432cba1c400b7c792f</Anchor>
    <Abstract>coefficients </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>z1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>ab3d333aa3fe9e2ceb32042d0b8d1808c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>z2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Biquad</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_biquad.html</Path>
    <Anchor>aa5a98d948c578d523db976443608c27d</Anchor>
    <Abstract>past outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>ae88e176028ac99dbc4fe816289b90dcb</Anchor>
    <Abstract>array of numerator coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mACoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a95b02921293a9ff951107a2568ba7731</Anchor>
    <Abstract>array of denominator coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBNum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>aa7156b0b5d3c8d4f08181325654262b2</Anchor>
    <Abstract>number of coeffs in b </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mANum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>abbd984700c6190e0737d626eed850bf4</Anchor>
    <Abstract>number of coeffs in a </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a5b23dbbb4d7dd347280e188c7ddda873</Anchor>
    <Abstract>arrays of past input and output samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a869ea8dedfde47401e02e4c1944efac3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a95cd99da2071d440280d5b10d74226df</Anchor>
    <Abstract>to keep hold of sample rate for calculating coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::BlackmanHarrisWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::BlackmanHarrisWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_blackman_harris_window.html</Path>
    <Abstract>BlackmanHarrisWindow. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlackmanHarrisWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BlackmanHarrisWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_blackman_harris_window.html</Path>
    <Anchor>a6592b06e07177148c491314b7a471796</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlackmanHarrisWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BlackmanHarrisWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_blackman_harris_window.html</Path>
    <Anchor>a508adfe197f06c3960685b2f87142e30</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlackmanHarrisWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BlackmanHarrisWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_blackman_harris_window.html</Path>
    <Anchor>a9e4ac4cb9249baf1b1785d86f017b70a</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BlackmanHarrisWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BlackmanHarrisWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_blackman_harris_window.html</Path>
    <Anchor>af1de0aeb592858709f6b66adad0a9ad3</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a445538717eb019a4a4b9f2581b34ee3e</Anchor>
    <Abstract>Set the number of samples the window spans. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a964f52a0cd1ee2089a632c507d0d87ec</Anchor>
    <Abstract>Set the gain to which the window should be normalized. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a02b50e78cdcc095403b5b96d37732bae</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a7b53f0c4c280029dc76470d3b3fcd890</Anchor>
    <Abstract>Returns a pointer to the window data. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>acfcb1d9b3ede7ac833d01b0cb17e0d64</Anchor>
    <Abstract>Print some info about the window. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BlackmanHarrisWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_blackman_harris_window.html</Path>
    <Anchor>a683fad30d66eab2aeb4b2bcb700a1e76</Anchor>
    <Abstract>subclasses override this to fill the buffer with corresponding function. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a8fe40904c35cdede17b4f6f7ba06e6a7</Anchor>
    <Abstract>used to store the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBufferPos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>aa0ac80869363b3471bd25727443529b3</Anchor>
    <Abstract>where am I in the window buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a4a832d761a5101d8dca5e820914e491d</Anchor>
    <Abstract>length in samples of the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a185596ca7875d3cfa30e089d34ae0fe9</Anchor>
    <Abstract>gain for the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::BlackmanWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::BlackmanWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_blackman_window.html</Path>
    <Abstract>BlackmanWindow. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlackmanWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BlackmanWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_blackman_window.html</Path>
    <Anchor>a5624c25d90e3541f3925c58b9574fd46</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlackmanWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BlackmanWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_blackman_window.html</Path>
    <Anchor>a60efc6b5c99929a193ff1ef5c2144e4d</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlackmanWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BlackmanWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_blackman_window.html</Path>
    <Anchor>a97c5abb6c045d0564e9eb1de78008612</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BlackmanWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BlackmanWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_blackman_window.html</Path>
    <Anchor>a603b8828c7cc9d6b0387b30ab32109a1</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a445538717eb019a4a4b9f2581b34ee3e</Anchor>
    <Abstract>Set the number of samples the window spans. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a964f52a0cd1ee2089a632c507d0d87ec</Anchor>
    <Abstract>Set the gain to which the window should be normalized. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a02b50e78cdcc095403b5b96d37732bae</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a7b53f0c4c280029dc76470d3b3fcd890</Anchor>
    <Abstract>Returns a pointer to the window data. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>acfcb1d9b3ede7ac833d01b0cb17e0d64</Anchor>
    <Abstract>Print some info about the window. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BlackmanWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_blackman_window.html</Path>
    <Anchor>a2904f65cfd7d36f22eed9d7543e2b673</Anchor>
    <Abstract>subclasses override this to fill the buffer with corresponding function. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a8fe40904c35cdede17b4f6f7ba06e6a7</Anchor>
    <Abstract>used to store the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBufferPos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>aa0ac80869363b3471bd25727443529b3</Anchor>
    <Abstract>where am I in the window buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a4a832d761a5101d8dca5e820914e491d</Anchor>
    <Abstract>length in samples of the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a185596ca7875d3cfa30e089d34ae0fe9</Anchor>
    <Abstract>gain for the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::BlockResizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::BlockResizer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_block_resizer.html</Path>
    <Abstract>Regularizes the amount of data called for. This is useful for time-frequency transformations that onl...</Abstract>
    <DeclaredIn>BlockResizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlockResizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BlockResizer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_block_resizer.html</Path>
    <Anchor>a6e6c589e9148c129b025b36a40164963</Anchor>
    <Abstract>ctor / dtor </Abstract>
    <DeclaredIn>BlockResizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BlockResizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BlockResizer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_block_resizer.html</Path>
    <Anchor>af36d54e83ce51acf895dc893df514ec7</Anchor>
    <DeclaredIn>BlockResizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BlockResizer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_block_resizer.html</Path>
    <Anchor>a5447a8f104d443c5f3ccce1f359b21e0</Anchor>
    <Abstract>the work-horse method calls the up-hill graph as needed </Abstract>
    <DeclaredIn>BlockResizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BlockResizer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_block_resizer.html</Path>
    <Anchor>a4eec7f1bcabcb52bebece9702c714ce2</Anchor>
    <Abstract>my input unit generator (pointer) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BlockResizer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_block_resizer.html</Path>
    <Anchor>a94baab2819981d8ba2dd932053f9b930</Anchor>
    <Abstract>buffer used to pull input </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BlockResizer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_block_resizer.html</Path>
    <Anchor>aab079724e2e0623e8e824db7fbd7cbcf</Anchor>
    <Abstract>fixed buffer size of the up-hill graph </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFramePointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BlockResizer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_block_resizer.html</Path>
    <Anchor>a8caf9a52f2406d106381108f129d8f33</Anchor>
    <Abstract>where am I in reading the input? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Buffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Abstract>Buffer – the multi-channel sample buffer class (passed around between generators and IO guys)...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a95f21039ad600c844f3ba7e5ae421d47</Anchor>
    <Abstract>Constructor: default is mono and default-size. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a59b8743e4a5f731bdd0c4185c9ef263b</Anchor>
    <Abstract>Destructor de-allocated. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a918fcf7dae9b05fdbfd16ec773f2a3a3</Anchor>
    <Abstract>answer the buffer&amp;#39;s duration in seconds </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a8c25c9f605b0cdebd4626bf4795b286d</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeOnly</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a271e468fd7db8b019219d59dda7191a5</Anchor>
    <Abstract>this version doesn&amp;#39;t even allocate the pointers </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>af22d974d9c91cace59a16c3de3f64897</Anchor>
    <Abstract>allocate if not already there </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocateBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a6880eea0019e9ebf7a61ce542e52a23a</Anchor>
    <Abstract>fcn to malloc storage buffers </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freeBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a24c3994dfe73ba91980273ab3ccf0fa6</Anchor>
    <Abstract>fcn to free them </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canStore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>af447a9071024c8dbcaa11c8070f51836</Anchor>
    <Abstract>answer whether the recevei can store numFrames more frames </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>adffa7078fa839efa88302a238e0ba8f8</Anchor>
    <Abstract>fill all data with 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillWith</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a3176af0f95b2544ae3f74b38fcb0defe</Anchor>
    <Abstract>fill data with the given value </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleBy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a46dc1ed83826fc590a7f8551f9f59932</Anchor>
    <Abstract>scale the samples by the given value </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a2bdd2120125a9b00a40aafe6d7fe3c65</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyHeaderFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a3d120398cd5ef4f1fb5ecc63d826d966</Anchor>
    <Abstract>copy the &quot;header&quot; fields of a buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copySamplesFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a2985567420be118187e5d4010aa37833</Anchor>
    <Abstract>import data from the given buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copySamplesFromTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>ab1c9511087c61dea57e2a8700a6de823</Anchor>
    <Abstract>same with write offset </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyOnlySamplesFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a36b0e60af8a42fcd821c7f920387111c</Anchor>
    <Abstract>import data from the given buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a002adaad8e1a1d0d94cc0472fa1c33ca</Anchor>
    <Abstract>read a buffer from a snd file; answer success </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a1fa3f4a3ccefa410caccff18bbd5c88d</Anchor>
    <Abstract>convert the sample rate using libSampleRate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>samplePtrFor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>af7132204ccce08b9ae46c5cd0205cb4d</Anchor>
    <Abstract>answer a samp ptr with offset </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>samplePtrFor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a862c617a72a9e6e45060e1bbd902be9b</Anchor>
    <Abstract>answer a samp ptr tested for extent (offset + maxFrame) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>ab05a54225ae97f9ed1ae30bbbc0fd14c</Anchor>
    <Abstract>convenience accessors for sample buffers </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a764ce8f7d3b35a75591aad9aff50215a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a4e3301dae8598a013dd73ee6f90cf9b4</Anchor>
    <Abstract>Set the buffer pointer (rare; used in joiners) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a3430abf7c9c920e18e50a1a5e436f6f5</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a8419752ba80ed94efbd2e7cba57861ea</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a27cd634184b30949bb567f9cde4d803b</Anchor>
    <Abstract>normalize the buffer(s) to the given max; answer the prior max </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a32de7bb30a82a3ff0e0074f0e02e481a</Anchor>
    <Abstract>normalize the given region only </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a7312fd854f77139838e66310d68884b1</Anchor>
    <Abstract>Buffer Sample Processing (optional). One could also easily add Buffer operators, such as (Buffer + Bu...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>avg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>ab8aa749635753645f17d7bfa17d1ed95</Anchor>
    <Abstract>get the average of the samples </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>ae82190fb16006a36bbf610942e174098</Anchor>
    <Abstract>get the max of the absolute val of the samples </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a07f4f503cc7850d8899dcde1a311f0ff</Anchor>
    <Abstract>get the min of the samples </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>ade047ef82822b88b908f5b653f519b7e</Anchor>
    <Abstract>num channels in buffer (num mono buffers) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a979a1d5845e3e3f4f35d13b8baffdf96</Anchor>
    <Abstract>num frames used in each buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumAlloc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>ae67b75acbd22cf2e99dcd94a4828c5a6</Anchor>
    <Abstract>num frames in each buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMonoBufferByteSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a649b8659887a82739a1cf4c57c731a18</Anchor>
    <Abstract>size of each buffer in bytes </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a5c48aab7e9b3ae58b2ec793588f43d69</Anchor>
    <Abstract>sequential serial number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a3969a712e4d45fc9d79b656e466bf03a</Anchor>
    <Abstract>the buffer&amp;#39;s most recent timestamp </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAreBuffersAllocated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>ab26d21f23ceef4a964ac381b9274ff09</Anchor>
    <Abstract>are the buffers allocated? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDidIAllocateBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a48700df48c6455e36e6e43a2a1ec10ca</Anchor>
    <Abstract>who allocated my data buffers? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsPopulated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>ad29437a569b9ebde64675830c54e313f</Anchor>
    <Abstract>does the buffer have data? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAreBuffersZero</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a06b97a72515ead21060b2b76ff46714c</Anchor>
    <Abstract>have the buffers been zeroed out? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a2f0cf286d7d9f91b4459e3a81a8c58df</Anchor>
    <Abstract>Data type flag set the internal size variables (no buffer allocation takes place) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a02736ff701cce46d3225804b09903686</Anchor>
    <Abstract>the storage vector – pointers to (SampleBuffer) buffers </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::BufferCMap</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::BufferCMap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_c_map.html</Path>
    <Abstract>BufferCMap is a Sample buffer with channel map and count. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BufferCMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BufferCMap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_c_map.html</Path>
    <Anchor>a4215af773b98e8618c9486ec012b8a13</Anchor>
    <Abstract>Constructors: default is useless. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BufferCMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BufferCMap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_c_map.html</Path>
    <Anchor>a2f5d56753bc701c75e6f4db7680dc587</Anchor>
    <Abstract>ask for a given number of &quot;virtual&quot; channels </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BufferCMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BufferCMap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_c_map.html</Path>
    <Anchor>a3639af7c5caeb0ca61a890703b874b35</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BufferCMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BufferCMap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_c_map.html</Path>
    <Anchor>a4b87bf16ad480aed824ec8acba5808d0</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BufferCMap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_c_map.html</Path>
    <Anchor>a2cb74a523c50b5a505998adef48ac611</Anchor>
    <Abstract>Pointer accessor uses channel map. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a918fcf7dae9b05fdbfd16ec773f2a3a3</Anchor>
    <Abstract>answer the buffer&amp;#39;s duration in seconds </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a8c25c9f605b0cdebd4626bf4795b286d</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeOnly</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a271e468fd7db8b019219d59dda7191a5</Anchor>
    <Abstract>this version doesn&amp;#39;t even allocate the pointers </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>af22d974d9c91cace59a16c3de3f64897</Anchor>
    <Abstract>allocate if not already there </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocateBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a6880eea0019e9ebf7a61ce542e52a23a</Anchor>
    <Abstract>fcn to malloc storage buffers </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freeBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a24c3994dfe73ba91980273ab3ccf0fa6</Anchor>
    <Abstract>fcn to free them </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canStore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>af447a9071024c8dbcaa11c8070f51836</Anchor>
    <Abstract>answer whether the recevei can store numFrames more frames </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>adffa7078fa839efa88302a238e0ba8f8</Anchor>
    <Abstract>fill all data with 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillWith</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a3176af0f95b2544ae3f74b38fcb0defe</Anchor>
    <Abstract>fill data with the given value </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleBy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a46dc1ed83826fc590a7f8551f9f59932</Anchor>
    <Abstract>scale the samples by the given value </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a2bdd2120125a9b00a40aafe6d7fe3c65</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyHeaderFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a3d120398cd5ef4f1fb5ecc63d826d966</Anchor>
    <Abstract>copy the &quot;header&quot; fields of a buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copySamplesFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a2985567420be118187e5d4010aa37833</Anchor>
    <Abstract>import data from the given buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copySamplesFromTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>ab1c9511087c61dea57e2a8700a6de823</Anchor>
    <Abstract>same with write offset </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyOnlySamplesFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a36b0e60af8a42fcd821c7f920387111c</Anchor>
    <Abstract>import data from the given buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a002adaad8e1a1d0d94cc0472fa1c33ca</Anchor>
    <Abstract>read a buffer from a snd file; answer success </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a1fa3f4a3ccefa410caccff18bbd5c88d</Anchor>
    <Abstract>convert the sample rate using libSampleRate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>samplePtrFor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>af7132204ccce08b9ae46c5cd0205cb4d</Anchor>
    <Abstract>answer a samp ptr with offset </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>samplePtrFor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a862c617a72a9e6e45060e1bbd902be9b</Anchor>
    <Abstract>answer a samp ptr tested for extent (offset + maxFrame) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a764ce8f7d3b35a75591aad9aff50215a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a4e3301dae8598a013dd73ee6f90cf9b4</Anchor>
    <Abstract>Set the buffer pointer (rare; used in joiners) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a3430abf7c9c920e18e50a1a5e436f6f5</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a8419752ba80ed94efbd2e7cba57861ea</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a27cd634184b30949bb567f9cde4d803b</Anchor>
    <Abstract>normalize the buffer(s) to the given max; answer the prior max </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a32de7bb30a82a3ff0e0074f0e02e481a</Anchor>
    <Abstract>normalize the given region only </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a7312fd854f77139838e66310d68884b1</Anchor>
    <Abstract>Buffer Sample Processing (optional). One could also easily add Buffer operators, such as (Buffer + Bu...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>avg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>ab8aa749635753645f17d7bfa17d1ed95</Anchor>
    <Abstract>get the average of the samples </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>ae82190fb16006a36bbf610942e174098</Anchor>
    <Abstract>get the max of the absolute val of the samples </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a07f4f503cc7850d8899dcde1a311f0ff</Anchor>
    <Abstract>get the min of the samples </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRealNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BufferCMap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_c_map.html</Path>
    <Anchor>a79428bd5faaeb9bcb37098adc4680a72</Anchor>
    <Abstract>the actual number of channels used </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChannelMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BufferCMap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_c_map.html</Path>
    <Anchor>a775bbbc2b1e6f4f2e103dc54d9eed975</Anchor>
    <Abstract>the map between virtual and real channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>ade047ef82822b88b908f5b653f519b7e</Anchor>
    <Abstract>num channels in buffer (num mono buffers) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a979a1d5845e3e3f4f35d13b8baffdf96</Anchor>
    <Abstract>num frames used in each buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumAlloc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>ae67b75acbd22cf2e99dcd94a4828c5a6</Anchor>
    <Abstract>num frames in each buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMonoBufferByteSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a649b8659887a82739a1cf4c57c731a18</Anchor>
    <Abstract>size of each buffer in bytes </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a5c48aab7e9b3ae58b2ec793588f43d69</Anchor>
    <Abstract>sequential serial number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a3969a712e4d45fc9d79b656e466bf03a</Anchor>
    <Abstract>the buffer&amp;#39;s most recent timestamp </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAreBuffersAllocated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>ab26d21f23ceef4a964ac381b9274ff09</Anchor>
    <Abstract>are the buffers allocated? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDidIAllocateBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a48700df48c6455e36e6e43a2a1ec10ca</Anchor>
    <Abstract>who allocated my data buffers? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsPopulated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>ad29437a569b9ebde64675830c54e313f</Anchor>
    <Abstract>does the buffer have data? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAreBuffersZero</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a06b97a72515ead21060b2b76ff46714c</Anchor>
    <Abstract>have the buffers been zeroed out? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a2f0cf286d7d9f91b4459e3a81a8c58df</Anchor>
    <Abstract>Data type flag set the internal size variables (no buffer allocation takes place) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Buffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer.html</Path>
    <Anchor>a02736ff701cce46d3225804b09903686</Anchor>
    <Abstract>the storage vector – pointers to (SampleBuffer) buffers </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::BufferStream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::BufferStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_stream.html</Path>
    <Abstract>Class to simplify writing into and playing back buffers. Think of this as a simple buffer that has a ...</Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BufferStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BufferStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_stream.html</Path>
    <Anchor>aaa42b8d8b664fe46d9a97472b056eb6d</Anchor>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BufferStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BufferStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_stream.html</Path>
    <Anchor>a18ade0f643a079ed39ccdaf6fdd9f651</Anchor>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BufferStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_stream.html</Path>
    <Anchor>aff283cac769fbf02f88f229484345412</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BufferStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_stream.html</Path>
    <Anchor>a5eeca8a7c39d59be7e269740ba112bff</Anchor>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BufferStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_stream.html</Path>
    <Anchor>a24573b300b1f82db715a83b57a265272</Anchor>
    <Abstract>Read a buffer from the buffer stream. </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BufferStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_stream.html</Path>
    <Anchor>a1eb73d8cc038d419d130c55f2e67a3c8</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BufferStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_stream.html</Path>
    <Anchor>a1494e742c1c08d5661edba6807b5136a</Anchor>
    <Abstract>Write a buffer of data into the ring buffer. </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BufferStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_stream.html</Path>
    <Anchor>aacf409a5e265724eadcb90ac4f84bfb7</Anchor>
    <Abstract>write to the receiver </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seekTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BufferStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_stream.html</Path>
    <Anchor>a638407ef1396d328ed9f6027894af70e</Anchor>
    <Abstract>general-purpose seek on a stream </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BufferStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_stream.html</Path>
    <Anchor>abfaa96be20efc96b0f15e013d87df1ab</Anchor>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a28b5bad4f2349398de3c6d09304fef4c</Anchor>
    <Abstract>reset-to-zero </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a323673b284a59f017163a9d4bac3e51b</Anchor>
    <Abstract>where I currently am in the buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mActualFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a473db0a6a9460c7c4f162648e19f8421</Anchor>
    <Abstract>where I actually am in the buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BufferStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_stream.html</Path>
    <Anchor>a449821c59225f1242d9d5b80f04da65d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentWriteFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BufferStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_stream.html</Path>
    <Anchor>ad400779beb9c36e040e8bf8a90d143e2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTempCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BufferStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_stream.html</Path>
    <Anchor>a0bb48df1f7e5e63fbcf1267019d4cd86</Anchor>
    <Abstract>a little hack necessary to track info </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTempCurrentWriteFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::BufferStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_buffer_stream.html</Path>
    <Anchor>a6ca8b0cbd1c637a4b4d6c90e335570f8</Anchor>
    <Abstract>a little hack necessary to track info </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Butter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Butter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_butter.html</Path>
    <Abstract>Butterworth IIR (2nd order recursive) filter. </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Butter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Butter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_butter.html</Path>
    <Anchor>a3530e2cb4ec0ecad6d696f0d76ad4ae2</Anchor>
    <Abstract>Butterworth IIR (2nd order recursive) filter. This operates upon a buffer of frames of amplitude samp...</Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Butter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Butter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_butter.html</Path>
    <Anchor>a9d8626047a5553c2434af4c75d13b535</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Butter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Butter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_butter.html</Path>
    <Anchor>a0bc3a3d16b55c2a3780cf3403877ab6a</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Butter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Butter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_butter.html</Path>
    <Anchor>a2c727dcc8b024a79be54d224b584751b</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Butter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Butter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_butter.html</Path>
    <Anchor>a1a6d560f453d660e3430467ebae40fdb</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Butter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Butter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_butter.html</Path>
    <Anchor>ab6182c10aa08b46c734a277c5facafb2</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Butter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Butter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_butter.html</Path>
    <Anchor>a05a59444391f0bc15f92388802cc9706</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupCoeffs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Butter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_butter.html</Path>
    <Anchor>af80986fcd94ec8319e9a564ba62610ec</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a0025ddcb760ab59042a1b7f1454d7f86</Anchor>
    <Abstract>clears the input/output buffers </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupCoeffs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a005874013140674786666154cf493acf</Anchor>
    <Abstract>to be overloaded by subclasses supply the coefficients directly </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>aa8026143668464aa692e4cecf3092a59</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>af498bd7cc09785fb5c1a4c80ac603015</Anchor>
    <Abstract>log information about myself </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ac6cae58dc83261deb85088a3e42beb73</Anchor>
    <Abstract>set the receiver&amp;#39;s frequency to a UGen or a float </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ae1d49bbec872cf00f373df250af154a5</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a330e3b583d58717d2423f888fddb6dbd</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a33b250117a39b2fdda305daa8b472fbd</Anchor>
    <Abstract>set the receiver&amp;#39;s amount to a UGen or a float </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a8d4de20eb83b38c4b85866e226fca39b</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a689e7ff28c2d3336a408965c79674853</Anchor>
    <Abstract>shared initialization function </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFilterType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Butter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_butter.html</Path>
    <Anchor>a1b06aecab9bd8253b695b210c8148344</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>ae88e176028ac99dbc4fe816289b90dcb</Anchor>
    <Abstract>array of numerator coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mACoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a95b02921293a9ff951107a2568ba7731</Anchor>
    <Abstract>array of denominator coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBNum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>aa7156b0b5d3c8d4f08181325654262b2</Anchor>
    <Abstract>number of coeffs in b </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mANum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>abbd984700c6190e0737d626eed850bf4</Anchor>
    <Abstract>number of coeffs in a </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a5b23dbbb4d7dd347280e188c7ddda873</Anchor>
    <Abstract>arrays of past input and output samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a869ea8dedfde47401e02e4c1944efac3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a95cd99da2071d440280d5b10d74226df</Anchor>
    <Abstract>to keep hold of sample rate for calculating coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Cacheable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Cacheable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_cacheable.html</Path>
    <Abstract>Cacheable – a mix-in for caching streams. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cacheable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Cacheable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_cacheable.html</Path>
    <Anchor>a9944b02790e9ff8b799d7d0df3a36c52</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cacheable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Cacheable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_cacheable.html</Path>
    <Anchor>af27544a4636d991ec24581f1fe46ffdb</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUseCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Cacheable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_cacheable.html</Path>
    <Anchor>a7e865d55361ee4b836489340b0da91e2</Anchor>
    <Abstract>whether I&amp;#39;m to cache (vs. compute) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::CAIO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::CAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_i_o.html</Path>
    <Abstract>CoreAudio IO class. </Abstract>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CAIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_i_o.html</Path>
    <Anchor>aa396976453f9f594f89c1e6bcf7b9505</Anchor>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CAIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_i_o.html</Path>
    <Anchor>a4b8cce882b5305070fa2cf8c1af912b4</Anchor>
    <Abstract>Most verbose constructor – specify everything. </Abstract>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CAIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_i_o.html</Path>
    <Anchor>a96f8d5dc184d2b32ff545a6bd6077e1a</Anchor>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_i_o.html</Path>
    <Anchor>aebd4c3bd381d701e56125ca28fa94951</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_i_o.html</Path>
    <Anchor>a4527546c919c61975b82e1452a6404f2</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_i_o.html</Path>
    <Anchor>a66e05928326eeab043d090efa3bd01b2</Anchor>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_i_o.html</Path>
    <Anchor>abdd895eaade3dcc3011730335cf68f17</Anchor>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAudioUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>ad81e59e1636a681527a23737905b5570</Anchor>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAudioUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>ad81e59e1636a681527a23737905b5570</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a7f164ed81ffdca6c7b117fc24ac41d34</Anchor>
    <Abstract>get the current input buffer </Abstract>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a55bf4cba93ef6eb5f73f1fea96fca4da</Anchor>
    <Abstract>get the current input buffer </Abstract>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>aeb87717c93d4188b164f6747e8c751ad</Anchor>
    <Abstract>get the current input buffer get the current input buffer </Abstract>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a330e67dda82f547ae9fc64ab03dcf2de</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6a8d3350db4f0b632509e6cbcf81b5c9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_on</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a33d3dfbf6b9de273c70491e4ed3540c0</Anchor>
    <Abstract>test the IO&amp;#39;s graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_off</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a29d83e9b6fc2610ea3cbac33588b9dcf</Anchor>
    <Abstract>end output capture </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_capture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0ce9f71e62551b921a17869f0d4ea3c8</Anchor>
    <Abstract>answer the capture buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0cd73786ea896b62cf0ec3e3e0367dd8</Anchor>
    <Abstract>set/clear my graph root generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a538b273c6de621b2e38266e6216bde1c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7cca2bf79735626d7ab93684554e0bff</Anchor>
    <Abstract>get a buffer from the CSL graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAndIncrementSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af2075a50a32bf0cfddae3183b37e0959</Anchor>
    <Abstract>increment and answer my seq # </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printTimeStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc6975037c1beec8dadf8f4bb1405549</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af8690c5e8a8f34a0b10b74f3cd066063</Anchor>
    <Abstract>the root of my client DSP graph, often a mixer or panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a688331f6e9a2b1356f545d2ace55f41a</Anchor>
    <Abstract>the most recent input buffer (if it&amp;#39;s turned on) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a3c5d6efa6e7750baa2c271bb075b476c</Anchor>
    <Abstract>the output buffer I use (passed to nextBuffer calls) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCaptureBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a795d3c1ee90a4cdcd802b4592beb97d4</Anchor>
    <Abstract>the output buffer I use for capturing output (for testing) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afff5975d365381be5385ebe15b3a7bd2</Anchor>
    <Abstract>the buffer for holding the sound card input (if open) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChannelMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc83a0ce4a361d076eea2e657e256683</Anchor>
    <Abstract>the output channel remapping array </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFramesPlayed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7b84206149d0f23fee4669838291f222</Anchor>
    <Abstract>counter of frames I&amp;#39;ve played </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afc645076ff45980d4b9d8c2209f55850</Anchor>
    <Abstract>sequence counter </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLoggingPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a297e157c9f133ea1d9face8f08165478</Anchor>
    <Abstract>logging period in seconds </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a5e0be8bcb1d550c798d0cd12885754a7</Anchor>
    <Abstract>inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa384e814fb13e794b11f6ece70c37f21</Anchor>
    <Abstract>outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa00a157f1e87264998ba876740e80448</Anchor>
    <Abstract>physical inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a42b4e4ef54d1ae1f5a35bf962767608d</Anchor>
    <Abstract>physical outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a00e7e09a91e97b4fe51e9f1cab42354e</Anchor>
    <Abstract>status flag </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0f04053849229c3aa671f67783fee760</Anchor>
    <Abstract>flag if IO is interleaved </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a34133e4a0b4c142541f11fc67c1d76fc</Anchor>
    <Abstract>used for capture offset </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aacec7725efc2851f7cfd94c12f5c3c90</Anchor>
    <Abstract>used for getting the real time </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeVals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6347e98caa1e7767dabae8a6c75c3535</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThisSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a62812f8f78f1e1859fd8b39a4e0f047c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7fe073467db4543ef9c925151f65a13c</Anchor>
    <Abstract>for printing run-time statistics </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a03a3a04552d3c4862dceffdc6d513376</Anchor>
    <Abstract>cpu usage % print the CPU usage message </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_i_o.html</Path>
    <Anchor>aec75e5a3c82cd15b2a8971516d8e8d01</Anchor>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af4d52f5f176a5d68ddd88fd4fbaa6eca</Anchor>
    <Abstract>initialize overridden in subclasses </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAudioUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a140c2b8aa61826c7672068c12d4967ae</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAudioUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>ab4d2654f6fb47c214b2afcd4a68258a5</Anchor>
    <Abstract>The AudioUnit we play out. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxSampEver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a531db5245d57b705379d5949f2d7e24c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::CASoundFile</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Abstract>CoreAudio sound file. </Abstract>
    <DeclaredIn>SoundFileCA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CASoundFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>ac91215173b88ca89ceb9b04a0317489d</Anchor>
    <DeclaredIn>SoundFileCA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CASoundFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>a9f02bfe4ba6597f1fa86b99b94281892</Anchor>
    <DeclaredIn>SoundFileCA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CASoundFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>a8891a6d2d7b80b5a5d0be932722e4f78</Anchor>
    <Abstract>Copy constructor – shares sample buffer. </Abstract>
    <DeclaredIn>SoundFileCA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CASoundFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>ac270668add73238ac637473c99ffbc90</Anchor>
    <DeclaredIn>SoundFileCA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>format</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>afd97c043bf6daaddf34300df2e4e4bb7</Anchor>
    <Abstract>get format </Abstract>
    <DeclaredIn>SoundFileCA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>afeafb135bf4795ee161d20ba3d42ecff</Anchor>
    <Abstract>log snd file props &lt; open file and get stats; read it if &quot;load&quot; </Abstract>
    <DeclaredIn>SoundFileCA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openForRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>ae980c46d5730a4564e05dbf12ce55e15</Anchor>
    <DeclaredIn>SoundFileCA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openForWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>aa26392d4732ea3cf2c71a4e305dacc68</Anchor>
    <Abstract>Open a file for write. Default values are some common format. </Abstract>
    <DeclaredIn>SoundFileCA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openForReadWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>a52562fe9e6d347096b6d77aeabec9add</Anchor>
    <Abstract>open r/w </Abstract>
    <DeclaredIn>SoundFileCA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>a93c98b0ede9bda1248f04282f83b7e9d</Anchor>
    <Abstract>close file seek to some position </Abstract>
    <DeclaredIn>SoundFileCA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seekTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>ac138817a560dc36af111ad7fdfb443b4</Anchor>
    <Abstract>seek to some position relative to &quot;whence&quot; </Abstract>
    <DeclaredIn>SoundFileCA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readBufferFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>ad850631042cf3cb842f6f986bf8196cf</Anchor>
    <Abstract>read a buffer from the file (possibly all of it) </Abstract>
    <DeclaredIn>SoundFileCA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>a99f0ef9f406f9a89124bcb58e1220039</Anchor>
    <Abstract>write a buffer of data into the file </Abstract>
    <DeclaredIn>SoundFileCA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seekTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a91a9c0a87cfadef30c85c87036e0c44d</Anchor>
    <Abstract>read a buffer from the file (possibly all of it) </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1c0a5b8c0b7b88f6aededaf3cac11b3a</Anchor>
    <Abstract>UGen operations are implemented here copy next buffer from file cache. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>abf76877b80d84a924c71cfe057c589c9</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a92dad375e86953b5fbf1485cfcf0f3e7</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a81eea91b52e169befa68a5a29d3da112</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a05e5efd5f4d9e3b8f3d5b232f9a3837f</Anchor>
    <Abstract>accessors </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ac956abb9c44bb61ab9ca4f523ae4b0ba</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>durationInSecs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>abb47af4a2d3f91e54fc2f41f484df3e5</Anchor>
    <Abstract>number of frames in the sound file </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sampleSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a761cf27eb474b6b59da6adbf7a39c020</Anchor>
    <Abstract>get the bytes-per-sample </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a474309df902bbd2fa3a40ef349e0beda</Anchor>
    <Abstract>r/w mode </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1712da90ed0fb0f942a200efcd082e39</Anchor>
    <Abstract>size in frames of cached portion </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mergeToMono</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a8c7c51e6f47210ce696acab098407de5</Anchor>
    <Abstract>average all the channels to mono </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setToEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad31170b93471b41f3631443778f3c70e</Anchor>
    <Abstract>set to end position </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a793fb9e9842dec545a2103beade94d71</Anchor>
    <Abstract>reset to start </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aff53ca4f2f799ec07ec8f97d1943b30c</Anchor>
    <Abstract>free the file cache </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad6d37c628d7f8c76774a173263959829</Anchor>
    <Abstract>perform sample-rate conversion </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a27c2487b064c91a585a7dac86bceaa3c</Anchor>
    <Abstract>answer if a valid file/buffer </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aa41bac4065f4d8337fcc4b8308ff3a6d</Anchor>
    <Abstract>answer if currently active </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a83560f6b69745afe3e608359ce78343f</Anchor>
    <Abstract>answer if file is loaded into RAM </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a90010297cfb69ddee6a04ee340cccb85</Anchor>
    <Abstract>answer if file has X samples in RAM </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>af8f20cc5a2e3ac0b7e47ec88a4a29453</Anchor>
    <Abstract>set file name path string </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a44834d40244991303c33c38a9232b803</Anchor>
    <Abstract>file name </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a6a438a4de00c32fe6341b01e757df41b</Anchor>
    <Abstract>get/set start frame </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a19f8496091b356079b3b3c88e2a298ad</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStartSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a2d85c9ddaa6405e7a868ff81ff5db9c1</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStartRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ae536aee3c744609f11f2ab001f47914f</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad2e6efb607e1238475634aa59b29da73</Anchor>
    <Abstract>get/set stop frame </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a92bffa7ebfc3785cea9a150326c79625</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStopSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a4b942b2ab31ba7548f297533feb8cd77</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStopRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aedba2ef6ff53cb9a8b6b248e57cbff73</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a703520f519b9784a6940143586ed9ff8</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a7c317a27143e0b5667a668f9dcd9648b</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playbackRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1cbaa98caa45514e8282593b04e97508</Anchor>
    <Abstract>playback rate (pitch ratio) </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a00abea2b87cb5fef1b67e13e2b1fc72c</Anchor>
    <Abstract>set the receiver&amp;#39;s playback rate (pitch ratio) </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1da9c9d3913f1b3c98ca26dc7220c718</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLooping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad8a32faddd42359d9273fff4307f9ea1</Anchor>
    <Abstract>get/set looping state </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIsLooping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a0d80781863eb728a43f930bd2f32e28d</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWaveform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a3f201809be66f80f23b50161f0deaed9</Anchor>
    <Abstract>plug in waveforms set the interpolation flag </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a246e451b9ccaa15d818c4417adfb7cf9</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a28b5bad4f2349398de3c6d09304fef4c</Anchor>
    <Abstract>reset-to-zero </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSndfileName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a939c5b11014fdda7d241f4fe95a2a8d8</Anchor>
    <Abstract>Answer whether the given name looks like a snd file. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sndfileNameType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ac750acef6fba96a989e3f1749b0bbb45</Anchor>
    <Abstract>Answer the snd file type. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mimeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a08cb1ee054382a06d925d2328ce32286</Anchor>
    <Abstract>Answer the MIME type based on the file name. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ae273a3d1c120209e883198e006b12b52</Anchor>
    <Abstract>the ID3 tags properties </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a1d37712b7fd137dab432d733003eca71</Anchor>
    <Abstract>whether/how I should interpolate between samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWavetable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a926e9d03bb39119f4c0992143cb3baaa</Anchor>
    <Abstract>the stored wave form </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a323673b284a59f017163a9d4bac3e51b</Anchor>
    <Abstract>where I currently am in the buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mActualFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a473db0a6a9460c7c4f162648e19f8421</Anchor>
    <Abstract>where I actually am in the buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromSndfile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>a63d41750098e519e622aa7761668544d</Anchor>
    <Abstract>read SF header </Abstract>
    <DeclaredIn>SoundFileCA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Writeable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_writeable.html</Path>
    <Anchor>ac402dc4b6151052465f5ca9c4554b7a0</Anchor>
    <Abstract>write to the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1a86a2b513d543b7ea804039c55eaded</Anchor>
    <Abstract>allocate buffer lazily </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aa326942115ced26aa160a14a48d424e0</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad7f7cb3958081adfaabc0e7fd6c4676a</Anchor>
    <Abstract>read the ID3 or other tags. Returns true if able to read them. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillSine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a983c39e543ebf3781e4b99bb7573eb05</Anchor>
    <Abstract>fill the shared wavetable with 1 cycle of a sine wave </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mURL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>ae646069971c9e4970498ad1278a6929e</Anchor>
    <Abstract>the full URL of the file </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSoundID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>a076a2475b06fdef09421e81d21f7a017</Anchor>
    <Abstract>the CS audio file ID </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBigEndian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CASoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_a_sound_file.html</Path>
    <Anchor>a1ef2128aaf5e956f96a55532ddfbd886</Anchor>
    <Abstract>flag for endian-ness of sound file (varies byformat) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a95dafe980f08f7b9560c1cae87b6dd3d</Anchor>
    <Abstract>file name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a449d4217d42485410d7f7749b2bc2278</Anchor>
    <Abstract>r/w mode </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a56b5142eb3308123411125930dbc8251</Anchor>
    <Abstract>sf format </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aeed69e1885231279589ec6a19ec80429</Anchor>
    <Abstract>is my file valid? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsLooping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a0689b61b407433cc008f0b57086ae030</Anchor>
    <Abstract>am i looping start-stop? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad23941ac7c045ee53d91d36b0780413e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a4c6d2508c69701c8348119dbf409668d</Anchor>
    <Abstract>starting/ending frames (or -1 if not used) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aa49de507d9c70a82214f838bd0ec1cce</Anchor>
    <Abstract>sample rate ratio </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ae675a4778bf49016f165dff612940d95</Anchor>
    <Abstract>sample frames</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBytesPerSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a0d6ae096275a3456fc86b1f864ff2e67</Anchor>
    <Abstract>the # of bytes per sample </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>afe3f27c850929e60f1d63b630e17aef1</Anchor>
    <Abstract>starting frame in file of buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::CException</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Abstract>Base class of CSL exceptions (written upper-case). Has a string message. </Abstract>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CException</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>aeda5edbb5b2a05696dc7de30e075ce62</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CException</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>a5c939882440bf960352f11e2fec9292c</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>aaa80baf48d8b2a9af6d5bce2d1b27388</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>a82f57e285f07ca934823977ed3d364e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::CGestalt</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Abstract>The CSL system defaults class. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a84be3935b89a6a7d545305521ea71c4e</Anchor>
    <Abstract>default frame rate </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRateF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a888542479f14417d3546278bcde01756</Anchor>
    <Abstract>default frame rate as a float </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>af3beabe0a123b10bde22d4e5ad5bf251</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>framePeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>af41a64b3e65d7152a01c3739fc4a6364</Anchor>
    <Abstract>default frame rate </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a18648e2d9b12eca9951f498d06456c4c</Anchor>
    <Abstract>default number of input channels </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a878f0cd230baf7b18d6692ce4d266025</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a5c50612505ef79baa5627acab0a0ee32</Anchor>
    <Abstract>default number of output channels </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a58fcb400f1de88e263adfedf9f0729c7</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blockSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a307bdedc01034447bd623010a43a51d2</Anchor>
    <Abstract>the default block size </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBlockSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>ac99fdc9392c2afdf116e120a7b56becd</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxBufferFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a3f005ac516e28ec671e5a296549779b6</Anchor>
    <Abstract>the max num frames that can be requested </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxBufferFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>ab26b8cf63c921a5b313780729eeab19d</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxSndFileFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>ac067115d658cd174bfc72e6d2e2234cf</Anchor>
    <Abstract>the max num frames that can be cached </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxSndFileFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>ad059005673ea60d00f7de0605067b0c4</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sndFileFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a4549e3e38b034f26db912e63155e6416</Anchor>
    <Abstract>the default num frames that are cached </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSndFileFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a820057e99451e50ac6a217ea9a616df3</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>verbosity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a1e029d5b8ca5f22743adf5210753241f</Anchor>
    <Abstract>the default logging verbosity </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVerbosity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a2d448e38822b873224ed3d522d384429</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loggingPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a3572f15451b182ef11cf4e1cd19fd45f</Anchor>
    <Abstract>the default logging period </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLoggingPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a12cf317eadc6b5c18f948d95def80b3d</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>aea775dd094659303f4451196d2de4121</Anchor>
    <Abstract>the default RemoteIO output port </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a19488e0521746d6bd67e15375649426b</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>acd6539bc379e39af18979c6970b963ca</Anchor>
    <Abstract>the default directory for test data </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a18873aad61e676116fa183e4da868746</Anchor>
    <Abstract>typ. &quot;~/Code/CSL/CSL_Data/&quot; </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>aa1abc88909a6c50d016a6d155f26da6f</Anchor>
    <Abstract>flag to stop threads and timers </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStopNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a58e378c3e4afed01211ff808025d150b</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearStopNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a383f05e15c6a999796dde486dc006dce</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFileText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a2f182d859faae904998436169abbfb5c</Anchor>
    <Abstract>read/write the init file (typ. ~/.cslrc) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeToInitFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>ab4fc28c296e336a0039c51cf53ba148f</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sndFileName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a691411763a6ce9a56b46ce3b87bf48b5</Anchor>
    <Abstract>pick a new sound file name to use based on OUT_SFILE_NAME </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>screenWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a8c3c8ae26c0b063b8e64ac3c45f017f0</Anchor>
    <Abstract>current screen width </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScreenWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a7a8e387c9974b3229facf0cf841d8675</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>screenHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a36936b5e623c59e3f02167a1728db3f2</Anchor>
    <Abstract>current screen height </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScreenHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CGestalt</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_gestalt.html</Path>
    <Anchor>a8b79d0ddebd2be455a7be18eae75bffc</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Clipper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Clipper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_clipper.html</Path>
    <Abstract>Clipper class. </Abstract>
    <DeclaredIn>Clipper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Clipper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Clipper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_clipper.html</Path>
    <Anchor>a1561c0310e6588d11dc49a700d6f5c14</Anchor>
    <Abstract>Constructor takes the input UGen and optionally the flags, min and max. </Abstract>
    <DeclaredIn>Clipper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Clipper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Clipper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_clipper.html</Path>
    <Anchor>a2735c5bb9767625a83d1ea8138a7b7a4</Anchor>
    <DeclaredIn>Clipper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Clipper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_clipper.html</Path>
    <Anchor>aca9b051095adf3602e471c6561a158d7</Anchor>
    <Abstract>print the receiver for debugging </Abstract>
    <DeclaredIn>Clipper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Clipper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_clipper.html</Path>
    <Anchor>a2e98a71f457e8fc3a297c753925df8fe</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Clipper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Clipper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_clipper.html</Path>
    <Anchor>ad4fc49b05a4742a7445df97910692fc6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Clipper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_clipper.html</Path>
    <Anchor>a81cc5c8ce92b68720d9e078352ca072a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Clipper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_clipper.html</Path>
    <Anchor>ad2f14ee368c591bf62368fa7dea2ddc3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::CMIDIMessage</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Abstract>CMIDIMessage class (mapped to juce::MidiMessage) </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CMIDIMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a28d736a4435a8290d2cf82ec612f161c</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CMIDIMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a1d9535ae8a7b76fe33a513abe60e99f7</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNoteOn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a20d6e3a03f08227bc26702e0cd7a29be</Anchor>
    <Abstract>bool flags for events </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNoteOff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a90c6f411165c3197001da1f5a42da0a3</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNoteOnOff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>aa13ccf199a3e39365ad3f2cf9de45d24</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPolyTouch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a678fc9846cdca06d94e0323a6fb1ec53</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isControlChange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a579294d5768e314deaec6cc7212d98d8</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isProgramChange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a64b805fc547c05f5eacd56f307838d38</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAftertouch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>abd858e504f1736d0c7fa58cab3014938</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPitchWheel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>aad77bc711f194b9e0286b3072b11b9fb</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSysEX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a645409f249768a1d50537011d9d69848</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a3857b0e60e85eecc47242d0789f038dd</Anchor>
    <Abstract>note accessors </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>af6a1d9b5c41c79c74f8f12d0c8c9dabd</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVelocity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>abea15c4f17aec803bd4b169550037796</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPolyAftertouch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a2e9a7aef9b29453e299d2fdff8227c2b</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getControlFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a6190304069ae697b482d66ef9f6072e5</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getControlValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a5803dfddb6d7e0a3b8adfb29fa132fd5</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProgramNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a2abe2309b05c4dd74f8b466e203d4d7a</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAftertouch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a5f5ce287e33b380bc306ab344d4a5136</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPitchWheel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>aa32b7f5331414d5272aefb24d56f1e34</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>add8457360c8a4889a3ef71ae100f2c30</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVelocityFloat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a9328043077420d785640fb4c63f3279b</Anchor>
    <Abstract>has range of [0.0 1.0] mapped to [0 127] Data fields </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>ae4390cebe987cd5c146b8b30c1354ad1</Anchor>
    <Abstract>event type </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>command</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>ac95ab894926e93513eefcddd6cba8b95</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>ac1b9bd3eeb0074b170331fd30c4af663</Anchor>
    <Abstract>0-indexed, so from 0 to 15 </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a81ef77d49d27753763b7be75c0c2064e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a2ab2b6f15d37f5bf6d3ac801b41b7ad0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CMIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_m_i_d_i_message.html</Path>
    <Anchor>a7109269464024e5008c8424ebf008c52</Anchor>
    <Abstract>timestamp in sec </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Comb</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Comb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comb.html</Path>
    <Abstract>Comb filter class. </Abstract>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Comb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Comb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comb.html</Path>
    <Anchor>a8c78ce8c2a1b599d86ff81f49554f089</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Comb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comb.html</Path>
    <Anchor>ad8998c7957ed14fe04973e379e8807cc</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>damp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Comb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comb.html</Path>
    <Anchor>ab4213c8d8a1908fdc396068ba73a47bd</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>feedback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Comb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comb.html</Path>
    <Anchor>aaac3abfab3be4c8e8599855a1a3ef5f4</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Comb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comb.html</Path>
    <Anchor>a3b14b6d814eb2675f23a81d4cc81873a</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFeedback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Comb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comb.html</Path>
    <Anchor>a0176b738ddfe72d104587e2ff84ab188</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Comb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comb.html</Path>
    <Anchor>adea3bced68b577546a89b1595af901ee</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Comb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comb.html</Path>
    <Anchor>aad00351ed4ca1e0c5f84d022cc4971f8</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFeedback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Comb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comb.html</Path>
    <Anchor>a76e256a62d0d37206747d6442d95b3d4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFilterStore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Comb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comb.html</Path>
    <Anchor>add3dd43e091b58d484a6b7c06b0ac3ee</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDamp1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Comb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comb.html</Path>
    <Anchor>aef7d125402a146a603952fa6fbcaa5fc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDamp2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Comb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comb.html</Path>
    <Anchor>abd3d8f32ad3378d03898c7636492c93f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBufferPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Comb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comb.html</Path>
    <Anchor>a44ecab13898a0031583cba62a5a73f8c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBufSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Comb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comb.html</Path>
    <Anchor>aa7e4c6d972f14e389212fd723688fcb7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBufIdx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Comb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comb.html</Path>
    <Anchor>a5515a8426822d7abb7c6677dfd76bbd0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::CompOrCacheOscillator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::CompOrCacheOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comp_or_cache_oscillator.html</Path>
    <Abstract>CompOrCacheOscillator – Abstract oscillator class for those who can compute of cache their wavetable...</Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompOrCacheOscillator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CompOrCacheOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comp_or_cache_oscillator.html</Path>
    <Anchor>adcc8b66a7fc9a189237576f29e5d6bf5</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CompOrCacheOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comp_or_cache_oscillator.html</Path>
    <Anchor>a7b2d8566da94606463138cc668f77f63</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWaveform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a3f201809be66f80f23b50161f0deaed9</Anchor>
    <Abstract>plug in waveforms set the interpolation flag </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a246e451b9ccaa15d818c4417adfb7cf9</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Oscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_oscillator.html</Path>
    <Anchor>a25d694e0f48fc848ef49efb1908e6930</Anchor>
    <Abstract>print the receiver for debugging </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a1d37712b7fd137dab432d733003eca71</Anchor>
    <Abstract>whether/how I should interpolate between samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWavetable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a926e9d03bb39119f4c0992143cb3baaa</Anchor>
    <Abstract>the stored wave form </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUseCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Cacheable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_cacheable.html</Path>
    <Anchor>a7e865d55361ee4b836489340b0da91e2</Anchor>
    <Abstract>whether I&amp;#39;m to cache (vs. compute) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CompOrCacheOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comp_or_cache_oscillator.html</Path>
    <Anchor>a42a7b273bce5e23aa53da5d4c57d1f63</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextWaveInto</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CompOrCacheOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comp_or_cache_oscillator.html</Path>
    <Anchor>a5026d6059f0ce3da4b76cb473e880117</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillSine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a983c39e543ebf3781e4b99bb7573eb05</Anchor>
    <Abstract>fill the shared wavetable with 1 cycle of a sine wave </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Controllable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Abstract>Controllable – superclass of the mix-ins that add control or signal inputs. This holds onto a map of...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Controllable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a6f6f24d21de9e39e9373442208545256</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Controllable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1d14f63552c57bea7cba7e26c744bd40</Anchor>
    <Abstract>Constructor takes no arguments. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Convolver</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Abstract>The Convolver is a CSL Effect. </Abstract>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Convolver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a9c9f0dba2254f091ead46755dd020289</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Convolver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>acd9f162d162d5fe14956d87a37e67e57</Anchor>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Convolver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>acb7df5257993618d600d414efdda9d6a</Anchor>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Convolver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a5bc69a8b82cca9176048f52808dfd6b0</Anchor>
    <Abstract>set the IR file name; runs the analysis ffts </Abstract>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIRFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a7f8ef2becd11e6cf64af55677e2509b5</Anchor>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>ab9b8bc6e2de1635189e70b03c88146c3</Anchor>
    <Abstract>main nextBuffer call does the fft/ifft </Abstract>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Convolver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a023050cf921a7ff59f5606fe172ff483</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Convolver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a661b37e0e6f7a3b676e6e93cbd1dfdfc</Anchor>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Convolver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a0e86ea9ccd1e2932cbc9d38391eb274e</Anchor>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Convolver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a3ad48e41a7aa22c26ead173a6a0b85ad</Anchor>
    <Abstract>set the IR file name; runs the analysis ffts </Abstract>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIRFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a7058e269f76807f236108a3b1980d893</Anchor>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a49e038ab3006992ac0a8ce49f915a149</Anchor>
    <Abstract>main nextBuffer call does the fft/ifft </Abstract>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>abb7f765040af536959cdbbb7baa07598</Anchor>
    <Abstract>alloc buffers </Abstract>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>free_buffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a9fbd4d46f0d3973b013e7e802cf1813c</Anchor>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>complex_multiply_accumulate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>aa8f2434109a4d1f1d090006ac9cd4094</Anchor>
    <Abstract>fast complex MAC using non-interleaved complex arrays </Abstract>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a4d4dd196439cfa27a393b3a793457723</Anchor>
    <Abstract>alloc buffers </Abstract>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>free_buffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>ae98f9ee12cbfc1c6e2f9a4c0bfd0f4e8</Anchor>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>complex_multiply_accumulate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>aae9ed747dbeb98718d84a0c44c61faa9</Anchor>
    <Abstract>fast complex MAC using non-interleaved complex arrays </Abstract>
    <DeclaredIn>Convolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFFTSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a8f16f0e4674d5b16b16b7432158914ce</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFlSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a7d15262ea1cf02fdbf5b1e40b73b0f23</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumBufs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a80d2a1d3669b3350f1dff7b7f3d4bd91</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a2a5143dce0f1ea7a607b997cdb69537c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a8f2427ab7b32462ec5a0ddc3bfa3d0eb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFilterFFTRe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a59f28272272a4ca19c8152459a85d528</Anchor>
    <Abstract>A ring buffer of IR fft buffers. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFilterFFTIm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a5030f91e4c863cde8dd8dc09fa061fc9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputFFTRe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a201b2008e926540a0092bf91e53c661b</Anchor>
    <Abstract>A list of past input spectra. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputFFTIm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a376e53d4ca477a54cd0462733ff8919d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpectrumBufferRe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>afb7638e8e189d4bb78bdcea49bf15662</Anchor>
    <Abstract>current summation buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpectrumBufferIm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>a48986afc20d20581d8c3b513c84d1790</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLastOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver.html</Path>
    <Anchor>aa2537d5800325235fa688ec62a559edd</Anchor>
    <Abstract>most-recent output </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Convolver2</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Abstract>The Convolver2 is a CSL Effect. </Abstract>
    <DeclaredIn>Convolver2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Convolver2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>a02a2e12e6c0c131a18cde0ea375a5dd6</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>Convolver2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Convolver2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>ae1e2291d85a53a692bbcecdd07b04299</Anchor>
    <DeclaredIn>Convolver2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Convolver2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>aa85703494b3b3b220b1c62f4f7b7a043</Anchor>
    <Abstract>set the IR file name; runs the analysis ffts </Abstract>
    <DeclaredIn>Convolver2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIRFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>a83e3bf88a62afd1f5e2ae12a6d23a571</Anchor>
    <DeclaredIn>Convolver2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIRData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>abe203751a744e90157b31200b3eddba1</Anchor>
    <DeclaredIn>Convolver2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>ace769b24155dc11779e875f33db72eff</Anchor>
    <Abstract>main nextBuffer call does the fft/ifft </Abstract>
    <DeclaredIn>Convolver2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>a9059eb18623b6c5163bd500e870cf8fd</Anchor>
    <Abstract>alloc buffers </Abstract>
    <DeclaredIn>Convolver2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>free_buffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>ac2891a90ad06fee21cd67aad1cfc3392</Anchor>
    <DeclaredIn>Convolver2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>complex_multiply_accumulate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>ab55a35f9bbe19385de4246ab102c864c</Anchor>
    <Abstract>fast complex MAC using non-interleaved complex arrays </Abstract>
    <DeclaredIn>Convolver2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFFTSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>ab816d9c521f276df8d10dd97094f8786</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFlSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>ad63c4f1e7d9f97bedc0182d0be925004</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumBufs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>a00458d97ee96c860f97a4fe9030be8c3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTaps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>ab3b50d8985db51f6dba31c1981e944a9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>a38848ebaaf0128a849fc05cf67dd43c9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>ab68b506544f8b95b713a4010532ab118</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNormOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>addbc1a9bf4ccca322f9ad55cb72272c3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputFFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>a2826337e1065fe5284932c61399c0cf8</Anchor>
    <Abstract>A list of past input spectra. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFilterFFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>aea625fbb39205c5eb46c29e6c5964e21</Anchor>
    <Abstract>list of IR ffts </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpectrumBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>a4575386245ac481070d84c03dd089b5a</Anchor>
    <Abstract>temp summing complex vector </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLastOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>a82c111404d6455d85bb85f10b0b42414</Anchor>
    <Abstract>most-recent output (1/2 window) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFFTAnalyzer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>a026017c200d5fbfc10ef9c07264c2215</Anchor>
    <Abstract>FFT analysis/synthesis wrappers. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFFTSynthesizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>ab31f929b79c6a401bad7355373779fd7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFFTBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Convolver2</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_convolver2.html</Path>
    <Anchor>a0434ed0669c8bd3a06d73ca88be3ccf8</Anchor>
    <Abstract>buffer used for FFTs, no storage </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::CPoint</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>ad9f2ecc49fbad1b9c8c71c0625ac480b</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a64c04860ef9260d04b5083561651d225</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a5745cb684faccfe5181d3fe8f2e4d4aa</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a93fc7be3541f6c9c4e0fe91b783e0024</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a5b4131429eb4babc2c0d62d5dd7ff6bd</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a2652d3faf321aec3b7aa3dcf422fdfc7</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a2764490a7e97e82467e99a0dfab9dc9c</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a3b383c0c3ee6d33acb090a336cf5c7e8</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a6fc37d0242ad46ec4fdc6618a3ad0f37</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a12dc2f10754cd8c95395b734245d0ac6</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a4b6c04156041305a9ff22d4fdd927929</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a8268cfd1a98d7d5b3cc9588bdf48c945</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a7f97f7e7de6c240c1161916b62a13a31</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a91ac0d68566290cf176f8dc5f1686975</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a01b88279ca00ba2c5e9812c45437a869</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>aa0c1c80f36ffc187ac9d3792d4f728f1</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>afccca6a9efce2285da88d1a5c66b1187</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>ab54275b4d79d474e3787dcba1fe2cf00</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a322ad90a5d6ec2b6a0cb431d415cccec</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a6ca15745013e0075cf20093a06e41718</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a940eb4c916d4ec35e5f96081de88b930</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a4d00ba40a3eba61851b7c8cad59b4a4e</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>ae73e7ad3e7e7300e6dde52f9f31568b2</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a1e1f6170b421f713d9c2fe3a856c516e</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>aae544cd23e0816fee85f7112ccc949c4</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAzimuth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>afc5f22391c85815eda058e3b924ac0fd</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setElevation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a99a2e4e26b0ce61fc94c6415b5312125</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMagnitude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>af828476422925ec028a7c56d049916e7</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a0860605c1b74a01f9d1fc29cc662d7c7</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setdim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a3a546e2216f9db300a2ea52a0bd07dae</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>ab0f6af9f3d30a8b3d46a00972cf4b49b</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator~</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a7eeb655784496fdeadbe452106fa312e</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a155ed5e2e8a4f9876a891e4d91ab4e9a</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>ac04dceda85b067abe7f67a48e0e766d8</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a263ea07d8042a2d82726cfd7712548cd</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a06fc60c1870cff08fc07b013d31dad94</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>abebb37aeddd13a00324e515b828f1854</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator|</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>adaecb9a795feccfdbb0d5796058ee9be</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator^</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a5ea1f0a022c39f87e63450e5308b11a5</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a6fae1c090d623a877fb1e2a8c35966d9</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>ae86e8e8c90253ae164288c1df4fda609</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>ac5c1b6043e20a43f662b0e8b1d7badaf</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a1f80b01b36fb0c9778ed74a3838262d0</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator^=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a1ad15de82a2012e6c268f68589d6414c</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>distance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a3cbfaf7cebcd31464541fcf955b53ddd</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>distance2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a4986a57d2c6e6d8df8eb0151d5114d10</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>distance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>adbb3c4f97f2b07fe597120ef043fa83a</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>distance2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>aa2e82568a33eba23a23a7882c831095f</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a2960002df2b72bd742a465132ebc6642</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>len</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a171369c44dcbf6ed34ac95fe4d64731e</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>len2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a188f494479fa13ab84b877f452cfcfe1</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>r</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a3d42007d54a71105df04b33b440737f8</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>theta</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a9a5ee5b6dbe50e1f2c7ac8df40b009c7</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>phi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a75fdaa70892125656e5a8bee6bd1b791</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ele</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>ade0aa80419464fb6acf8974f95b45b97</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateBy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>abf8d201f16b93c64f342b89939a3db89</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a8d64f54e2da8eb491aafc3b04e27ab14</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dumpPol</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>acda361a9ce5770a4c35b211cd3d87ae4</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>acf47fbbc10186f604ee2216cdedcea4a</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dimn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>ae3c97ba55d7992d95b23e9619f6b9394</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>af58389bfac4b698e42136910def481b3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a3ccbec72c7bdcf21bd138383d9a96a6e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>z</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a1f81bd78bdc7429a523c620a5bab9e9c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a204bf12de30bf8b4c588412bbcdd8ce5</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a86cf5890f5de18b6b1cc7ea8d3253e31</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a33199f6116c286ad394736ac0c3a23c4</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a4b3de8be462d492c335a0b0329938c0d</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a30465cd5f971f64840efbc72d57c058a</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a39a85c46a7e8c9a60e7fa0e996083d84</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a4447ce0d36566ac9030f2960d83882d0</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a959205091519f74002a5ed7f3341214b</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>csl::CPoint</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_point.html</Path>
    <Anchor>a4a9063bfb6c47f8fa5d793ded1b4a3b1</Anchor>
    <DeclaredIn>CPoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::CSL_MIDIMessage</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::CSL_MIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l___m_i_d_i_message.html</Path>
    <Abstract>CSL_MIDIMessage. </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSL_MIDIMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CSL_MIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l___m_i_d_i_message.html</Path>
    <Anchor>a9441e1d0c4c6ced667fa02bd295391c3</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CSL_MIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l___m_i_d_i_message.html</Path>
    <Anchor>a1b3d1cd87d982a368c3ce184659c2e1b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CSL_MIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l___m_i_d_i_message.html</Path>
    <Anchor>a5d7d3ee7eb07d43f30813c139ddf675e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CSL_MIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l___m_i_d_i_message.html</Path>
    <Anchor>aa35f83bad165069cb0d69cae42a5913a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CSL_MIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l___m_i_d_i_message.html</Path>
    <Anchor>a098a82b7ea337436e1764b0ddf814050</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CSL_MIDIMessage</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l___m_i_d_i_message.html</Path>
    <Anchor>aca61bcceaa0c19b68439101a2a238a28</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::CSL_RS_MSG</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::CSL_RS_MSG</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_c_s_l___r_s___m_s_g.html</Path>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>magic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CSL_RS_MSG</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_c_s_l___r_s___m_s_g.html</Path>
    <Anchor>a8d456b6d68103e132bc14b1fb6aaeb91</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CSL_RS_MSG</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_c_s_l___r_s___m_s_g.html</Path>
    <Anchor>a80b001f742ed6b1a6c20c5842aac3f85</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CSL_RS_MSG</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_c_s_l___r_s___m_s_g.html</Path>
    <Anchor>a3226a0b7751a208e28ecddda5fd1cbcd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::CSLService</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::CSLService</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l_service.html</Path>
    <DeclaredIn>CRAM_Service.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CSLService</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l_service.html</Path>
    <Anchor>a0b3447a09353eff37325d39d613c666c</Anchor>
    <DeclaredIn>CRAM_Service.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CSLService</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l_service.html</Path>
    <Anchor>a849aaf38021b233a3bc7ba013ef5c51e</Anchor>
    <DeclaredIn>CRAM_Service.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suspend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CSLService</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l_service.html</Path>
    <Anchor>a78475197f8e2b87da16f7cd158d0caf5</Anchor>
    <DeclaredIn>CRAM_Service.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CSLService</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l_service.html</Path>
    <Anchor>ab651bfad516f4e1e34a5657853a93812</Anchor>
    <DeclaredIn>CRAM_Service.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_opt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CSLService</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l_service.html</Path>
    <Anchor>ad2bf36c2ba3eab65616f84a9f903da12</Anchor>
    <DeclaredIn>CRAM_Service.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CSLService</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CSLService</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l_service.html</Path>
    <Anchor>a2da48ac6452b768702304112c667d1ba</Anchor>
    <DeclaredIn>CRAM_Service.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CSLService</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CSLService</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l_service.html</Path>
    <Anchor>a78a84d6a123ddf3c5eff99a2fa244957</Anchor>
    <DeclaredIn>CRAM_Service.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CSLService</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l_service.html</Path>
    <Anchor>af39088a5c7fc48d17f1840b50ae2d3e2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWhich</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CSLService</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_s_l_service.html</Path>
    <Anchor>a1baebe4824d3c91523ad232055a9f2aa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::CThread</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Abstract>The PThreads CSL Thread class. </Abstract>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>ad256868eded3b90abee1b5f656bb678e</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>a85a583b2edf56a6448e71e3a9ad301d2</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>a56c6ad47677d5cc8ed9708c137dfb179</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>a11c4989c89eca30879560ba5f1cae55c</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MakeThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>a46654594fd296962e4162cc71ee158e3</Anchor>
    <Abstract>factory method </Abstract>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>a8d0b88f66931bbe9eaa5de73a7758b61</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAttributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>a733a58a421f8e68c83c633c4b1aa02c2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::CVariable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::CVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_variable.html</Path>
    <Abstract>CVariable is the the abstract external variable (plug or port) class. This is the abstract class for ...</Abstract>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CVariable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_variable.html</Path>
    <Anchor>ae7c1b4c324f77f25d36a5d3cbb27b581</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CVariable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_variable.html</Path>
    <Anchor>a9cc35b8915a6842c320bb09578e2d969</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_variable.html</Path>
    <Anchor>a9a5e03e89284b4a06c1e843fdc46eae6</Anchor>
    <Abstract>Accessors. </Abstract>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_variable.html</Path>
    <Anchor>a8a4c301e79ccbbbb75c3b79c48198489</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_variable.html</Path>
    <Anchor>a14326520140e965c9e7bebdd2b0ebd10</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_variable.html</Path>
    <Anchor>a919b4e7ebc3a55754d73949afe1b4a44</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_variable.html</Path>
    <Anchor>a1b88d0bcbc802365dbaf362cb572fff3</Anchor>
    <Abstract>the value I represent </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::DBError</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::DBError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_b_error.html</Path>
    <Abstract>DB Error. </Abstract>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DBError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DBError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_b_error.html</Path>
    <Anchor>a8335a11117af2a0fefcd98ce47e45666</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>aaa80baf48d8b2a9af6d5bce2d1b27388</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>a82f57e285f07ca934823977ed3d364e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::DelayLine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::DelayLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_delay_line.html</Path>
    <DeclaredIn>DelayLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DelayLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DelayLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_delay_line.html</Path>
    <Anchor>a46f4b67b17ed53b55d96d03c796c75cd</Anchor>
    <DeclaredIn>DelayLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delayTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DelayLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_delay_line.html</Path>
    <Anchor>af59b142c1342c5447187c4e44a41b2f4</Anchor>
    <DeclaredIn>DelayLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delayLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DelayLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_delay_line.html</Path>
    <Anchor>a6615523ec390fa46d9914d8179c40e70</Anchor>
    <DeclaredIn>DelayLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDelayTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DelayLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_delay_line.html</Path>
    <Anchor>a42335ef90dbd051958e873b9d5a696de</Anchor>
    <DeclaredIn>DelayLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDelayLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DelayLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_delay_line.html</Path>
    <Anchor>aac2262d289cb5a914f53dfb3244c7a2d</Anchor>
    <DeclaredIn>DelayLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DelayLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_delay_line.html</Path>
    <Anchor>a63217500506aabe9830e01d502fca21f</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>DelayLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRingBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::DelayLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_delay_line.html</Path>
    <Anchor>ab850c82564bc91d0dd6707ebd8b15dc6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMaxDelayInSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::DelayLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_delay_line.html</Path>
    <Anchor>a3e4bc474abd56d04bdeae675507543b4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTotalDelayInSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::DelayLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_delay_line.html</Path>
    <Anchor>acd9129219de4b82c3e1abb56cbf49874</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::DistanceCue</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::DistanceCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_distance_cue.html</Path>
    <Abstract>Pure Abstract Base Class for all distance cues. A DistanceCue subclass is just an algorithm that modi...</Abstract>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DistanceCue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DistanceCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_distance_cue.html</Path>
    <Anchor>afc7072eb376e7dc22ddde089630f8a31</Anchor>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DistanceCue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DistanceCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_distance_cue.html</Path>
    <Anchor>ad864118dc22134e3172ed0e42f9707a5</Anchor>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DistanceCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_distance_cue.html</Path>
    <Anchor>accd037ee27096958d8ab05da4e43a558</Anchor>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DistanceCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_distance_cue.html</Path>
    <Anchor>a7b8b34646141332c7b460535d872f5df</Anchor>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::DistanceSimulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::DistanceSimulator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_distance_simulator.html</Path>
    <Abstract>Only handles single sound sources because objects have different positions. Two objects can&amp;#39;t ocuppy ...</Abstract>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DistanceSimulator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DistanceSimulator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_distance_simulator.html</Path>
    <Anchor>a921175953fe8a7eac2c8ec9edeb11da1</Anchor>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DistanceSimulator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DistanceSimulator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_distance_simulator.html</Path>
    <Anchor>a27be9c710e330bfa7727017533098803</Anchor>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DistanceSimulator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DistanceSimulator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_distance_simulator.html</Path>
    <Anchor>ad14ae5e2844af5826362a6c5a4bdab7a</Anchor>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DistanceSimulator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_distance_simulator.html</Path>
    <Anchor>af8d529badf821cd7d4c11ff15dd2e928</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>positionChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DistanceSimulator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_distance_simulator.html</Path>
    <Anchor>a9298d817ada9d0a613639615b1bd4cbf</Anchor>
    <Abstract>Returns wether the sound source position changed since last block call. </Abstract>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>acd4d1af29750bbbf3dec4077710abd9b</Anchor>
    <Abstract>Set the sound source position in cartesian coordinates. </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a5aa48e5f3723bd076d414b942e6694c7</Anchor>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a3b258beb9994faa666cf06ddc5a4521e</Anchor>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>ab62c2f73307a46c685f6bbf9e6ccee61</Anchor>
    <Abstract>Set the sound source position in spherical coordinates (degrees). </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>acb2fe5850fb2185cc8a6a10bb934c27f</Anchor>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>ad345f9c204a61d03e32613160f079845</Anchor>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAzimuth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a4c3ba6f962b1cb6456282c27acc442c7</Anchor>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setElevation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a794598f06292e9565a7c3f6a47e41002</Anchor>
    <Abstract>Sets the horizontal angle. </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a5e79d27a40ff1732ffb61ade823558a7</Anchor>
    <Abstract>Sets the angle of elevation. </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>azimuth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a94f64991105b577d21dbea2813dd572b</Anchor>
    <Abstract>Sets the distance from the center. </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elevation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a87ef3ae0806f0c40b60142d371c9dd91</Anchor>
    <Abstract>Returns the horizontal angle. </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>distance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>abdddcb67e25d5475236df1385bea1718</Anchor>
    <Abstract>Returns the angle of elevation. </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>afd6d64625667ce764c32372b94c9bc2d</Anchor>
    <Abstract>Returns the distance from the center. </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a52f3f0c291c6cd7cda47898ae28ec7b6</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>acfd03d1d592b31255e782b4af83e01c8</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIntensityCue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::DistanceSimulator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_distance_simulator.html</Path>
    <Anchor>a753894ac857e558815fe9698b3f5846e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAirAbsorptionCue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::DistanceSimulator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_distance_simulator.html</Path>
    <Anchor>a98131f176f60508c5eebedf102efaeea</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a6feaaeafa3d2a04bf9afcc5aa251ac5c</Anchor>
    <Abstract>source position </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPositionChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>ad5f5cfd9c0cf04f5183371fb1f96d6e1</Anchor>
    <Abstract>true if this source&amp;#39;s position has changed recently </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::DLine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::DLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_line.html</Path>
    <DeclaredIn>DLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_line.html</Path>
    <Anchor>ac7af91249b79497c10a248eccf4538cc</Anchor>
    <DeclaredIn>DLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_line.html</Path>
    <Anchor>a862639231b9e0f54959ae2a043b982a5</Anchor>
    <DeclaredIn>DLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_target_delay_time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_line.html</Path>
    <Anchor>af5cbfc509b99f9a675942500fc9b7435</Anchor>
    <DeclaredIn>DLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init_delay_time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_line.html</Path>
    <Anchor>a2ed1f0299653889fd496747c587aee95</Anchor>
    <DeclaredIn>DLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_interp_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_line.html</Path>
    <Anchor>a449771722d1c706eeb61064ad8beba37</Anchor>
    <DeclaredIn>DLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mono_next_buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_line.html</Path>
    <Anchor>ab1ba8a489849d172aefa60aa5718830e</Anchor>
    <DeclaredIn>DLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>next_buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_line.html</Path>
    <Anchor>aac701f8a08258cf8982591cc534683ef</Anchor>
    <DeclaredIn>DLine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ring_buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::DLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_line.html</Path>
    <Anchor>a4acd6700d6e9e9851fce19a029b7a257</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max_delay_time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::DLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_line.html</Path>
    <Anchor>a416044b2dd1fa9aa56fb05acde845df7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delay_time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::DLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_line.html</Path>
    <Anchor>ac1b7a9cc9fde89eaefa1f071eb6f0af0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>target_delay_time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::DLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_line.html</Path>
    <Anchor>ae57b5831e458288103bf5f5c8a470100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max_delay_in_frames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::DLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_line.html</Path>
    <Anchor>aa312fd88c49632b4c890411eb2e31f00</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interp_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::DLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_line.html</Path>
    <Anchor>ac49a81ac33b3c850af2ed2d8dcf07c90</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start_frame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::DLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_line.html</Path>
    <Anchor>ac402d9b101acaeacdabc0e94e1b47e88</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_frame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::DLine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_d_line.html</Path>
    <Anchor>aaa44f399b3e9d4497002b89fde0e4e40</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::DomainError</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::DomainError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_domain_error.html</Path>
    <Abstract>Numerical data of wrong type. </Abstract>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DomainError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DomainError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_domain_error.html</Path>
    <Anchor>a635421bf288638508037d549f74054d1</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>aaa80baf48d8b2a9af6d5bce2d1b27388</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>a82f57e285f07ca934823977ed3d364e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::DynamicVariable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::DynamicVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_dynamic_variable.html</Path>
    <Abstract>The DynamicVariable class is a changing variable that can perform an operation (e.g., scaling) on another unit generator. </Abstract>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicVariable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DynamicVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_dynamic_variable.html</Path>
    <Anchor>acf79aae61a08bf9fde20ad7425702706</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicVariable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DynamicVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_dynamic_variable.html</Path>
    <Anchor>a139326ea03c8ca4d93c01c60502610f1</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicVariable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DynamicVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_dynamic_variable.html</Path>
    <Anchor>af1074788f3bc0c84b84e5dcb7c8fcf70</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicVariable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DynamicVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_dynamic_variable.html</Path>
    <Anchor>a9ef8840c6631d43448b3375a67a9e1d2</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicVariable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DynamicVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_dynamic_variable.html</Path>
    <Anchor>accb501e3e5ad8131cc7ccac90fc334e2</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicVariable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DynamicVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_dynamic_variable.html</Path>
    <Anchor>aae2b21f565d9883791b414b7640d3183</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicVariable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DynamicVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_dynamic_variable.html</Path>
    <Anchor>a326758b27af99251c0c4c57ca35e7392</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicVariable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DynamicVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_dynamic_variable.html</Path>
    <Anchor>a3c711e8bb1209f89220fa8fb630ef013</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicVariable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DynamicVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_dynamic_variable.html</Path>
    <Anchor>a151fe5c28e6d1f1d217bffc9e7ca2c78</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DynamicVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_dynamic_variable.html</Path>
    <Anchor>ac25c10944683fec2177555846aa8a5b6</Anchor>
    <Abstract>my main operations </Abstract>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DynamicVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_dynamic_variable.html</Path>
    <Anchor>a2b96c28ab4c4aa510fe08f2e3aa89c53</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DynamicVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_dynamic_variable.html</Path>
    <Anchor>a1be00a1eb5ffe861cb1b960aac2cb3e1</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::DynamicVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_dynamic_variable.html</Path>
    <Anchor>add5341c3f1cee0486cfacd2672dda10d</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_variable.html</Path>
    <Anchor>a9a5e03e89284b4a06c1e843fdc46eae6</Anchor>
    <Abstract>Accessors. </Abstract>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::DynamicVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_dynamic_variable.html</Path>
    <Anchor>a70d2ccf52e4aa64ade50c069ad8f4d63</Anchor>
    <Abstract>the operation I perform &amp;#39;+&amp;#39;, &amp;#39;*&amp;#39;, etc. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_variable.html</Path>
    <Anchor>a1b88d0bcbc802365dbaf362cb572fff3</Anchor>
    <Abstract>the value I represent </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Effect</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Abstract>Effect – mix-in for classes that have unit generators as inputs (like filters). </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Effect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a4dae74244f59936a49847da9217b4126</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Effect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a2b01e42fae64d962cc551331c1f120b3</Anchor>
    <Abstract>use the given input </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Envelope</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Abstract>Envelope: a collection of LineSegments; may have an input (scale) and act like a processor, or have no input and act like a control UGen. I inherit Scalable setScale, setOffset for inputs. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Envelope</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a6c903579397987709dcc0b3c01d564e6</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Envelope</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>aa272cb43f6d1be557d0de1418fbc0563</Anchor>
    <Abstract>Envelope class. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Envelope</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>afacda0aa99bceff12ed592577c986e55</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Envelope</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>aa78b67142d98886bd0f21617b9d2c31d</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Envelope</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a74cbce35258bd94b8c125f0120a9e98c</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Envelope</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a0d854766d1fc084d27ddb7b6cf7967af</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>ad467b3c7afce695b428a9cc66e10c712</Anchor>
    <Abstract>This answers whether I&amp;#39;m active (ptr &lt; end) </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBreakpoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>ad39e120b2cc844caaf579599cd44c097</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a9421a5f45b37fdeaa7915b2e7a9da366</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a04fe5848b232e1c4552391172638a92e</Anchor>
    <Abstract>set/scale durations </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleTimes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a3ecc09876d58baab0489517864240a8f</Anchor>
    <Abstract>scale durations </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>abc3a00d656fed9abb632fc1b374adf27</Anchor>
    <Abstract>scale values so the max is s </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>af93203a7ae1fec4791eb36565db934f0</Anchor>
    <Abstract>reset internal time to restart envelope </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a03b0aeb7f8550ec701e3a07839ad47ec</Anchor>
    <Abstract>reset internal time to restart envelope </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a7642a463c20819de6d04a6b102b91976</Anchor>
    <Abstract>Pretty-printer. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a5068ded8e64397f2756c9967cb10eac6</Anchor>
    <Abstract>The main FrameStream work method. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>privateNextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a5e8bc26caab6bb76f84c855d04dbebe5</Anchor>
    <Abstract>Internal helper method for computing the next buffer. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>abd2ecb2dca6859c7da2e8e8e1689bb37</Anchor>
    <Abstract>Allocate memory for the segments. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculateSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a233714c4b55f4f8e974a6827ea5ead42</Anchor>
    <Abstract>Calculate the internal data. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a3a740e34b7872a2599f21ff3b37a0e0f</Anchor>
    <Abstract>Total duration, typically in seconds. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentMark</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>aeb4f7e489cb6d3863be43318a9e59f44</Anchor>
    <Abstract>How far we have read. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSegmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a806c34bfc5febd95060670a80bf48521</Anchor>
    <Abstract>list of envelope breakpoints </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>ad72b1156da3b7db2990da98b50d209bc</Anchor>
    <Abstract>array of line segments that for the envelope </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a7a1cba39a17c49d070b6f2b0fb100ebc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a0632379f852825bee1477a09320f3d98</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::FAllpass</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::FAllpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_allpass.html</Path>
    <Abstract>All-pass filter class. </Abstract>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FAllpass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FAllpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_allpass.html</Path>
    <Anchor>a9a325fb78dae86c767c0c4d540a7fe25</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FAllpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_allpass.html</Path>
    <Anchor>acd7e140b69e9a8acdd51c89b459300e0</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>feedback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FAllpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_allpass.html</Path>
    <Anchor>a6715c10c1d9807fdd309f6162900e975</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFeedback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FAllpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_allpass.html</Path>
    <Anchor>a77618da67f207797eae2064eaeb39309</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FAllpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_allpass.html</Path>
    <Anchor>ab9ff933e144f65188d5006e46f907970</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FAllpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_allpass.html</Path>
    <Anchor>a56eb682fea058b8cec85593b03867434</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFeedback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FAllpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_allpass.html</Path>
    <Anchor>a5c6d404b65cb8682594e80ecb0c6c9dd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBufferPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FAllpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_allpass.html</Path>
    <Anchor>a5f91d1f3aaf3c82b8cb139a8ead2db00</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBufSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FAllpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_allpass.html</Path>
    <Anchor>af369244a7c8095c01fa4b140fcb5345e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBufIdx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FAllpass</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_allpass.html</Path>
    <Anchor>afc1b9b6d447cccb3a935d95871debe18</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::FancyFMInstrument</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::FancyFMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fancy_f_m_instrument.html</Path>
    <Abstract>FancyFMInstrument - FM with vibrato (with AR-envelope), attack chiff (filtered noise with AR-envelope...</Abstract>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FancyFMInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FancyFMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fancy_f_m_instrument.html</Path>
    <Anchor>a8826d536043dbb6f3b56358a5dbf8cdf</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FancyFMInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FancyFMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fancy_f_m_instrument.html</Path>
    <Anchor>a8e6a6fd4981f6a309e4bdc110c504ddf</Anchor>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FancyFMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fancy_f_m_instrument.html</Path>
    <Anchor>a10980ec9371f3bae9c2493f3be3507e6</Anchor>
    <Abstract>Plug functions. </Abstract>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playOSC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FancyFMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fancy_f_m_instrument.html</Path>
    <Anchor>a1a5adfcbc4ff17a5a405dfc4ef5fee7d</Anchor>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playMIDI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FancyFMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fancy_f_m_instrument.html</Path>
    <Anchor>aa45e879ceb6bc9337d5d5a2403711b8e</Anchor>
    <Abstract>These are the additional UGens of the DSP graph (i.e., the FM instrument) </Abstract>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseArgs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>a3395833f89f14601556eccd6770537b9</Anchor>
    <Abstract>Play functions. </Abstract>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>a67835397c480b7657f8d22f4bac942af</Anchor>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a1b783961f66930972f30e242139be90f</Anchor>
    <Abstract>Play a note (subclasses refine) </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>afa6f111dc85dab7a7bdf5e2cc6c165af</Anchor>
    <Abstract>Accessors. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a79aab7d10f67e121641d09224eb230bb</Anchor>
    <Abstract>my UGen graph </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>envelopes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a58dc9b22696af5314e391ed1212782c6</Anchor>
    <Abstract>the map of ugens in the graph by name </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a2714d7d2ec9c9dc7008e81b31e423f1b</Anchor>
    <Abstract>the vector of envelopes to query or trigger </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genNamed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abccad2cc3a254ae6bac8c660f7518778</Anchor>
    <Abstract>answer my name answer the number of channels </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abeb0b477a2388f8c7a2b41e87ad24c01</Anchor>
    <Abstract>Accessor management. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ae5f78c65cf53af61bbdcc3a8e228f947</Anchor>
    <Abstract>answer the accessor vector </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a751268fdb83b44806a6f0b745400fce5</Anchor>
    <Abstract>set a named parameter </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a05fbcc14ac4a0cd792e85aff09147b3b</Anchor>
    <Abstract>Envelope query and re-trigger. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>play</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ab643e7923572c1cf2b4edb62cb1fc14a</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abffd98c97971ef8ec4c893f8d019e3c1</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVibEnv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FancyFMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fancy_f_m_instrument.html</Path>
    <Anchor>a4c903dc551a1a8abb1b2886b2b4a451e</Anchor>
    <Abstract>vibrato envelope </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChiffEnv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FancyFMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fancy_f_m_instrument.html</Path>
    <Anchor>a6c1455ef7ba1e69ee53031f6d55a8cef</Anchor>
    <Abstract>attack-chiff envelope </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVibrato</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FancyFMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fancy_f_m_instrument.html</Path>
    <Anchor>a5c4cdbe19d2fb378a1e1a2a03594533c</Anchor>
    <Abstract>sine oscillator for vibrato </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChiff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FancyFMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fancy_f_m_instrument.html</Path>
    <Anchor>a5261bc70450e1841a6e4464ae5b28ec9</Anchor>
    <Abstract>chiff noise </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FancyFMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fancy_f_m_instrument.html</Path>
    <Anchor>a3394a97819819116e080f0e58360240b</Anchor>
    <Abstract>chiff filter </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mReverb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FancyFMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fancy_f_m_instrument.html</Path>
    <Anchor>a4a252ea8c299a7f86baffdcb16d1fa25</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAEnv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>a082ae788c9f5e4e02d034f57fb6efec5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIEnv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>a073d74ee468f754276453fa991b865a4</Anchor>
    <Abstract>amplitude &amp; modulation index envelopes </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>aac53e746e9c09b6f3b46e0330899abff</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>ac49c3fe420e48a3dd75d5d82882e5991</Anchor>
    <Abstract>2 sine oscillators, carrier and modulator </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>aed5b37556ec96a06ba64973cf890af0e</Anchor>
    <Abstract>stereo panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a3685284d2311cfe1d10f38536c424666</Anchor>
    <Abstract>Caches. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a660770fe07dc68cb05f277ff03130ec5</Anchor>
    <Abstract>my name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUGens</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ab5af1851504b58a140055423100bc61a</Anchor>
    <Abstract>the map of ugens in the graph by name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnvelopes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a07ff212be08d5cc25fa2a328dd630188</Anchor>
    <Abstract>the vector of envelopes to query or trigger </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ad52424c33a5b87976186ef9e3f784a73</Anchor>
    <Abstract>the accessor vector </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::FanOut</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::FanOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fan_out.html</Path>
    <Abstract>A fan-out generator for DSP graphs with loops. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FanOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fan_out.html</Path>
    <Anchor>a8c4c9515dfcbd824f58186ba25e8bbc1</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FanOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fan_out.html</Path>
    <Anchor>a44410e52316de443bd023bee0e4c9404</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FanOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fan_out.html</Path>
    <Anchor>a4b130e104c39c1e285912cd8c0f3fa52</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FanOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fan_out.html</Path>
    <Anchor>ae05e53c2dce766fc2aba30bddec36faf</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FanOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fan_out.html</Path>
    <Anchor>af2b2c78ff80baebb540e45ba476a0cfe</Anchor>
    <Abstract>my temp buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFanOuts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FanOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fan_out.html</Path>
    <Anchor>a7d6ba642afac2f3704f2cb24696116f7</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FanOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fan_out.html</Path>
    <Anchor>aa5336c0beef1bc94a4531f616a75ecbd</Anchor>
    <Abstract>the current output </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::FFT</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::FFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_f_t.html</Path>
    <Abstract>Forward FFT unit generator is an Effect because it handles an input It puts spectral frames in the ou...</Abstract>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_f_t.html</Path>
    <Anchor>ac7aaac10b9513ccc3f63631fe90fb646</Anchor>
    <Abstract>Default size to the buffer size and flags to measure. </Abstract>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_f_t.html</Path>
    <Anchor>a69b8b0fb23ec45833952992d7f9ad2ad</Anchor>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_f_t.html</Path>
    <Anchor>aad62f5533d2fdc911a94dd1724ebdddf</Anchor>
    <Abstract>we override the general-case version because this needs a mono input </Abstract>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fftSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_f_t.html</Path>
    <Anchor>aa30db7a59463517c643d9e1faac28388</Anchor>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOverwriteOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_f_t.html</Path>
    <Anchor>added960741cdda0e9c25b6ef81a6a844</Anchor>
    <Abstract>no setter – create a new FFT to change size </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFFTSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_f_t.html</Path>
    <Anchor>ae43c7e765689eb48754e5745f9191379</Anchor>
    <Abstract>This should be unsigned, but is signed for compatability with FFTW. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWrapper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_f_t.html</Path>
    <Anchor>a218253afe244d19f8b26863dfdf4822c</Anchor>
    <Abstract>actual FFT wrapper object </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInBuf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_f_t.html</Path>
    <Anchor>a3251c4eeef08cb6e83781f67c9322dda</Anchor>
    <Abstract>input buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_f_t.html</Path>
    <Anchor>a5e1a3cb5995c3c0c3eb82a71ef6fa91e</Anchor>
    <Abstract>Buffer to store window. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::FileIO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Abstract>FileIO.h – IO using a sound file for storing output sample data. </Abstract>
    <DeclaredIn>FileIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>add69498fd66c03ea58daf5d6afc88cf3</Anchor>
    <Abstract>&lt; the path name determines the file type, e.g., xx.aiff, zz.snd, or yy.wav </Abstract>
    <DeclaredIn>FileIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FileIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>adc3caa8f1e5d76274d8ffb8b5c17288b</Anchor>
    <DeclaredIn>FileIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>a7db7773bea516858f7080c6961d18d42</Anchor>
    <DeclaredIn>FileIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>a2c849f0a48cab6999e507bbef9133b3d</Anchor>
    <Abstract>seconds is optional. If not passed, starts a background thread, playing and writing, otherwise run for x seconds (so it doesn&amp;#39;t return until done). </Abstract>
    <DeclaredIn>FileIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>aeffe4c2296b5c75581f9d12eb37e5f9a</Anchor>
    <DeclaredIn>FileIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>a9db3ae25e1eefc34050b60fcd2e7b51b</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>FileIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>a096707aacab5f26cd444a73b7f782c38</Anchor>
    <DeclaredIn>FileIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>a4c2a314c22d14184b006a50f6627c892</Anchor>
    <Abstract>test the IO&amp;#39;s graph &lt; Get the current input from the sound card </Abstract>
    <DeclaredIn>FileIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>a33af3c0a249626312143e69fa2df36c4</Anchor>
    <DeclaredIn>FileIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa99bfd6866a64dd7863de23aec6a10e7</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_on</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a33d3dfbf6b9de273c70491e4ed3540c0</Anchor>
    <Abstract>test the IO&amp;#39;s graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_off</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a29d83e9b6fc2610ea3cbac33588b9dcf</Anchor>
    <Abstract>end output capture </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_capture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0ce9f71e62551b921a17869f0d4ea3c8</Anchor>
    <Abstract>answer the capture buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0cd73786ea896b62cf0ec3e3e0367dd8</Anchor>
    <Abstract>set/clear my graph root generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a538b273c6de621b2e38266e6216bde1c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7cca2bf79735626d7ab93684554e0bff</Anchor>
    <Abstract>get a buffer from the CSL graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAndIncrementSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af2075a50a32bf0cfddae3183b37e0959</Anchor>
    <Abstract>increment and answer my seq # </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printTimeStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc6975037c1beec8dadf8f4bb1405549</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsPlaying</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>a3c0bd244f2ecf3b88365eaa3e955a19e</Anchor>
    <Abstract>whether or not it&amp;#39;s playing </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsThreadRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>af9dbf109d7b237ea0ad81fd4ebbc987d</Anchor>
    <Abstract>is the background thread running? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>a5e452c8fdbd009bf572e314042b492c6</Anchor>
    <Abstract>the file&amp;#39;s buffer rate; </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af8690c5e8a8f34a0b10b74f3cd066063</Anchor>
    <Abstract>the root of my client DSP graph, often a mixer or panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a688331f6e9a2b1356f545d2ace55f41a</Anchor>
    <Abstract>the most recent input buffer (if it&amp;#39;s turned on) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a3c5d6efa6e7750baa2c271bb075b476c</Anchor>
    <Abstract>the output buffer I use (passed to nextBuffer calls) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCaptureBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a795d3c1ee90a4cdcd802b4592beb97d4</Anchor>
    <Abstract>the output buffer I use for capturing output (for testing) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afff5975d365381be5385ebe15b3a7bd2</Anchor>
    <Abstract>the buffer for holding the sound card input (if open) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChannelMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc83a0ce4a361d076eea2e657e256683</Anchor>
    <Abstract>the output channel remapping array </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFramesPlayed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7b84206149d0f23fee4669838291f222</Anchor>
    <Abstract>counter of frames I&amp;#39;ve played </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afc645076ff45980d4b9d8c2209f55850</Anchor>
    <Abstract>sequence counter </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLoggingPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a297e157c9f133ea1d9face8f08165478</Anchor>
    <Abstract>logging period in seconds </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a5e0be8bcb1d550c798d0cd12885754a7</Anchor>
    <Abstract>inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa384e814fb13e794b11f6ece70c37f21</Anchor>
    <Abstract>outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa00a157f1e87264998ba876740e80448</Anchor>
    <Abstract>physical inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a42b4e4ef54d1ae1f5a35bf962767608d</Anchor>
    <Abstract>physical outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a00e7e09a91e97b4fe51e9f1cab42354e</Anchor>
    <Abstract>status flag </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0f04053849229c3aa671f67783fee760</Anchor>
    <Abstract>flag if IO is interleaved </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a34133e4a0b4c142541f11fc67c1d76fc</Anchor>
    <Abstract>used for capture offset </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aacec7725efc2851f7cfd94c12f5c3c90</Anchor>
    <Abstract>used for getting the real time </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeVals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6347e98caa1e7767dabae8a6c75c3535</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThisSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a62812f8f78f1e1859fd8b39a4e0f047c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7fe073467db4543ef9c925151f65a13c</Anchor>
    <Abstract>for printing run-time statistics </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a03a3a04552d3c4862dceffdc6d513376</Anchor>
    <Abstract>cpu usage % print the CPU usage message </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeNextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>ad423fea0162be75b2951d49b6b745f4c</Anchor>
    <DeclaredIn>FileIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af4d52f5f176a5d68ddd88fd4fbaa6eca</Anchor>
    <Abstract>initialize overridden in subclasses </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threadFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>a5c9c1795aba9e168721db98d9f482d70</Anchor>
    <DeclaredIn>FileIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>acedf7454b336f776a6ef914d30150adb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>a9f03fbea6232143832fadba2121f51b7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>a90c7576f52496b1084f95aa7b26ca2f1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>a51bd8f2928af2f4bd847467a85a34bd5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FileIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_file_i_o.html</Path>
    <Anchor>a068e951c0e4b24bf0f31797e0f77eeba</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxSampEver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a531db5245d57b705379d5949f2d7e24c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Filter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Abstract>Filter: the canonical-form n-pole/m-zero filter class. </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Filter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>ad15994c30d497afd567a6445446a249e</Anchor>
    <Abstract>Generic Filter class with scalable order and generic next_buffer method that implememnts the canonica...</Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Filter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>aeee390bbb9fe46b3d6b638ffc81277e3</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Filter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>ae05004d7fbd1f7e9a2b8bb10267a273f</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Filter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a7464652bb8953b35562d573ba3909535</Anchor>
    <Abstract>This constructor takes arrays of coefficients and constructs the filter accordingly. </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Filter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a502ee334d42eac3edbaf32b599f9c35e</Anchor>
    <Abstract>Filter destructor frees temp memory. </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a0025ddcb760ab59042a1b7f1454d7f86</Anchor>
    <Abstract>clears the input/output buffers </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupCoeffs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a612fa7b7d10ec5dc99c11c2564877640</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupCoeffs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a005874013140674786666154cf493acf</Anchor>
    <Abstract>to be overloaded by subclasses supply the coefficients directly </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>aa8026143668464aa692e4cecf3092a59</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>af498bd7cc09785fb5c1a4c80ac603015</Anchor>
    <Abstract>log information about myself </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ac6cae58dc83261deb85088a3e42beb73</Anchor>
    <Abstract>set the receiver&amp;#39;s frequency to a UGen or a float </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ae1d49bbec872cf00f373df250af154a5</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a330e3b583d58717d2423f888fddb6dbd</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a33b250117a39b2fdda305daa8b472fbd</Anchor>
    <Abstract>set the receiver&amp;#39;s amount to a UGen or a float </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a8d4de20eb83b38c4b85866e226fca39b</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a689e7ff28c2d3336a408965c79674853</Anchor>
    <Abstract>shared initialization function </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>ae88e176028ac99dbc4fe816289b90dcb</Anchor>
    <Abstract>array of numerator coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mACoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a95b02921293a9ff951107a2568ba7731</Anchor>
    <Abstract>array of denominator coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBNum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>aa7156b0b5d3c8d4f08181325654262b2</Anchor>
    <Abstract>number of coeffs in b </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mANum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>abbd984700c6190e0737d626eed850bf4</Anchor>
    <Abstract>number of coeffs in a </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a5b23dbbb4d7dd347280e188c7ddda873</Anchor>
    <Abstract>arrays of past input and output samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a869ea8dedfde47401e02e4c1944efac3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a95cd99da2071d440280d5b10d74226df</Anchor>
    <Abstract>to keep hold of sample rate for calculating coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::FilterSpecification</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::FilterSpecification</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter_specification.html</Path>
    <Abstract>forward declaration </Abstract>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilterSpecification</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FilterSpecification</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter_specification.html</Path>
    <Anchor>ab0de9dc68e5a02d7e70fae4ba6f109d9</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FilterSpecification</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FilterSpecification</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter_specification.html</Path>
    <Anchor>a9aa4dcd1688e6cd0a2681ed124a42e02</Anchor>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequencies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FilterSpecification</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter_specification.html</Path>
    <Anchor>a50899593babbaaa4d893c955251ff4cf</Anchor>
    <Abstract>Accessors. </Abstract>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResponses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FilterSpecification</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter_specification.html</Path>
    <Anchor>a640cdc5dc74764b03b8fc0ccba1fc9af</Anchor>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FilterSpecification</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter_specification.html</Path>
    <Anchor>a80c1bcc90f0745c8152543ed86678ddb</Anchor>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTaps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FilterSpecification</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter_specification.html</Path>
    <Anchor>ab6bc3a4c32f6c228eecadbf1137cfe03</Anchor>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>planFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FilterSpecification</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter_specification.html</Path>
    <Anchor>ae19c72073ed01ad09a97fe22199a3675</Anchor>
    <Abstract>method to plan the filter (execute the search/iterate algorithm) </Abstract>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTaps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FilterSpecification</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter_specification.html</Path>
    <Anchor>a0af0ce59013bdcece228f05e134c364d</Anchor>
    <Abstract>number of taps desired </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTapData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FilterSpecification</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter_specification.html</Path>
    <Anchor>a3f8ac9681fd2876b890a804b6e2e1b71</Anchor>
    <Abstract>the FIR tap weights (created by the planFilter method) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumBands</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FilterSpecification</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter_specification.html</Path>
    <Anchor>aaa6473aa848825b5c5031e110b1aa07f</Anchor>
    <Abstract>length of specification </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrequencies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FilterSpecification</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter_specification.html</Path>
    <Anchor>a672c90e48b3d3f05aa3afbec1ac0c961</Anchor>
    <Abstract>band edge frequencies (2 * mNumBands) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mResponses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FilterSpecification</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter_specification.html</Path>
    <Anchor>a7010fa413dda704210d598d9bcb66f92</Anchor>
    <Abstract>band responses (mNumBands) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FilterSpecification</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter_specification.html</Path>
    <Anchor>a7e0a32dbe52a9675b7109496f607acd0</Anchor>
    <Abstract>band error weights (mNumBands) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>csl::FilterSpecification</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter_specification.html</Path>
    <Anchor>a616428a55830d804bc6d1ad0b942cbba</Anchor>
    <Abstract>Allow the FIR to access private members of this class. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::FIR</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::FIR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_i_r.html</Path>
    <Abstract>Examples. </Abstract>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FIR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_i_r.html</Path>
    <Anchor>a7ac8536056adc47337ce0d643795e9a8</Anchor>
    <Abstract>Various constructors Takes a UGen, and optionally the number of taps and the tap IR array...</Abstract>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FIR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_i_r.html</Path>
    <Anchor>a9630feb1d32eb02a76e368289f328161</Anchor>
    <Abstract>give it a filter specification object </Abstract>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FIR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_i_r.html</Path>
    <Anchor>ab69419ff8d8a0cfa8d33f9c77dc86e1d</Anchor>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FIR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_i_r.html</Path>
    <Anchor>adb5c393ea2bcad63741f924024b06080</Anchor>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FIR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FIR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_i_r.html</Path>
    <Anchor>ad0e309ae9044ab72c91ee84bca0a84ce</Anchor>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTaps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FIR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_i_r.html</Path>
    <Anchor>ab5d9df74eedfa13c832f82a92c5e8b82</Anchor>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTaps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FIR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_i_r.html</Path>
    <Anchor>a013c6046542c0ef35b49fe53c90efce9</Anchor>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_taps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FIR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_i_r.html</Path>
    <Anchor>ad22424b23c5de733566661ef8908e157</Anchor>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FIR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_i_r.html</Path>
    <Anchor>a1b5e71b4b6504e636c1f62c272022b3b</Anchor>
    <Abstract>The work method... </Abstract>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetDLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FIR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_i_r.html</Path>
    <Anchor>a2b2c632332ed998f314f8589b0593ad9</Anchor>
    <Abstract>zero-out mDline and reallocate memory if necessary; </Abstract>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remez</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FIR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_i_r.html</Path>
    <Anchor>a8f1da9e9792fbbfcaf5bfeffd3cbf0ba</Anchor>
    <Abstract>Parks-McClellan/Remez FIR filter design algorithm. </Abstract>
    <DeclaredIn>FIR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFilterSpec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FIR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_i_r.html</Path>
    <Anchor>aa2a65e1fa026328468cd50d3b7944766</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FIR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_i_r.html</Path>
    <Anchor>a31f9f35c5b1a6d7b7f544f12304bdabc</Anchor>
    <Abstract>offset &quot;pointer&quot; for loop counting Here are the sample buffers (dynamically allocated) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FIR</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_i_r.html</Path>
    <Anchor>a13b4e173f5ead484342a81a9bc19035d</Anchor>
    <Abstract>mNumTaps length delay line </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::FMInstrument</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Abstract>FMInstrument. </Abstract>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FMInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>ae46316523d6288815a03b7966a44c6d1</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FMInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>a8ce252a20657281fc193a6f5a4ed3a6d</Anchor>
    <Abstract>copy constructor </Abstract>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FMInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>a7d2fbc575393dd9bdd1d4cc69cbbd77d</Anchor>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>ae44e6f773252c4e5608dd66338a0ae5d</Anchor>
    <Abstract>Plug functions. </Abstract>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseArgs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>a3395833f89f14601556eccd6770537b9</Anchor>
    <Abstract>Play functions. </Abstract>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playOSC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>a1c2923763d89f905490d308f769ffbab</Anchor>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>a67835397c480b7657f8d22f4bac942af</Anchor>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playMIDI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>a6005e8c540bd8ad383f9d02814fe5c85</Anchor>
    <Abstract>These are the UGens of the DSP graph (i.e., the FM instrument) </Abstract>
    <DeclaredIn>BasicFMInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>afa6f111dc85dab7a7bdf5e2cc6c165af</Anchor>
    <Abstract>Accessors. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a79aab7d10f67e121641d09224eb230bb</Anchor>
    <Abstract>my UGen graph </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>envelopes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a58dc9b22696af5314e391ed1212782c6</Anchor>
    <Abstract>the map of ugens in the graph by name </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a2714d7d2ec9c9dc7008e81b31e423f1b</Anchor>
    <Abstract>the vector of envelopes to query or trigger </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genNamed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abccad2cc3a254ae6bac8c660f7518778</Anchor>
    <Abstract>answer my name answer the number of channels </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abeb0b477a2388f8c7a2b41e87ad24c01</Anchor>
    <Abstract>Accessor management. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ae5f78c65cf53af61bbdcc3a8e228f947</Anchor>
    <Abstract>answer the accessor vector </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a751268fdb83b44806a6f0b745400fce5</Anchor>
    <Abstract>set a named parameter </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a05fbcc14ac4a0cd792e85aff09147b3b</Anchor>
    <Abstract>Envelope query and re-trigger. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>play</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ab643e7923572c1cf2b4edb62cb1fc14a</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a1b783961f66930972f30e242139be90f</Anchor>
    <Abstract>Play a note (subclasses refine) </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abffd98c97971ef8ec4c893f8d019e3c1</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAEnv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>a082ae788c9f5e4e02d034f57fb6efec5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIEnv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>a073d74ee468f754276453fa991b865a4</Anchor>
    <Abstract>amplitude &amp; modulation index envelopes </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>aac53e746e9c09b6f3b46e0330899abff</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>ac49c3fe420e48a3dd75d5d82882e5991</Anchor>
    <Abstract>2 sine oscillators, carrier and modulator </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FMInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_m_instrument.html</Path>
    <Anchor>aed5b37556ec96a06ba64973cf890af0e</Anchor>
    <Abstract>stereo panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a3685284d2311cfe1d10f38536c424666</Anchor>
    <Abstract>Caches. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a660770fe07dc68cb05f277ff03130ec5</Anchor>
    <Abstract>my name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUGens</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ab5af1851504b58a140055423100bc61a</Anchor>
    <Abstract>the map of ugens in the graph by name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnvelopes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a07ff212be08d5cc25fa2a328dd630188</Anchor>
    <Abstract>the vector of envelopes to query or trigger </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ad52424c33a5b87976186ef9e3f784a73</Anchor>
    <Abstract>the accessor vector </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Formant</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Formant</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_formant.html</Path>
    <Abstract>Formant Filter with zeros at +-z and complex conjugate poles at +-omega. setupCoeffs() looks at the m...</Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Formant</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Formant</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_formant.html</Path>
    <Anchor>ad114ddc9689c3d1d9ce3d62a8b211ca5</Anchor>
    <Abstract>constructors &amp; destructor </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Formant</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Formant</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_formant.html</Path>
    <Anchor>a01a6b1fe8f93e0a3ff29931ac98065f9</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Formant</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Formant</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_formant.html</Path>
    <Anchor>adf38610fa1b8b18db5953d7c3e6d02c8</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupCoeffs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Formant</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_formant.html</Path>
    <Anchor>a8129892b48b4c15dd1b30aec76111a8f</Anchor>
    <Abstract>Filtering methods. </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNormalize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Formant</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_formant.html</Path>
    <Anchor>a551dc7d944784d24510334027e4e40c8</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a0025ddcb760ab59042a1b7f1454d7f86</Anchor>
    <Abstract>clears the input/output buffers </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupCoeffs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a005874013140674786666154cf493acf</Anchor>
    <Abstract>to be overloaded by subclasses supply the coefficients directly </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>aa8026143668464aa692e4cecf3092a59</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>af498bd7cc09785fb5c1a4c80ac603015</Anchor>
    <Abstract>log information about myself </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ac6cae58dc83261deb85088a3e42beb73</Anchor>
    <Abstract>set the receiver&amp;#39;s frequency to a UGen or a float </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ae1d49bbec872cf00f373df250af154a5</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a330e3b583d58717d2423f888fddb6dbd</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a33b250117a39b2fdda305daa8b472fbd</Anchor>
    <Abstract>set the receiver&amp;#39;s amount to a UGen or a float </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a8d4de20eb83b38c4b85866e226fca39b</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a689e7ff28c2d3336a408965c79674853</Anchor>
    <Abstract>shared initialization function </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNormalize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Formant</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_formant.html</Path>
    <Anchor>aeacfc509541bebf3408c8d0567c6890c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>ae88e176028ac99dbc4fe816289b90dcb</Anchor>
    <Abstract>array of numerator coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mACoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a95b02921293a9ff951107a2568ba7731</Anchor>
    <Abstract>array of denominator coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBNum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>aa7156b0b5d3c8d4f08181325654262b2</Anchor>
    <Abstract>number of coeffs in b </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mANum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>abbd984700c6190e0737d626eed850bf4</Anchor>
    <Abstract>number of coeffs in a </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a5b23dbbb4d7dd347280e188c7ddda873</Anchor>
    <Abstract>arrays of past input and output samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a869ea8dedfde47401e02e4c1944efac3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a95cd99da2071d440280d5b10d74226df</Anchor>
    <Abstract>to keep hold of sample rate for calculating coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Freeverb</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Abstract>CSL port of the public domain Freeverb reverberator. </Abstract>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Freeverb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>aa6783a4fb9e7906e487b4744234a4b8f</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Freeverb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>a6e8a0c6bd60a454a2486068f25b6b0e1</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>roomSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>ad0b78e03bf66d0ea6ae9cae0cd636e8a</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoomSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>a0c49b98a729c8ca565e321f61318e807</Anchor>
    <Abstract>Setting the room size makes longer tails. The value has a range from 0 to 1. </Abstract>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dampening</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>a4701f3abff2e36f8d2472dcdd7f50391</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDampening</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>a467a004c169cc49e41e95bc4832042bc</Anchor>
    <Abstract>Specified in percentage (from 0 to 100%). </Abstract>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wetLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>a27722ebd4c2da3344d4d393bb1b24cbb</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWetLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>a670c99afae36063a653320e1fe395c88</Anchor>
    <Abstract>Amount of wet (reverberation) in the mixed output. </Abstract>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dryLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>afbf23b159db9bee20b2139546ec06f55</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDryLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>a8d9d5a8b8623b6a1c9f95fec06f5c9fc</Anchor>
    <Abstract>Amount of the original &quot;dry&quot; signal in the output. </Abstract>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>aa936d109e68606085bdff8046ded0519</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>a40990114fadf45a2b0cddde854396ccd</Anchor>
    <Abstract>Currently not used, as this reverb became mono in/out. </Abstract>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>ab9d37dda4c5ceb5ed8f9ab17128504d9</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>constructReverbGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>af0b089c304c68990fad1bf4ccc09ddf4</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>aa917b56d7f4d3b071a4b7dc3237a8979</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRoomSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>a656cb80fe482253dcc841aaed21bc4f0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDampening</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>a0837bc3df2874ac571fb813458db25a6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWetLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>aa47ef99705faa431ef38788d56da40fe</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDryLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>a3705e3f4ce2e4e62b12efb5f540bfab0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>a6e62f79180b1c36e0d3af996f989474a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>a2047fc78c1accee485ce74a0df04172b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCombFilters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>a53e4812dfacf36ea70d70a7e9fc83df3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAllpassFilters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>ae8e36aacc2cbbe4f828736d3accd2c97</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCombBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>a647f8477d2b19bfa9b517d057201119a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAllpassBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Freeverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_freeverb.html</Path>
    <Anchor>a59f9f72291d3e0595964994061d6cffb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::FrequencyAmount</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Abstract>FrequencyAmount – mix-in class with frequency and amount (BW) control inputs (may be constants or ge...</Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FrequencyAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>afd267b0406b2baefe53c1f7cdb10daaf</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FrequencyAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ac6aec1bed03bff6bf0646dd106fb1cc3</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ac6cae58dc83261deb85088a3e42beb73</Anchor>
    <Abstract>set the receiver&amp;#39;s frequency to a UGen or a float </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ae1d49bbec872cf00f373df250af154a5</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a330e3b583d58717d2423f888fddb6dbd</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a33b250117a39b2fdda305daa8b472fbd</Anchor>
    <Abstract>set the receiver&amp;#39;s amount to a UGen or a float </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a8d4de20eb83b38c4b85866e226fca39b</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::FSine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::FSine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_sine.html</Path>
    <Abstract>FSine – (uses a ringing filter for the sine calc) </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FSine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FSine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_sine.html</Path>
    <Anchor>afdafdb40335f1ea6fe185df96b2c72f0</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FSine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_f_sine.html</Path>
    <Anchor>af4ed9c823283fcb21249e865641981d2</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Oscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_oscillator.html</Path>
    <Anchor>a25d694e0f48fc848ef49efb1908e6930</Anchor>
    <Abstract>print the receiver for debugging </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Grain</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Grain</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_grain.html</Path>
    <Abstract>Grain data structure This implementation uses a linked list data structure. You might want to add a f...</Abstract>
    <DeclaredIn>Granulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>amplitude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Grain</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_grain.html</Path>
    <Anchor>af82bdcfcef44684eadf8e8349fd03c5d</Anchor>
    <Abstract>amplitude scale (0 - 1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Grain</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_grain.html</Path>
    <Anchor>aa3eff6f89424814802bd17029d0edc33</Anchor>
    <Abstract>playback rate (1.0 for normal pitch, &lt; 0 reads backwards) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Grain</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_grain.html</Path>
    <Anchor>a61a1b4d01e81e209eecaa78be4521afe</Anchor>
    <Abstract>duration in samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Grain</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_grain.html</Path>
    <Anchor>a3753989f2fa464ea46f21b8d2cf2f753</Anchor>
    <Abstract>current time (index) in samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Grain</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_grain.html</Path>
    <Anchor>a5db0228efe0d633bfeefb0020d954453</Anchor>
    <Abstract>stereo pan 0 - 1 </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>env</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Grain</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_grain.html</Path>
    <Anchor>a3c11a5322ebde6b2e2f98045b4875f1b</Anchor>
    <Abstract>envelope: 0 = perc, 0.5 = triangle, 1 = reverse perc </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Grain</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_grain.html</Path>
    <Anchor>a1ab21f845c7a51a742153dde1e243485</Anchor>
    <Abstract>running sample index </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Grain</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_grain.html</Path>
    <Anchor>aceb61f4f9b79f8db9b49f521920ad905</Anchor>
    <Abstract>initial delay in samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>samples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Grain</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_grain.html</Path>
    <Anchor>a804ee30ace39873932a25d5d8ebd8e8c</Anchor>
    <Abstract>sample buffer pointer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Grain</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_grain.html</Path>
    <Anchor>a610e874f5f5db9864a88a210ecdcfff7</Anchor>
    <Abstract>length of sample vector </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextGrain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Grain</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_grain.html</Path>
    <Anchor>aea4e051c12a8bfad6793ce083ccd4b1a</Anchor>
    <Abstract>A pointer to the next grain in the linked list. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::GrainCloud</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Abstract>GrainCloud – routine for playing clouds under GUI control. This could be called a cloud or a stream...</Abstract>
    <DeclaredIn>Granulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GrainCloud</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>aecf148ff0c6b143564d4c69803c3079d</Anchor>
    <Abstract>simple constructor </Abstract>
    <DeclaredIn>Granulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~GrainCloud</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a1016b59a7403df3aee55adc5195b4a25</Anchor>
    <DeclaredIn>Granulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startThreads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a5eaaedfe0adeebc9a1ec381d1cb7ac39</Anchor>
    <Abstract>method to start-up the create/reap threads </Abstract>
    <DeclaredIn>Granulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>accabe09ab48475118986e301740a97a5</Anchor>
    <Abstract>reset all grains to silent </Abstract>
    <DeclaredIn>Granulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRateBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a4d366186dbfca6be5d61f44b557ab8b8</Anchor>
    <Abstract>grain rate base </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRateRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>acc41462c7258925eb402eb66a432e4eb</Anchor>
    <Abstract>rate random range </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOffsetBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a2ef7a4b85d56fa4090fb72e2455a13b7</Anchor>
    <Abstract>starting index offset base </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOffsetRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a91f8fca3866f040d86e4e4ad42e9b1bb</Anchor>
    <Abstract>offset range </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDensityBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a830f959616cfa92785de9b9b796b4581</Anchor>
    <Abstract>grain density base </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDensityRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>abf874ab4f16f5f43146a7ed19cc6efa8</Anchor>
    <Abstract>grain density range </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDurationBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>ab9be29d19903f03887c05bf5591f732e</Anchor>
    <Abstract>grain duration base </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDurationRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a2523f9d3a3ba9fbcd8edfd657606e365</Anchor>
    <Abstract>grain duration range </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWidthBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>ae8e06890cb82e78ff0160f2999a332d3</Anchor>
    <Abstract>stereo width </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWidthRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>ad1a1679141991208f8ee35d9a8ee17d7</Anchor>
    <Abstract>stereo width </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVolumeBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a770343f1afc6973b06688b2321209e35</Anchor>
    <Abstract>amplitude scale </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVolumeRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a4e6310d55730de7854501bf3d03b507e</Anchor>
    <Abstract>amplitude range </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnvelopeBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>ab3493e58ac93c0ee1a3ea314e157ac04</Anchor>
    <Abstract>envelope base: 0 = perc, 0.5 = triangle, 1 = reverse perc </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnvelopeRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a1113b30e849391a6c46bb5a82792b065</Anchor>
    <Abstract>envelope range </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>ae1c40a83899939d45e9bd89dd2536b1a</Anchor>
    <Abstract>sample buffer pointer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>ad8d2b55aedb19d80af5f1b2494fb5a9b</Anchor>
    <Abstract>of samples in buffer</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPlaying</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a68f164cd2ff580fddc3af82646547685</Anchor>
    <Abstract>whether I&amp;#39;m on or off </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSilentGrains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a5933ec32850906f056c8d0a3ee279141</Anchor>
    <Abstract>shared grain lists - ptr to the free pool (silent) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPlayingGrains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a24e42327757a60efebc3ee670141e118</Anchor>
    <Abstract>ptr to the list of active grains </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a824d6e46fccc9802fee3e012feb552ef</Anchor>
    <Abstract>granulator state flag </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a7e920a26020d60822f68fcddd718aabe</Anchor>
    <Abstract>clock for accurate timing </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sampsPerTick</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a5604c5ae1279f9a49ad9d713e88ed802</Anchor>
    <Abstract>resolution of hi-res clock(s-rate / 1 billion) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spawnerThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a5f7b26dec5af11ef1f3eeb718679527a</Anchor>
    <Abstract>thread to create grains </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reaperThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a6322b631fbf5a457c4b09b4ee6779262</Anchor>
    <Abstract>thread to kill finished grains </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>threadOn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainCloud</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_cloud.html</Path>
    <Anchor>a68314dddd4e22472b486887339953064</Anchor>
    <Abstract>if the thread&amp;#39;s running </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::GrainPlayer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::GrainPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_player.html</Path>
    <Abstract>GrainPlayer – low-level granular synthesis generator, uses a list of current grains. </Abstract>
    <DeclaredIn>Granulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GrainPlayer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::GrainPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_player.html</Path>
    <Anchor>a3e93cad3d3cff7142aee67cd228a0ae5</Anchor>
    <DeclaredIn>Granulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~GrainPlayer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::GrainPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_player.html</Path>
    <Anchor>aa5efa85a2306c8d8dbd5ba996ad96a9a</Anchor>
    <DeclaredIn>Granulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::GrainPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_player.html</Path>
    <Anchor>a14ee2586caa1965ef005eff4f7e52570</Anchor>
    <Abstract>this sums up the list of live grains – very simple </Abstract>
    <DeclaredIn>Granulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCloud</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::GrainPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_grain_player.html</Path>
    <Anchor>a1b59677ef43c0c1852ce76a072ac156f</Anchor>
    <Abstract>the cloud I play </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::HammingWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::HammingWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_hamming_window.html</Path>
    <Abstract>HammingWindow: Belongs to the familly of cosine window functions. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HammingWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HammingWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_hamming_window.html</Path>
    <Anchor>a94a42257d5aee3e7ac181a3cad526ea1</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HammingWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HammingWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_hamming_window.html</Path>
    <Anchor>afc3b397da293c745612a7e929835fa8a</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HammingWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HammingWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_hamming_window.html</Path>
    <Anchor>a65e2e50b4f4925322159c94afa3247db</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~HammingWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HammingWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_hamming_window.html</Path>
    <Anchor>a25ac2cc50e3a60eafeb86df170062bf3</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a445538717eb019a4a4b9f2581b34ee3e</Anchor>
    <Abstract>Set the number of samples the window spans. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a964f52a0cd1ee2089a632c507d0d87ec</Anchor>
    <Abstract>Set the gain to which the window should be normalized. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a02b50e78cdcc095403b5b96d37732bae</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a7b53f0c4c280029dc76470d3b3fcd890</Anchor>
    <Abstract>Returns a pointer to the window data. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>acfcb1d9b3ede7ac833d01b0cb17e0d64</Anchor>
    <Abstract>Print some info about the window. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HammingWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_hamming_window.html</Path>
    <Anchor>a13f70ff4338bd2cf325f0d1a6b768fe8</Anchor>
    <Abstract>subclasses override this to fill the buffer with corresponding function. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a8fe40904c35cdede17b4f6f7ba06e6a7</Anchor>
    <Abstract>used to store the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBufferPos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>aa0ac80869363b3471bd25727443529b3</Anchor>
    <Abstract>where am I in the window buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a4a832d761a5101d8dca5e820914e491d</Anchor>
    <Abstract>length in samples of the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a185596ca7875d3cfa30e089d34ae0fe9</Anchor>
    <Abstract>gain for the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::HannWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::HannWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_hann_window.html</Path>
    <Abstract>HannWindow. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HannWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HannWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_hann_window.html</Path>
    <Anchor>a1181e221bf8b9685e98a7c753f2d5ab7</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HannWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HannWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_hann_window.html</Path>
    <Anchor>ad1ea0a9bd54d645d97d480910c91010a</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HannWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HannWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_hann_window.html</Path>
    <Anchor>a412aa53188e0d471ff57c38c41badcd3</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~HannWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HannWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_hann_window.html</Path>
    <Anchor>a5386111215bd3defa1a6efc09b0e25a5</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a445538717eb019a4a4b9f2581b34ee3e</Anchor>
    <Abstract>Set the number of samples the window spans. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a964f52a0cd1ee2089a632c507d0d87ec</Anchor>
    <Abstract>Set the gain to which the window should be normalized. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a02b50e78cdcc095403b5b96d37732bae</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a7b53f0c4c280029dc76470d3b3fcd890</Anchor>
    <Abstract>Returns a pointer to the window data. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>acfcb1d9b3ede7ac833d01b0cb17e0d64</Anchor>
    <Abstract>Print some info about the window. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HannWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_hann_window.html</Path>
    <Anchor>a2eae359312fc90551b2757655c1bdaf4</Anchor>
    <Abstract>subclasses override this to fill the buffer with corresponding function. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a8fe40904c35cdede17b4f6f7ba06e6a7</Anchor>
    <Abstract>used to store the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBufferPos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>aa0ac80869363b3471bd25727443529b3</Anchor>
    <Abstract>where am I in the window buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a4a832d761a5101d8dca5e820914e491d</Anchor>
    <Abstract>length in samples of the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a185596ca7875d3cfa30e089d34ae0fe9</Anchor>
    <Abstract>gain for the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::HeadphoneSpeakerLayout</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::HeadphoneSpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_headphone_speaker_layout.html</Path>
    <Abstract>&quot;Headphone  Layout&quot;, where two phones are positioned 90¼ left, 90¼ right and no elevation (0¼)...</Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HeadphoneSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HeadphoneSpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_headphone_speaker_layout.html</Path>
    <Anchor>ae41542622a8c5f968900ce035630c45d</Anchor>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSpeakerFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a017891c8313dbba316bb94c9cac1db12</Anchor>
    <Abstract>Reads the speaker listing file according to the specification. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeaker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a376e8e55b302290fdde04ae0f241291b</Anchor>
    <Abstract>Add a speaker specifying its position in degrees from the center of the listening space...</Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeaker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a4d917971d819e301fb879b930cc07ac7</Anchor>
    <Abstract>Add a WFS speaker. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numSpeakers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a336116418cb1cc2378d1c3190cb31655</Anchor>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalizeSpeakerDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a2a31a11fc6a25bb75280a4fb3764bfc0</Anchor>
    <Abstract>Returns the number of loudspeakers in the layout. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speakerAtIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>adf7a944e4b1954c6ad0fae60b69ca66a</Anchor>
    <Abstract>Returns the speaker at the specified index. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPeriphonic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a205bebcaec7fa55da24e9fb9aeecd191</Anchor>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a896276154013f08ea0c4ba34d5693a14</Anchor>
    <Abstract>If any of the speakers in the layout has an elevation other than 0, it returns true. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>ad897b481f5e8f5b5a8b230b682371355</Anchor>
    <Abstract>Returns a pointer to the default layout. If no default exists, it creates one. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>af145986c3817a8008ca94973c75f63b3</Anchor>
    <Abstract>Use it to set a layout as default. Clients (e.g. a Panner) can then make use of this layout...</Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a9d0c736d505946d732683bbca8fee74c</Anchor>
    <Abstract>Vector of pointers to the loudspeakers. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::HRTF</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::HRTF</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f.html</Path>
    <Abstract>HRTF: holds the data that corresponds to an HRTF for a single position. It has a list of complex buff...</Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HRTF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTF</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f.html</Path>
    <Anchor>a649b4b72b3b9acccc6f2915445930dae</Anchor>
    <Abstract>HRTF constructor allocates memory for the HRTF data and then reads the HRIR file and performs the blo...</Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HRTF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTF</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f.html</Path>
    <Anchor>a7b56147ebb1291f700457c692ac94f03</Anchor>
    <Abstract>load an HRIR file and do FFTs </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~HRTF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTF</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f.html</Path>
    <Anchor>a4d09224e00d5b34f7b84a794fa9381b9</Anchor>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTF</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f.html</Path>
    <Anchor>a5210ee0143e46c72e8bd05f0dfae0ea0</Anchor>
    <Abstract>Prints the position that corresponds to this HRTF. </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTF</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f.html</Path>
    <Anchor>afb5de6d82566ae2659a7eb7d3591944c</Anchor>
    <Abstract>returns the size on bytes of the receiver&amp;#39;s storage </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::HRTF</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f.html</Path>
    <Anchor>a8677e600aaa7037fe3abbff07b82175c</Anchor>
    <Abstract>The Position at which the HRIR was recorded. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mHrtfL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::HRTF</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f.html</Path>
    <Anchor>abc59c7d47410d0664560ecdb68cdc000</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mHrtfR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::HRTF</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f.html</Path>
    <Anchor>a5c91e6e5cf44c79f9cdf1f4da6230139</Anchor>
    <Abstract>2 arrays of arrays of mNumFFTBlocks * complex[513]: the HRTF data in blocks of complex # for stereo ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFFTBlocks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::HRTF</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f.html</Path>
    <Anchor>a3b0bcc28948c542a181533e7abe0b857</Anchor>
    <Abstract>of blocks (16)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::HRTFDatabase</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Abstract>HRTFDatabase: has a vector of HRTFs and can access them by position – hrtfAt(CPoint) – or by index ...</Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~HRTFDatabase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>a9e4d319cafabbbeba949b5f1bbd19507</Anchor>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numHRTFs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>a7a4815c4565635faf0ebb498928b7fff</Anchor>
    <Abstract>Total number of HRTFs loaded into the database. </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>windowSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>a256486e4cf6d949c8e3c74c3d9b80710</Anchor>
    <Abstract>The size of the analysis window (in samples). </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hrtfLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>ab92574774e74abee7426bb1ab88062a5</Anchor>
    <Abstract>The length (in samples) of the Transfer Function buffer. </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hrirLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>a19baf6e65adfbee1694406229ef958ae</Anchor>
    <Abstract>The length (in samples) of the impulse responses loaded. </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numBlocks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>ac4a172bff067df4d486fa79bf1f58a09</Anchor>
    <Abstract>The length (in windows) of the impulse responses loaded. </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hrtfAt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>a8a1fcf67178aa986d54d36af3045ec99</Anchor>
    <Abstract>answer the index of the HRTF nearest the given point </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hrtfAt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>adcac5952743f34655cc21794cfe59922</Anchor>
    <Abstract>answer an HRTF* by index </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>a877e62050638cd5d5134fe49a8f15e98</Anchor>
    <Abstract>Print all the HRTFs in the database. </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>a200e0c02e8ffa259fa6270793064ae55</Anchor>
    <Abstract>returns the size on bytes of the receiver&amp;#39;s storage </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeToDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>af59206152880777bd1bdb234c5f0e37a</Anchor>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Database</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>ac86b18aa8294f2a235f88a74c59072c7</Anchor>
    <Abstract>accessor for the singleton instance (lazy init) </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Destroy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>a441373cfd2b0d565b50c6dd97e1f7699</Anchor>
    <Abstract>free the instance </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>ac2bbe146b3e367085238d81e8da9b503</Anchor>
    <Abstract>load the singleton from the given data folder </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>a9136cb2226ebfcfd135fb4b952419c0d</Anchor>
    <Abstract>bulk-convert DBs </Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HRTFDatabase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>a8742b0718a554090498312201ffd4abd</Anchor>
    <Abstract>constructor that loads from a folder (protected) load a set of HRTFs from a folder or a file list fil...</Abstract>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>a2f0feb36ef6e070506c0620199b4d9c5</Anchor>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>aee81ed2d96cbe71f4b1176fe464906c2</Anchor>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>a997cbb9c17cd80c6aa7044363d95cb22</Anchor>
    <DeclaredIn>BinauralDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mHRTFVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>af676f8bbab7772eaa8efe714e6e0fd35</Anchor>
    <Abstract>vector of the HRTFs that constitute the database </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>a9ad5c2a844d103e656cdaed7b5ef4964</Anchor>
    <Abstract>FFT sizes (1024) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mHRTFLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>a6da53217a0a2f614a52f44cce2f81539</Anchor>
    <Abstract>513 </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mHRIRLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>ada9979ffa019c915d304ededcdb972cd</Anchor>
    <Abstract>The length of the Head Related Impulse Response (8192) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDatabase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::HRTFDatabase</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_h_r_t_f_database.html</Path>
    <Anchor>a7ccf6dd149a9caa296dd39aef49166e0</Anchor>
    <Abstract>The protected single instance of the HRTF Database. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::IFFT</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Abstract>Inverse FFT. </Abstract>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IFFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>a7fec7a6bbac200132e8fe2f0bebe45f2</Anchor>
    <Abstract>Default size to the buffer size and flags to measure. </Abstract>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~IFFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>a87aa638a7aa4154c5c7ad9176f3b09e2</Anchor>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fftSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>a2b14de932fd1e96de6539b85e723cf3b</Anchor>
    <Abstract>no setter – create a new IFFT to change size </Abstract>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>a25819aca9565709621d92dca7e19a91e</Anchor>
    <Abstract>getter methods </Abstract>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binValueMagPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>a5bc75eff2ebe1d9a09c456f27382f572</Anchor>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>aabcf225943a2c59a6fa9ec418edaf44f</Anchor>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>a437c1a76a0f9ffb4dada740f4476cfb9</Anchor>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>a20d10d2467450186bd36e31fd7d7dbad</Anchor>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>a944de24ce9001ff8cf54845b5db098cf</Anchor>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>a4307d57293fda06392d0ddb03c598c6a</Anchor>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBinMagPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>a73fc6e28a1b85ada6f223ab43a5ec410</Anchor>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBinsMagPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>ac7ab4db252bc3c24d0f369d32060735b</Anchor>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>a7a275a60f1368cfcc792276d2b928320</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>Spectral.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFFTSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>a44d6e20a6cf863fa8079948653a4bf84</Anchor>
    <Abstract>This should be unsigned, but is signed for compatability with FFTW. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWrapper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>ae3bb4510020c4c90a09fccef9888fc96</Anchor>
    <Abstract>actual FFT wrapper object </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInBuf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>acb12839b38009a05856752f8908f2005</Anchor>
    <Abstract>input buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpectrum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IFFT</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_f_f_t.html</Path>
    <Anchor>a8221fed54e29fc1ee1b4b2b13b96026a</Anchor>
    <Abstract>spectral data I accumulate </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Impulse</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Impulse</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_impulse.html</Path>
    <Abstract>Impulse – oscillator class (this create a single impulse delayed by &amp;#39;delay&amp;#39; samples) ...</Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Impulse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Impulse</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_impulse.html</Path>
    <Anchor>ac53cb6c94ab632533373665662596372</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Impulse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Impulse</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_impulse.html</Path>
    <Anchor>a286b60288b0e3ab00c6e2a1890c1eb34</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Impulse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Impulse</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_impulse.html</Path>
    <Anchor>a9ae08aff9664b04b36097f7cbe2e8f38</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Impulse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Impulse</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_impulse.html</Path>
    <Anchor>a0194f5f25a6e98fc2835593ac8deafa7</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Impulse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Impulse</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_impulse.html</Path>
    <Anchor>ad5fb47b98d5c6970ffc479008bc322f4</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Impulse</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_impulse.html</Path>
    <Anchor>a16ef0e3d0b2144dd2a165ac480ee692e</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Oscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_oscillator.html</Path>
    <Anchor>a25d694e0f48fc848ef49efb1908e6930</Anchor>
    <Abstract>print the receiver for debugging </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCounter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Impulse</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_impulse.html</Path>
    <Anchor>ab39d99f4c06741e18d3cbdec8f8b5f3a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::InOut</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Abstract>InOut class copies the IO port&amp;#39;s input buffer to the output buffer, possibly with channel remap and s...</Abstract>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>ac2dd5f678d80fb15b8d4302c3f87ecad</Anchor>
    <Abstract>Constructor with IO, number of channels in &amp; out, and processing. </Abstract>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>a028e2b3d7e278d160c46f874ee008e4b</Anchor>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>ad9424c5934f0e2dcf24deec139611611</Anchor>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>a1eb6c1a14d6f3f93928945a3c2e33267</Anchor>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~InOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>ab54b414c1cc70bf1292ef964e3869c2b</Anchor>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInChan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>afc75b4cb00c9936473dabba4e9d36e76</Anchor>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutChan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>a969f36d0491b1eeebbe84d3c3fecf9b1</Anchor>
    <Abstract>set # in/out chans </Abstract>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInChan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>a3d7a4e51ffc03b9f215503890dffd509</Anchor>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOutChan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>a0b018bfda7377abed4d9badea0c91f9b</Anchor>
    <Abstract>get # in/out chans </Abstract>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setChanMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>a28bb1d9b10f7df3b8bdf65c58be6247d</Anchor>
    <Abstract>set channel map </Abstract>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setChanGains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>aec00de260cb01be3bb88e49b1b4d3523</Anchor>
    <Abstract>set gain array </Abstract>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>a04450b17f4f7dbe24102288e67234f0f</Anchor>
    <Abstract>set gain value at index </Abstract>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>a9a5f0a55f7be1f33d6f38de1b81e6142</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>InOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>ab124c86a99362d11044f8e04f1a6f404</Anchor>
    <Abstract>The (Singleton) IO pointer (or NULL, to act as an effect) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>aa8dc01d2fab436a1ef754c55801db0b2</Anchor>
    <Abstract>the mapped buffer pointers for the output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInChans</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>a28704484f383f812aab443537f553365</Anchor>
    <Abstract>in chans</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutChans</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>a7c06e508d5f8888487e2da639c282210</Anchor>
    <Abstract>out chans</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>ad61b3039b9a7d5bca0a6cce2fe34d795</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::InOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_in_out.html</Path>
    <Anchor>adec07f904b1b0fb6ac6cde0f40987ca7</Anchor>
    <Abstract>amplitude scales </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Instrument</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Abstract>Instrument class (abstract) </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Instrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a1a297b2cbe1e239c8ede2e90185e2880</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Instrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a2258091e8cc8f455ed7d6e861c204c3c</Anchor>
    <Abstract>copy constructor </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Instrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a4d7d6e5a2b05597c049a9e0ca3be3d5f</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>afa6f111dc85dab7a7bdf5e2cc6c165af</Anchor>
    <Abstract>Accessors. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a79aab7d10f67e121641d09224eb230bb</Anchor>
    <Abstract>my UGen graph </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>envelopes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a58dc9b22696af5314e391ed1212782c6</Anchor>
    <Abstract>the map of ugens in the graph by name </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a2714d7d2ec9c9dc7008e81b31e423f1b</Anchor>
    <Abstract>the vector of envelopes to query or trigger </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genNamed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abccad2cc3a254ae6bac8c660f7518778</Anchor>
    <Abstract>answer my name answer the number of channels </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abeb0b477a2388f8c7a2b41e87ad24c01</Anchor>
    <Abstract>Accessor management. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ae5f78c65cf53af61bbdcc3a8e228f947</Anchor>
    <Abstract>answer the accessor vector </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a55b0b996bba1b6ce2ed06e32e212af21</Anchor>
    <Abstract>answer the number of accessors </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a751268fdb83b44806a6f0b745400fce5</Anchor>
    <Abstract>set a named parameter </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a05fbcc14ac4a0cd792e85aff09147b3b</Anchor>
    <Abstract>Envelope query and re-trigger. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>play</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ab643e7923572c1cf2b4edb62cb1fc14a</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playOSC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a15f73ef9e52d47cd719e0720c0ada60b</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a1b783961f66930972f30e242139be90f</Anchor>
    <Abstract>Play a note (subclasses refine) </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playMIDI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a71832a951ab951581b40817dd350ee88</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abffd98c97971ef8ec4c893f8d019e3c1</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a3685284d2311cfe1d10f38536c424666</Anchor>
    <Abstract>Caches. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a660770fe07dc68cb05f277ff03130ec5</Anchor>
    <Abstract>my name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUGens</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ab5af1851504b58a140055423100bc61a</Anchor>
    <Abstract>the map of ugens in the graph by name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnvelopes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a07ff212be08d5cc25fa2a328dd630188</Anchor>
    <Abstract>the vector of envelopes to query or trigger </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ad52424c33a5b87976186ef9e3f784a73</Anchor>
    <Abstract>the accessor vector </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::IntensityAttenuationCue</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::IntensityAttenuationCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_intensity_attenuation_cue.html</Path>
    <Abstract>Sound attenuation due to increasing distance. This &quot;Base&quot; Class uses the inverse square law...</Abstract>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IntensityAttenuationCue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IntensityAttenuationCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_intensity_attenuation_cue.html</Path>
    <Anchor>aea332e2f2834f3c0ffbca4db6280af6a</Anchor>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~IntensityAttenuationCue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IntensityAttenuationCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_intensity_attenuation_cue.html</Path>
    <Anchor>a5d1c712eda744b58b471e28ed92448c8</Anchor>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IntensityAttenuationCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_intensity_attenuation_cue.html</Path>
    <Anchor>ace80db31addf38b79f7706fd1ad16840</Anchor>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IntensityAttenuationCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_intensity_attenuation_cue.html</Path>
    <Anchor>a5181142ab9fd7ab542b5253bbec987dc</Anchor>
    <DeclaredIn>DistanceSimulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IntensityAttenuationCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_intensity_attenuation_cue.html</Path>
    <Anchor>aa10e39edd55a08b12b4bbfd80b2ffffe</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Interleaver</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Interleaver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_interleaver.html</Path>
    <Abstract>Interleaver handles copying interleaved sample buffers (like sound files and inter-process sockets) t...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Interleaver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_interleaver.html</Path>
    <Anchor>a7d0fe9c9f181585c097a8772a7974c2f</Anchor>
    <Abstract>Interleave = copy from CSL-style Buffer object to an interleaved sample vector. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Interleaver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_interleaver.html</Path>
    <Anchor>a54ebec0096077a4fef2f5031d9036b89</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interleaveAndRemap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Interleaver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_interleaver.html</Path>
    <Anchor>ac6a5443222ca7f3e9b9ba9add9ad8b44</Anchor>
    <Abstract>Interleave = copy from CSL-style Buffer object to an interleaved sample vector Remap = re-assign chan...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deinterleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Interleaver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_interleaver.html</Path>
    <Anchor>a03eae89a87ec9a72bae6496b3f1fa02c</Anchor>
    <Abstract>De-interleave = copy from interleaved SampleBuffer to CSL Buffer object. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deinterleave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Interleaver</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_interleaver.html</Path>
    <Anchor>ac535af3d6e556b168d7a4397f997922f</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::IO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Abstract>IO – the abstract I/O scheduling class; subclasses interface to specific I/O APIs. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a8d8936fa9d9812c1d9c5787edb8d55d4</Anchor>
    <Abstract>superclass = Model </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~IO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>ad4939b9a318bbd647f15eaa1f1a0e783</Anchor>
    <Abstract>default is stereo input &amp; output </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>ac4c3014e44149b9dc5249f508ac86041</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a82ce520fe4291d76c74691cbcf67dc00</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa99bfd6866a64dd7863de23aec6a10e7</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a22e88bfe429cc5f04fe64fdc98cef564</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6a8d3350db4f0b632509e6cbcf81b5c9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_on</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a33d3dfbf6b9de273c70491e4ed3540c0</Anchor>
    <Abstract>test the IO&amp;#39;s graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_off</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a29d83e9b6fc2610ea3cbac33588b9dcf</Anchor>
    <Abstract>end output capture </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_capture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0ce9f71e62551b921a17869f0d4ea3c8</Anchor>
    <Abstract>answer the capture buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0cd73786ea896b62cf0ec3e3e0367dd8</Anchor>
    <Abstract>set/clear my graph root generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a538b273c6de621b2e38266e6216bde1c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7cca2bf79735626d7ab93684554e0bff</Anchor>
    <Abstract>get a buffer from the CSL graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a26120896d8ce56c89443dbcd6f110ed9</Anchor>
    <Abstract>Get the current input from the sound card. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a8a206f11032ad9cda1b9c8202b8f06e8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAndIncrementSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af2075a50a32bf0cfddae3183b37e0959</Anchor>
    <Abstract>increment and answer my seq # </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printTimeStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc6975037c1beec8dadf8f4bb1405549</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af8690c5e8a8f34a0b10b74f3cd066063</Anchor>
    <Abstract>the root of my client DSP graph, often a mixer or panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a688331f6e9a2b1356f545d2ace55f41a</Anchor>
    <Abstract>the most recent input buffer (if it&amp;#39;s turned on) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a3c5d6efa6e7750baa2c271bb075b476c</Anchor>
    <Abstract>the output buffer I use (passed to nextBuffer calls) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCaptureBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a795d3c1ee90a4cdcd802b4592beb97d4</Anchor>
    <Abstract>the output buffer I use for capturing output (for testing) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afff5975d365381be5385ebe15b3a7bd2</Anchor>
    <Abstract>the buffer for holding the sound card input (if open) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChannelMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc83a0ce4a361d076eea2e657e256683</Anchor>
    <Abstract>the output channel remapping array </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFramesPlayed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7b84206149d0f23fee4669838291f222</Anchor>
    <Abstract>counter of frames I&amp;#39;ve played </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afc645076ff45980d4b9d8c2209f55850</Anchor>
    <Abstract>sequence counter </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLoggingPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a297e157c9f133ea1d9face8f08165478</Anchor>
    <Abstract>logging period in seconds </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a5e0be8bcb1d550c798d0cd12885754a7</Anchor>
    <Abstract>inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa384e814fb13e794b11f6ece70c37f21</Anchor>
    <Abstract>outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa00a157f1e87264998ba876740e80448</Anchor>
    <Abstract>physical inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a42b4e4ef54d1ae1f5a35bf962767608d</Anchor>
    <Abstract>physical outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a00e7e09a91e97b4fe51e9f1cab42354e</Anchor>
    <Abstract>status flag </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0f04053849229c3aa671f67783fee760</Anchor>
    <Abstract>flag if IO is interleaved </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a34133e4a0b4c142541f11fc67c1d76fc</Anchor>
    <Abstract>used for capture offset </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aacec7725efc2851f7cfd94c12f5c3c90</Anchor>
    <Abstract>used for getting the real time </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeVals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6347e98caa1e7767dabae8a6c75c3535</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThisSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a62812f8f78f1e1859fd8b39a4e0f047c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7fe073467db4543ef9c925151f65a13c</Anchor>
    <Abstract>for printing run-time statistics </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a03a3a04552d3c4862dceffdc6d513376</Anchor>
    <Abstract>cpu usage % print the CPU usage message </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af4d52f5f176a5d68ddd88fd4fbaa6eca</Anchor>
    <Abstract>initialize overridden in subclasses </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxSampEver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a531db5245d57b705379d5949f2d7e24c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::IODevice</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::IODevice</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o_device.html</Path>
    <Abstract>IO Device class – a holder for a sound interface with name, id, # IO channels, etc. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IODevice</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IODevice</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o_device.html</Path>
    <Anchor>a7831e1f6f36cff12be6d5d1271839952</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IODevice</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IODevice</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o_device.html</Path>
    <Anchor>aee06799813fd956c507e44cbec0eb73d</Anchor>
    <Abstract>Constructor takes all variables, calls initialize() </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IODevice</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IODevice</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o_device.html</Path>
    <Anchor>a972a528fe20807e34837ac9116b74c11</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IODevice</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o_device.html</Path>
    <Anchor>a78fe85f81bbdff966bb17adc12b27e3a</Anchor>
    <Abstract>pretty-print the receiver&amp;#39; device </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IODevice</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o_device.html</Path>
    <Anchor>a52900ed8c2f2e1a4f644239ea3e007d5</Anchor>
    <Abstract>public members </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IODevice</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o_device.html</Path>
    <Anchor>aeb6688872a52d6109245bbf0b0481937</Anchor>
    <Abstract>index (API-specific) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMaxInputChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IODevice</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o_device.html</Path>
    <Anchor>a990f116e68f887e11002bb82b21d4d6f</Anchor>
    <Abstract>HW ins</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMaxOutputChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IODevice</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o_device.html</Path>
    <Anchor>a4f1665259826c4a3d774b591e508e210</Anchor>
    <Abstract>HW outs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IODevice</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o_device.html</Path>
    <Anchor>a0b06d3a79165788378e01b57e4e20745</Anchor>
    <Abstract>current SR </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IODevice</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o_device.html</Path>
    <Anchor>a88d94dc08aa97629ae48279e78ae0373</Anchor>
    <Abstract>the vector of frame rates I support </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsDefaultIn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IODevice</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o_device.html</Path>
    <Anchor>af07fea35e60b5f48d21281f433ae2208</Anchor>
    <Abstract>am i the default in? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsDefaultOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IODevice</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o_device.html</Path>
    <Anchor>a37645a7e4040de7261239475c204e453</Anchor>
    <Abstract>am i the default out? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::IOError</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::IOError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o_error.html</Path>
    <Abstract>IO Error. </Abstract>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IOError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IOError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o_error.html</Path>
    <Anchor>a68531aaeaa1b1de15561d3b63854af9f</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>aaa80baf48d8b2a9af6d5bce2d1b27388</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>a82f57e285f07ca934823977ed3d364e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::iPhoneIO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::iPhoneIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1i_phone_i_o.html</Path>
    <Abstract>CoreAudio IO class for the iPhone. </Abstract>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iPhoneIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::iPhoneIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1i_phone_i_o.html</Path>
    <Anchor>a2df32d0d3725729656d399c81fffb3b2</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iPhoneIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::iPhoneIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1i_phone_i_o.html</Path>
    <Anchor>a284efb86152296e7f4ac5993785981cb</Anchor>
    <Abstract>Most verbose constructor – specify everything. </Abstract>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~iPhoneIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::iPhoneIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1i_phone_i_o.html</Path>
    <Anchor>a179c5ff1fa54f53c6394168c7659bfa6</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::iPhoneIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1i_phone_i_o.html</Path>
    <Anchor>abbf306b488fd2b05b3917360ed812a34</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::iPhoneIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1i_phone_i_o.html</Path>
    <Anchor>a9f742d7672248570f22ba28806faa3a4</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::iPhoneIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1i_phone_i_o.html</Path>
    <Anchor>ac5f4ba5db8bb05964ec66f5581fa4aab</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::iPhoneIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1i_phone_i_o.html</Path>
    <Anchor>a1adc557345559665e6cbd52ed443ff8b</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAudioUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>ad81e59e1636a681527a23737905b5570</Anchor>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAudioUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>ad81e59e1636a681527a23737905b5570</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a7f164ed81ffdca6c7b117fc24ac41d34</Anchor>
    <Abstract>get the current input buffer </Abstract>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a55bf4cba93ef6eb5f73f1fea96fca4da</Anchor>
    <Abstract>get the current input buffer </Abstract>
    <DeclaredIn>CAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>aeb87717c93d4188b164f6747e8c751ad</Anchor>
    <Abstract>get the current input buffer get the current input buffer </Abstract>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a330e67dda82f547ae9fc64ab03dcf2de</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6a8d3350db4f0b632509e6cbcf81b5c9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_on</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a33d3dfbf6b9de273c70491e4ed3540c0</Anchor>
    <Abstract>test the IO&amp;#39;s graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_off</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a29d83e9b6fc2610ea3cbac33588b9dcf</Anchor>
    <Abstract>end output capture </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_capture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0ce9f71e62551b921a17869f0d4ea3c8</Anchor>
    <Abstract>answer the capture buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0cd73786ea896b62cf0ec3e3e0367dd8</Anchor>
    <Abstract>set/clear my graph root generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a538b273c6de621b2e38266e6216bde1c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7cca2bf79735626d7ab93684554e0bff</Anchor>
    <Abstract>get a buffer from the CSL graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAndIncrementSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af2075a50a32bf0cfddae3183b37e0959</Anchor>
    <Abstract>increment and answer my seq # </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printTimeStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc6975037c1beec8dadf8f4bb1405549</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af8690c5e8a8f34a0b10b74f3cd066063</Anchor>
    <Abstract>the root of my client DSP graph, often a mixer or panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a688331f6e9a2b1356f545d2ace55f41a</Anchor>
    <Abstract>the most recent input buffer (if it&amp;#39;s turned on) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a3c5d6efa6e7750baa2c271bb075b476c</Anchor>
    <Abstract>the output buffer I use (passed to nextBuffer calls) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCaptureBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a795d3c1ee90a4cdcd802b4592beb97d4</Anchor>
    <Abstract>the output buffer I use for capturing output (for testing) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afff5975d365381be5385ebe15b3a7bd2</Anchor>
    <Abstract>the buffer for holding the sound card input (if open) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChannelMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc83a0ce4a361d076eea2e657e256683</Anchor>
    <Abstract>the output channel remapping array </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFramesPlayed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7b84206149d0f23fee4669838291f222</Anchor>
    <Abstract>counter of frames I&amp;#39;ve played </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afc645076ff45980d4b9d8c2209f55850</Anchor>
    <Abstract>sequence counter </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLoggingPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a297e157c9f133ea1d9face8f08165478</Anchor>
    <Abstract>logging period in seconds </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a5e0be8bcb1d550c798d0cd12885754a7</Anchor>
    <Abstract>inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa384e814fb13e794b11f6ece70c37f21</Anchor>
    <Abstract>outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa00a157f1e87264998ba876740e80448</Anchor>
    <Abstract>physical inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a42b4e4ef54d1ae1f5a35bf962767608d</Anchor>
    <Abstract>physical outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a00e7e09a91e97b4fe51e9f1cab42354e</Anchor>
    <Abstract>status flag </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0f04053849229c3aa671f67783fee760</Anchor>
    <Abstract>flag if IO is interleaved </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a34133e4a0b4c142541f11fc67c1d76fc</Anchor>
    <Abstract>used for capture offset </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aacec7725efc2851f7cfd94c12f5c3c90</Anchor>
    <Abstract>used for getting the real time </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeVals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6347e98caa1e7767dabae8a6c75c3535</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThisSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a62812f8f78f1e1859fd8b39a4e0f047c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7fe073467db4543ef9c925151f65a13c</Anchor>
    <Abstract>for printing run-time statistics </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a03a3a04552d3c4862dceffdc6d513376</Anchor>
    <Abstract>cpu usage % print the CPU usage message </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::iPhoneIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1i_phone_i_o.html</Path>
    <Anchor>a0c153984421cde1581f1054017a36d10</Anchor>
    <DeclaredIn>iphoneIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af4d52f5f176a5d68ddd88fd4fbaa6eca</Anchor>
    <Abstract>initialize overridden in subclasses </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAudioUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>a140c2b8aa61826c7672068c12d4967ae</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAudioUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::AUIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_a_u_i_o.html</Path>
    <Anchor>ab4d2654f6fb47c214b2afcd4a68258a5</Anchor>
    <Abstract>The AudioUnit we play out. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxSampEver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a531db5245d57b705379d5949f2d7e24c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::JackIO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::JackIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_jack_i_o.html</Path>
    <Abstract>JackIO is an IO that uses a thread and a timer to call its graph&amp;#39;s nextBuffer(); it doesn&amp;#39;t do anythi...</Abstract>
    <DeclaredIn>JackIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>JackIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JackIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_jack_i_o.html</Path>
    <Anchor>a05043b1ca588ff18d38b48399d5e12e8</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>JackIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>JackIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JackIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_jack_i_o.html</Path>
    <Anchor>aaf0c0c7529f166b8e1dacaa07d2ba8e3</Anchor>
    <DeclaredIn>JackIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~JackIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JackIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_jack_i_o.html</Path>
    <Anchor>a129cb263fd150df752914952f11e4314</Anchor>
    <DeclaredIn>JackIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JackIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_jack_i_o.html</Path>
    <Anchor>af54a5b5d9b3247db2188ed6dde03e048</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>JackIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JackIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_jack_i_o.html</Path>
    <Anchor>af8e7dbbaf165d4394f5faec4208a5019</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>JackIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JackIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_jack_i_o.html</Path>
    <Anchor>ab78e7f0aa28f3e26560f2e55c80baa24</Anchor>
    <Abstract>start my timer thread </Abstract>
    <DeclaredIn>JackIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JackIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_jack_i_o.html</Path>
    <Anchor>a8e91968b50f56f289af933903f6bbcf5</Anchor>
    <Abstract>stop the timer thread </Abstract>
    <DeclaredIn>JackIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6a8d3350db4f0b632509e6cbcf81b5c9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_on</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a33d3dfbf6b9de273c70491e4ed3540c0</Anchor>
    <Abstract>test the IO&amp;#39;s graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_off</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a29d83e9b6fc2610ea3cbac33588b9dcf</Anchor>
    <Abstract>end output capture </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_capture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0ce9f71e62551b921a17869f0d4ea3c8</Anchor>
    <Abstract>answer the capture buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0cd73786ea896b62cf0ec3e3e0367dd8</Anchor>
    <Abstract>set/clear my graph root generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a538b273c6de621b2e38266e6216bde1c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7cca2bf79735626d7ab93684554e0bff</Anchor>
    <Abstract>get a buffer from the CSL graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a26120896d8ce56c89443dbcd6f110ed9</Anchor>
    <Abstract>Get the current input from the sound card. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a8a206f11032ad9cda1b9c8202b8f06e8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAndIncrementSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af2075a50a32bf0cfddae3183b37e0959</Anchor>
    <Abstract>increment and answer my seq # </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printTimeStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc6975037c1beec8dadf8f4bb1405549</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInput_port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::JackIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_jack_i_o.html</Path>
    <Anchor>a549fc9f500f422568c67d51edf3b9c66</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutput_port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::JackIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_jack_i_o.html</Path>
    <Anchor>a2a240c3797455b0a7a22c95a85d442da</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::JackIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_jack_i_o.html</Path>
    <Anchor>a1a5a6bb2471fe00ec53a2bc8d929c8e1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af8690c5e8a8f34a0b10b74f3cd066063</Anchor>
    <Abstract>the root of my client DSP graph, often a mixer or panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a688331f6e9a2b1356f545d2ace55f41a</Anchor>
    <Abstract>the most recent input buffer (if it&amp;#39;s turned on) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a3c5d6efa6e7750baa2c271bb075b476c</Anchor>
    <Abstract>the output buffer I use (passed to nextBuffer calls) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCaptureBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a795d3c1ee90a4cdcd802b4592beb97d4</Anchor>
    <Abstract>the output buffer I use for capturing output (for testing) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afff5975d365381be5385ebe15b3a7bd2</Anchor>
    <Abstract>the buffer for holding the sound card input (if open) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChannelMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc83a0ce4a361d076eea2e657e256683</Anchor>
    <Abstract>the output channel remapping array </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFramesPlayed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7b84206149d0f23fee4669838291f222</Anchor>
    <Abstract>counter of frames I&amp;#39;ve played </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afc645076ff45980d4b9d8c2209f55850</Anchor>
    <Abstract>sequence counter </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLoggingPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a297e157c9f133ea1d9face8f08165478</Anchor>
    <Abstract>logging period in seconds </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a5e0be8bcb1d550c798d0cd12885754a7</Anchor>
    <Abstract>inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa384e814fb13e794b11f6ece70c37f21</Anchor>
    <Abstract>outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa00a157f1e87264998ba876740e80448</Anchor>
    <Abstract>physical inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a42b4e4ef54d1ae1f5a35bf962767608d</Anchor>
    <Abstract>physical outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a00e7e09a91e97b4fe51e9f1cab42354e</Anchor>
    <Abstract>status flag </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0f04053849229c3aa671f67783fee760</Anchor>
    <Abstract>flag if IO is interleaved </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a34133e4a0b4c142541f11fc67c1d76fc</Anchor>
    <Abstract>used for capture offset </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aacec7725efc2851f7cfd94c12f5c3c90</Anchor>
    <Abstract>used for getting the real time </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeVals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6347e98caa1e7767dabae8a6c75c3535</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThisSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a62812f8f78f1e1859fd8b39a4e0f047c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7fe073467db4543ef9c925151f65a13c</Anchor>
    <Abstract>for printing run-time statistics </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a03a3a04552d3c4862dceffdc6d513376</Anchor>
    <Abstract>cpu usage % print the CPU usage message </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af4d52f5f176a5d68ddd88fd4fbaa6eca</Anchor>
    <Abstract>initialize overridden in subclasses </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxSampEver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a531db5245d57b705379d5949f2d7e24c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Joiner</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Joiner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_joiner.html</Path>
    <Abstract>Joiner class – a multiplexer for multi-channel signals. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Joiner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Joiner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_joiner.html</Path>
    <Anchor>a501ec2a025f7a4098e343ce3316dcb19</Anchor>
    <Abstract>&lt; loop through my vector of inputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Joiner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Joiner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_joiner.html</Path>
    <Anchor>aaa38a109281c9e1527e619eb2d25ad39</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Joiner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Joiner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_joiner.html</Path>
    <Anchor>a5d7d340c3ba008e80b19cc477382a624</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Joiner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_joiner.html</Path>
    <Anchor>ab68c6ad73067d37f7c93c2676297266d</Anchor>
    <Abstract>nextBuffer processes joiner channels </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Joiner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_joiner.html</Path>
    <Anchor>ac436b17ab463bb26407ec534cb3e0a83</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Joiner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_joiner.html</Path>
    <Anchor>aae3f476894c9ff87f12bc83db3ff2742</Anchor>
    <Abstract>add the argument to vector of inputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Joiner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_joiner.html</Path>
    <Anchor>a3cef8b62225ed147ab21adcf05211699</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Joiner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_joiner.html</Path>
    <Anchor>a7c3fe07f9921302b9f2bdbb8b59d559a</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::JSoundFile</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Abstract>JUCE sound file. </Abstract>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>JSoundFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>aaa404882f7e07378e34fef42f9768819</Anchor>
    <Abstract>C&amp;#39;tors. </Abstract>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>JSoundFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>a2a7e805df289e768cf0da80536727fe6</Anchor>
    <Abstract>Copy constructor – shares sample buffer. </Abstract>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~JSoundFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>aa50ec17af716fece1999740308bc4cb9</Anchor>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>aa94b31087cc544ab2a361c95420db925</Anchor>
    <Abstract>number of frames in the sound file </Abstract>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>format</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>ac5d3579f2a1e15744a3d6c0e7193c2e8</Anchor>
    <Abstract>get format open file and get stats </Abstract>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openForRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>a00ae13c02a950bf2500293a55e096fb8</Anchor>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openForRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>a89fa7a508ca2523ac78f9ba57c63473d</Anchor>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openForWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>a7bf42ec86e1b6df5ef2a604937ea81a9</Anchor>
    <Abstract>Open a file for write. Default values are some common format. </Abstract>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openForReadWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>ae9ed2c145b3e2fbc9e4d5e4bfcded709</Anchor>
    <Abstract>open r/w </Abstract>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>a709ce0a523eaed25a925f4c45c0612ff</Anchor>
    <Abstract>close file seek to some position </Abstract>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seekTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>aeae891add38333c8acf529e785637fd2</Anchor>
    <Abstract>sampleBufferPtr = mWavetable.buffer(channelIndex) + start; </Abstract>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readBufferFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>a956d2698884ae75f45f0231256ea4a42</Anchor>
    <Abstract>read a buffer from the file (possibly all of it) </Abstract>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>a22d9dc593befc8c9e79c77631268e67a</Anchor>
    <Abstract>write a buffer of data into the file </Abstract>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>aabd8300d5603172cc101216ded781aaf</Anchor>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seekTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a91a9c0a87cfadef30c85c87036e0c44d</Anchor>
    <Abstract>read a buffer from the file (possibly all of it) </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1c0a5b8c0b7b88f6aededaf3cac11b3a</Anchor>
    <Abstract>UGen operations are implemented here copy next buffer from file cache. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>abf76877b80d84a924c71cfe057c589c9</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a81eea91b52e169befa68a5a29d3da112</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a05e5efd5f4d9e3b8f3d5b232f9a3837f</Anchor>
    <Abstract>accessors </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ac956abb9c44bb61ab9ca4f523ae4b0ba</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>durationInSecs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>abb47af4a2d3f91e54fc2f41f484df3e5</Anchor>
    <Abstract>number of frames in the sound file </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sampleSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a761cf27eb474b6b59da6adbf7a39c020</Anchor>
    <Abstract>get the bytes-per-sample </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a474309df902bbd2fa3a40ef349e0beda</Anchor>
    <Abstract>r/w mode </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1712da90ed0fb0f942a200efcd082e39</Anchor>
    <Abstract>size in frames of cached portion </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mergeToMono</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a8c7c51e6f47210ce696acab098407de5</Anchor>
    <Abstract>average all the channels to mono </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setToEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad31170b93471b41f3631443778f3c70e</Anchor>
    <Abstract>set to end position </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a793fb9e9842dec545a2103beade94d71</Anchor>
    <Abstract>reset to start </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aff53ca4f2f799ec07ec8f97d1943b30c</Anchor>
    <Abstract>free the file cache </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad6d37c628d7f8c76774a173263959829</Anchor>
    <Abstract>perform sample-rate conversion </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a27c2487b064c91a585a7dac86bceaa3c</Anchor>
    <Abstract>answer if a valid file/buffer </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aa41bac4065f4d8337fcc4b8308ff3a6d</Anchor>
    <Abstract>answer if currently active </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a83560f6b69745afe3e608359ce78343f</Anchor>
    <Abstract>answer if file is loaded into RAM </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a90010297cfb69ddee6a04ee340cccb85</Anchor>
    <Abstract>answer if file has X samples in RAM </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>af8f20cc5a2e3ac0b7e47ec88a4a29453</Anchor>
    <Abstract>set file name path string </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a44834d40244991303c33c38a9232b803</Anchor>
    <Abstract>file name </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ade0cbeee4b4a0ce45b60f85fb673b20d</Anchor>
    <Abstract>log snd file props </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a6a438a4de00c32fe6341b01e757df41b</Anchor>
    <Abstract>get/set start frame </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a19f8496091b356079b3b3c88e2a298ad</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStartSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a2d85c9ddaa6405e7a868ff81ff5db9c1</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStartRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ae536aee3c744609f11f2ab001f47914f</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad2e6efb607e1238475634aa59b29da73</Anchor>
    <Abstract>get/set stop frame </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a92bffa7ebfc3785cea9a150326c79625</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStopSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a4b942b2ab31ba7548f297533feb8cd77</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStopRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aedba2ef6ff53cb9a8b6b248e57cbff73</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a703520f519b9784a6940143586ed9ff8</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a7c317a27143e0b5667a668f9dcd9648b</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playbackRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1cbaa98caa45514e8282593b04e97508</Anchor>
    <Abstract>playback rate (pitch ratio) </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a00abea2b87cb5fef1b67e13e2b1fc72c</Anchor>
    <Abstract>set the receiver&amp;#39;s playback rate (pitch ratio) </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1da9c9d3913f1b3c98ca26dc7220c718</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLooping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad8a32faddd42359d9273fff4307f9ea1</Anchor>
    <Abstract>get/set looping state </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIsLooping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a0d80781863eb728a43f930bd2f32e28d</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWaveform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a3f201809be66f80f23b50161f0deaed9</Anchor>
    <Abstract>plug in waveforms set the interpolation flag </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a246e451b9ccaa15d818c4417adfb7cf9</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a28b5bad4f2349398de3c6d09304fef4c</Anchor>
    <Abstract>reset-to-zero </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openSndfile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>ac0583ee0b25e2ea6fcc6cc96c0d2f019</Anchor>
    <Abstract>Factory methods. </Abstract>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSndfileName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a939c5b11014fdda7d241f4fe95a2a8d8</Anchor>
    <Abstract>Answer whether the given name looks like a snd file. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sndfileNameType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ac750acef6fba96a989e3f1749b0bbb45</Anchor>
    <Abstract>Answer the snd file type. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mimeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a08cb1ee054382a06d925d2328ce32286</Anchor>
    <Abstract>Answer the MIME type based on the file name. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAFReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>a6d470fe4b7ec0dd52e225c38b6a90964</Anchor>
    <Abstract>my reader </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAFWriter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>a783715b14d2a8270e4d38f4cdf228523</Anchor>
    <Abstract>and my writer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIOFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>ad737ba63b5d66b235e694ee0711ce9f9</Anchor>
    <Abstract>my JUCE file </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>a010c9de673a6f37703e544a2e7cf3011</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ae273a3d1c120209e883198e006b12b52</Anchor>
    <Abstract>the ID3 tags properties </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a1d37712b7fd137dab432d733003eca71</Anchor>
    <Abstract>whether/how I should interpolate between samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWavetable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a926e9d03bb39119f4c0992143cb3baaa</Anchor>
    <Abstract>the stored wave form </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a323673b284a59f017163a9d4bac3e51b</Anchor>
    <Abstract>where I currently am in the buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mActualFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a473db0a6a9460c7c4f162648e19f8421</Anchor>
    <Abstract>where I actually am in the buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromSndfile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_sound_file.html</Path>
    <Anchor>aedbe5b289d7d934049bc0f6cff983229</Anchor>
    <Abstract>read SF header </Abstract>
    <DeclaredIn>SoundFileJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Writeable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_writeable.html</Path>
    <Anchor>ac402dc4b6151052465f5ca9c4554b7a0</Anchor>
    <Abstract>write to the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1a86a2b513d543b7ea804039c55eaded</Anchor>
    <Abstract>allocate buffer lazily </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aa326942115ced26aa160a14a48d424e0</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad7f7cb3958081adfaabc0e7fd6c4676a</Anchor>
    <Abstract>read the ID3 or other tags. Returns true if able to read them. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillSine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a983c39e543ebf3781e4b99bb7573eb05</Anchor>
    <Abstract>fill the shared wavetable with 1 cycle of a sine wave </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a95dafe980f08f7b9560c1cae87b6dd3d</Anchor>
    <Abstract>file name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a449d4217d42485410d7f7749b2bc2278</Anchor>
    <Abstract>r/w mode </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a56b5142eb3308123411125930dbc8251</Anchor>
    <Abstract>sf format </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aeed69e1885231279589ec6a19ec80429</Anchor>
    <Abstract>is my file valid? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsLooping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a0689b61b407433cc008f0b57086ae030</Anchor>
    <Abstract>am i looping start-stop? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad23941ac7c045ee53d91d36b0780413e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a4c6d2508c69701c8348119dbf409668d</Anchor>
    <Abstract>starting/ending frames (or -1 if not used) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aa49de507d9c70a82214f838bd0ec1cce</Anchor>
    <Abstract>sample rate ratio </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ae675a4778bf49016f165dff612940d95</Anchor>
    <Abstract>sample frames</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBytesPerSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a0d6ae096275a3456fc86b1f864ff2e67</Anchor>
    <Abstract>the # of bytes per sample </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>afe3f27c850929e60f1d63b630e17aef1</Anchor>
    <Abstract>starting frame in file of buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::JUCEIO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::JUCEIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_u_c_e_i_o.html</Path>
    <Abstract>JUCEIO is an IO that runs as a JUCE. </Abstract>
    <DeclaredIn>JUCEIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>JUCEIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JUCEIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_u_c_e_i_o.html</Path>
    <Anchor>a3491d8da53700d114861c5149e0bc1a3</Anchor>
    <Abstract>&lt; Constructor (stereo by default) </Abstract>
    <DeclaredIn>JUCEIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~JUCEIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JUCEIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_u_c_e_i_o.html</Path>
    <Anchor>a672e7915e2d9a95c0cbb9080f1367a09</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>JUCEIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JUCEIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_u_c_e_i_o.html</Path>
    <Anchor>a5255ef2763059ea030eb8493304894a9</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>JUCEIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JUCEIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_u_c_e_i_o.html</Path>
    <Anchor>a49590cb13bb2902e247652d8e6d2dbe3</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>JUCEIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JUCEIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_u_c_e_i_o.html</Path>
    <Anchor>a51813c3655a57711d692af79d75e9ae1</Anchor>
    <Abstract>start my timer thread </Abstract>
    <DeclaredIn>JUCEIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JUCEIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_u_c_e_i_o.html</Path>
    <Anchor>ac1a538f5604485ed78bbefa06879fcb2</Anchor>
    <Abstract>stop the timer thread </Abstract>
    <DeclaredIn>JUCEIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>audioDeviceIOCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JUCEIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_u_c_e_i_o.html</Path>
    <Anchor>ace4fcd56758f32356a364b51269217ad</Anchor>
    <DeclaredIn>JUCEIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>audioDeviceAboutToStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JUCEIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_u_c_e_i_o.html</Path>
    <Anchor>a3174a80bb630363b62fe942ee05ae441</Anchor>
    <Abstract>JUCE methods. </Abstract>
    <DeclaredIn>JUCEIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>audioDeviceStopped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::JUCEIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_u_c_e_i_o.html</Path>
    <Anchor>a93b0a764ca461fb6dd657224e3026246</Anchor>
    <DeclaredIn>JUCEIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6a8d3350db4f0b632509e6cbcf81b5c9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_on</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a33d3dfbf6b9de273c70491e4ed3540c0</Anchor>
    <Abstract>test the IO&amp;#39;s graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_off</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a29d83e9b6fc2610ea3cbac33588b9dcf</Anchor>
    <Abstract>end output capture </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_capture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0ce9f71e62551b921a17869f0d4ea3c8</Anchor>
    <Abstract>answer the capture buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0cd73786ea896b62cf0ec3e3e0367dd8</Anchor>
    <Abstract>set/clear my graph root generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a538b273c6de621b2e38266e6216bde1c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7cca2bf79735626d7ab93684554e0bff</Anchor>
    <Abstract>get a buffer from the CSL graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a26120896d8ce56c89443dbcd6f110ed9</Anchor>
    <Abstract>Get the current input from the sound card. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a8a206f11032ad9cda1b9c8202b8f06e8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAndIncrementSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af2075a50a32bf0cfddae3183b37e0959</Anchor>
    <Abstract>increment and answer my seq # </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printTimeStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc6975037c1beec8dadf8f4bb1405549</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af8690c5e8a8f34a0b10b74f3cd066063</Anchor>
    <Abstract>the root of my client DSP graph, often a mixer or panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a688331f6e9a2b1356f545d2ace55f41a</Anchor>
    <Abstract>the most recent input buffer (if it&amp;#39;s turned on) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a3c5d6efa6e7750baa2c271bb075b476c</Anchor>
    <Abstract>the output buffer I use (passed to nextBuffer calls) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCaptureBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a795d3c1ee90a4cdcd802b4592beb97d4</Anchor>
    <Abstract>the output buffer I use for capturing output (for testing) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afff5975d365381be5385ebe15b3a7bd2</Anchor>
    <Abstract>the buffer for holding the sound card input (if open) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChannelMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc83a0ce4a361d076eea2e657e256683</Anchor>
    <Abstract>the output channel remapping array </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFramesPlayed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7b84206149d0f23fee4669838291f222</Anchor>
    <Abstract>counter of frames I&amp;#39;ve played </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afc645076ff45980d4b9d8c2209f55850</Anchor>
    <Abstract>sequence counter </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLoggingPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a297e157c9f133ea1d9face8f08165478</Anchor>
    <Abstract>logging period in seconds </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a5e0be8bcb1d550c798d0cd12885754a7</Anchor>
    <Abstract>inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa384e814fb13e794b11f6ece70c37f21</Anchor>
    <Abstract>outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa00a157f1e87264998ba876740e80448</Anchor>
    <Abstract>physical inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a42b4e4ef54d1ae1f5a35bf962767608d</Anchor>
    <Abstract>physical outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a00e7e09a91e97b4fe51e9f1cab42354e</Anchor>
    <Abstract>status flag </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0f04053849229c3aa671f67783fee760</Anchor>
    <Abstract>flag if IO is interleaved </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a34133e4a0b4c142541f11fc67c1d76fc</Anchor>
    <Abstract>used for capture offset </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aacec7725efc2851f7cfd94c12f5c3c90</Anchor>
    <Abstract>used for getting the real time </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeVals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6347e98caa1e7767dabae8a6c75c3535</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThisSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a62812f8f78f1e1859fd8b39a4e0f047c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7fe073467db4543ef9c925151f65a13c</Anchor>
    <Abstract>for printing run-time statistics </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a03a3a04552d3c4862dceffdc6d513376</Anchor>
    <Abstract>cpu usage % print the CPU usage message </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af4d52f5f176a5d68ddd88fd4fbaa6eca</Anchor>
    <Abstract>initialize overridden in subclasses </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>audioDeviceManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::JUCEIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_j_u_c_e_i_o.html</Path>
    <Anchor>a83c07416b3a7bbd7472ef44e9392a1b1</Anchor>
    <Abstract>JUCE AudioDeviceManager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxSampEver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a531db5245d57b705379d5949f2d7e24c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::KarplusString</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::KarplusString</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_karplus_string.html</Path>
    <Abstract>KarplusString – string model class. </Abstract>
    <DeclaredIn>KarplusString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KarplusString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::KarplusString</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_karplus_string.html</Path>
    <Anchor>a6752226c1a2d8c45c7b614ad90fc86fe</Anchor>
    <DeclaredIn>KarplusString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KarplusString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::KarplusString</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_karplus_string.html</Path>
    <Anchor>a42fe4938eaca87dc0ecefd38c0ed067e</Anchor>
    <DeclaredIn>KarplusString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::KarplusString</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_karplus_string.html</Path>
    <Anchor>ae14b3055b5a65e463cf7269b1a981652</Anchor>
    <DeclaredIn>KarplusString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::KarplusString</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_karplus_string.html</Path>
    <Anchor>a1364bea5ed09d61c93a1450f3afbb316</Anchor>
    <Abstract>reset internal buffers to re-pluck the string. </Abstract>
    <DeclaredIn>KarplusString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::KarplusString</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_karplus_string.html</Path>
    <Anchor>ab7aa36a55da22180df5a4b2465b54c8b</Anchor>
    <Abstract>print debugging info. </Abstract>
    <DeclaredIn>KarplusString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::KarplusString</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_karplus_string.html</Path>
    <Anchor>a8833e50cbb2aca1a3ebcd98d9b901582</Anchor>
    <Abstract>The mono_next_buffer method does all the work. </Abstract>
    <DeclaredIn>KarplusString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::KarplusString</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_karplus_string.html</Path>
    <Anchor>a6a2d79cc3396b42b592fd8848857a52e</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>KarplusString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDelayLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::KarplusString</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_karplus_string.html</Path>
    <Anchor>aee6ce1616a37477ccdfe7c706dd7c07b</Anchor>
    <Abstract>the delay line (just a buffer, not a RingBuffer) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initDelayLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::KarplusString</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_karplus_string.html</Path>
    <Anchor>a4c7b8b5594baff83fe8baa7a881a8809</Anchor>
    <Abstract>function to initialize the delay line </Abstract>
    <DeclaredIn>KarplusString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::KarplusString</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_karplus_string.html</Path>
    <Anchor>a6e65a22674754340f00d2cf1bb1d33c8</Anchor>
    <Abstract>current index in the delay line </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDelayLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::KarplusString</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_karplus_string.html</Path>
    <Anchor>a7c71805cea09551bb1784d890d8fbc36</Anchor>
    <Abstract>allocated size of the delay line </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::KarplusString</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_karplus_string.html</Path>
    <Anchor>a45b163efc40df8fc4dae9e56aea7bf62</Anchor>
    <Abstract>energy left in buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::KarplusString</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_karplus_string.html</Path>
    <Anchor>ac46d2919d728867ed3902bc702bc789c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::LineSegment</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Abstract>A linearly interpolated segment – this has start and end values, and a duration (in seconds)...</Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LineSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>a4c2da2ff2d3979f28bfcb24948a8e6a9</Anchor>
    <Abstract>empty constructor </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LineSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>af880bee4fa40835a11e9a44003a1ed7b</Anchor>
    <Abstract>Declare dur in sec, start, stop values. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>ad31f382962ea59762d614a8142fd0dad</Anchor>
    <Abstract>Accessors. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>a3b4e922a0eb5ee49d5705c2c56e3c5a7</Anchor>
    <Abstract>Returns the target value of the line segment. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>a32662f8238cb157ac28df8a7d4310ac1</Anchor>
    <Abstract>Returns the total time it will take to get from start to end value. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>ac7fdc454f9da01d8601f22531678ac90</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>ae7fb098fbeba6271272e24774723f198</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>aecab83e3bae272392bd7f494cf5356c7</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>aaaf7f4cc6fd0168225deb15ece8628ff</Anchor>
    <Abstract>Overloaded to accept either float or unsigned. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>a364052bc73fca73916edb1c4c3fab23f</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>a2d74218ca1aff3227b06e40f9c4b07d5</Anchor>
    <Abstract>Sets the interpolation kind (linear or exponential) </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>a417f4c070d702d61f67d2f78780d9d14</Anchor>
    <Abstract>next buffer interpolator </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>a975a24cb71c11e0337aa7137007e0464</Anchor>
    <Abstract>handy version given Scalable port pointers </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>a83ca01b197ecb8c6d727db3c264247c0</Anchor>
    <Abstract>reset counters </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>af5230efb6dfc5db6623bb1470cc4b5c4</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>a5b8095d18306f04a02a183cd3d47eacc</Anchor>
    <Abstract>reset internal time to restart envelope </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>a63cff85edfb9ecaad0d738c530fcd384</Anchor>
    <Abstract>Start value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>a615d8269820ea4666d4d271412124b74</Anchor>
    <Abstract>Ending value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>af6c13ca49f38baa67a3217843c625e68</Anchor>
    <Abstract>Length of the line segment (IN SECONDS) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>aee4521de5e99eee7153d8ffae7b02070</Anchor>
    <Abstract>How am I to calculate the values from start to end values of the line. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>a9ee6f1db6bf28c2d65e508178d022a86</Anchor>
    <Abstract>Internal book-keeping. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::LineSegment</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_line_segment.html</Path>
    <Anchor>aa0c53edc87ae8365126f875c147008de</Anchor>
    <Abstract>cache </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::LogicError</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::LogicError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_logic_error.html</Path>
    <Abstract>Impossible operation. </Abstract>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LogicError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LogicError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_logic_error.html</Path>
    <Anchor>acbe532e31b7c05c38b6d6dd98eed7b36</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>aaa80baf48d8b2a9af6d5bce2d1b27388</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>a82f57e285f07ca934823977ed3d364e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Lorenz</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Lorenz</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_lorenz.html</Path>
    <Abstract>Lorenz chaotic oscillator = this plays one variable of the Lorenz Strange Attractor between +1 and -1...</Abstract>
    <DeclaredIn>Lorenz.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lorenz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Lorenz</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_lorenz.html</Path>
    <Anchor>a833bc3340656482d156cf1cd17da5b16</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Lorenz.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Lorenz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Lorenz</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_lorenz.html</Path>
    <Anchor>a41956577a399765a41dcec1007cce2a3</Anchor>
    <DeclaredIn>Lorenz.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Lorenz</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_lorenz.html</Path>
    <Anchor>aa33dec4393c49f0fc64b090eb89872e3</Anchor>
    <Abstract>Accessors. </Abstract>
    <DeclaredIn>Lorenz.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Lorenz</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_lorenz.html</Path>
    <Anchor>a7056340e665eeecd91c80ba6c4cecf26</Anchor>
    <DeclaredIn>Lorenz.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>z</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Lorenz</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_lorenz.html</Path>
    <Anchor>a87220bb3635351615b5797c84c7bd33c</Anchor>
    <DeclaredIn>Lorenz.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Lorenz</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_lorenz.html</Path>
    <Anchor>aa2808c06d2f1e915921d522ddbd3952f</Anchor>
    <DeclaredIn>Lorenz.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Lorenz</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_lorenz.html</Path>
    <Anchor>a0e8dcbd2e215f675efa49d1cb7ef22d8</Anchor>
    <DeclaredIn>Lorenz.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Lorenz</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_lorenz.html</Path>
    <Anchor>a4e760ab4a74f738b1d357d0ea51a3021</Anchor>
    <DeclaredIn>Lorenz.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Lorenz</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_lorenz.html</Path>
    <Anchor>a8602847c4d0257c79601a02eea1f4ec1</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>Lorenz.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Lorenz</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_lorenz.html</Path>
    <Anchor>ac3b75502e638b7735511147d94908256</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Lorenz.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Lorenz</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_lorenz.html</Path>
    <Anchor>a07e3e30159fe72873043ac9a7901b04d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Lorenz</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_lorenz.html</Path>
    <Anchor>a5d0ac9bacd187daeeafe7ce3d4c540a5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Lorenz</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_lorenz.html</Path>
    <Anchor>a6f7ea213ef7d6513bed78ddbdb001fc1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::LSoundFile</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Abstract>Here&amp;#39;s the sound file reader/writer class; it assumes libSndFile and interleaved sample buffers...</Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LSoundFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>a0ceaee5c1f2008d701a48e04e6292ae3</Anchor>
    <Abstract>Constructor with defaults. </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LSoundFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>af23847e42c8382beb53340b61eca496b</Anchor>
    <Abstract>this version sets maxSize and always reads </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LSoundFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>ac5a5fd9bde2b1a10ebf57e4a83472288</Anchor>
    <Abstract>Copy constructor – shares sample buffer. </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~LSoundFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>ad1bd9f8234e477e9d52bc4aa3393053d</Anchor>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>format</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>a43b88c136e944a93870599abbb0adf69</Anchor>
    <Abstract>get format </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openForRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>a02b5e913e6dc9528f2a8094d40c57e9c</Anchor>
    <Abstract>open file and get stats Open a file for write. Default values are some common format. </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openForWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>a6c0bbf7e39d5839f36a2560c62a6b0ba</Anchor>
    <Abstract>Open a file for writing. Default values are some common format. </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openForReadWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>ac1b5ca663c6f28e865ecd08130811e4d</Anchor>
    <Abstract>open r/w </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>ab541420b6d0133646dc5e7c344c49e0b</Anchor>
    <Abstract>close file seek to some position </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seekTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>aec21910d32f17e20a97550328a5bfba5</Anchor>
    <Abstract>seek to some position relative to &quot;whence&quot; </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readBufferFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>a0e8a414da53437d4f8475fc234a61417</Anchor>
    <Abstract>read a buffer from the file (possibly all of it) </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>a9b139e4db3c1e792b50ae3a41e3a675c</Anchor>
    <Abstract>UGen operations. </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>a5cd51f1895c9704af2e1cfe785dbef04</Anchor>
    <Abstract>write a buffer of data into the file </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>a54afd5048f003c5f6bb757343a52fe8b</Anchor>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>ae1eccebc91d2a82481f400bdfcbbab2b</Anchor>
    <Abstract>answer if file has all of its samples in RAM </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>aeccb895c9fde26c1ebcca54bfbe17870</Anchor>
    <Abstract>answer if file has X samples in RAM </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sfInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>a91aa2db43ca70b7a9029ffeb90831d7e</Anchor>
    <Abstract>libsndfile sf-info struct </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sndFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>aaffbeac44ecfc66de658ca89efb8fc03</Anchor>
    <Abstract>libsndfile handle </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seekTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a91a9c0a87cfadef30c85c87036e0c44d</Anchor>
    <Abstract>read a buffer from the file (possibly all of it) </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>abf76877b80d84a924c71cfe057c589c9</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a81eea91b52e169befa68a5a29d3da112</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a05e5efd5f4d9e3b8f3d5b232f9a3837f</Anchor>
    <Abstract>accessors </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ac956abb9c44bb61ab9ca4f523ae4b0ba</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>durationInSecs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>abb47af4a2d3f91e54fc2f41f484df3e5</Anchor>
    <Abstract>number of frames in the sound file </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sampleSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a761cf27eb474b6b59da6adbf7a39c020</Anchor>
    <Abstract>get the bytes-per-sample </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a474309df902bbd2fa3a40ef349e0beda</Anchor>
    <Abstract>r/w mode </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1712da90ed0fb0f942a200efcd082e39</Anchor>
    <Abstract>size in frames of cached portion </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mergeToMono</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a8c7c51e6f47210ce696acab098407de5</Anchor>
    <Abstract>average all the channels to mono </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setToEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad31170b93471b41f3631443778f3c70e</Anchor>
    <Abstract>set to end position </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a793fb9e9842dec545a2103beade94d71</Anchor>
    <Abstract>reset to start </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aff53ca4f2f799ec07ec8f97d1943b30c</Anchor>
    <Abstract>free the file cache </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad6d37c628d7f8c76774a173263959829</Anchor>
    <Abstract>perform sample-rate conversion </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a27c2487b064c91a585a7dac86bceaa3c</Anchor>
    <Abstract>answer if a valid file/buffer </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aa41bac4065f4d8337fcc4b8308ff3a6d</Anchor>
    <Abstract>answer if currently active </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>af8f20cc5a2e3ac0b7e47ec88a4a29453</Anchor>
    <Abstract>set file name path string </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a44834d40244991303c33c38a9232b803</Anchor>
    <Abstract>file name </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ade0cbeee4b4a0ce45b60f85fb673b20d</Anchor>
    <Abstract>log snd file props </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a6a438a4de00c32fe6341b01e757df41b</Anchor>
    <Abstract>get/set start frame </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a19f8496091b356079b3b3c88e2a298ad</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStartSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a2d85c9ddaa6405e7a868ff81ff5db9c1</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStartRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ae536aee3c744609f11f2ab001f47914f</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad2e6efb607e1238475634aa59b29da73</Anchor>
    <Abstract>get/set stop frame </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a92bffa7ebfc3785cea9a150326c79625</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStopSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a4b942b2ab31ba7548f297533feb8cd77</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStopRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aedba2ef6ff53cb9a8b6b248e57cbff73</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a703520f519b9784a6940143586ed9ff8</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a7c317a27143e0b5667a668f9dcd9648b</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playbackRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1cbaa98caa45514e8282593b04e97508</Anchor>
    <Abstract>playback rate (pitch ratio) </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a00abea2b87cb5fef1b67e13e2b1fc72c</Anchor>
    <Abstract>set the receiver&amp;#39;s playback rate (pitch ratio) </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1da9c9d3913f1b3c98ca26dc7220c718</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLooping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad8a32faddd42359d9273fff4307f9ea1</Anchor>
    <Abstract>get/set looping state </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIsLooping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a0d80781863eb728a43f930bd2f32e28d</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWaveform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a3f201809be66f80f23b50161f0deaed9</Anchor>
    <Abstract>plug in waveforms set the interpolation flag </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a246e451b9ccaa15d818c4417adfb7cf9</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a28b5bad4f2349398de3c6d09304fef4c</Anchor>
    <Abstract>reset-to-zero </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openSndfile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>ae09b4adf641f4fd608019e2a93f7aeb4</Anchor>
    <Abstract>Factory methods. </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openSndfile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>a58365dbbf3afa741ff47296cd9e059cb</Anchor>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSndfileName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a939c5b11014fdda7d241f4fe95a2a8d8</Anchor>
    <Abstract>Answer whether the given name looks like a snd file. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sndfileNameType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ac750acef6fba96a989e3f1749b0bbb45</Anchor>
    <Abstract>Answer the snd file type. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mimeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a08cb1ee054382a06d925d2328ce32286</Anchor>
    <Abstract>Answer the MIME type based on the file name. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ae273a3d1c120209e883198e006b12b52</Anchor>
    <Abstract>the ID3 tags properties </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a1d37712b7fd137dab432d733003eca71</Anchor>
    <Abstract>whether/how I should interpolate between samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWavetable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a926e9d03bb39119f4c0992143cb3baaa</Anchor>
    <Abstract>the stored wave form </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a323673b284a59f017163a9d4bac3e51b</Anchor>
    <Abstract>where I currently am in the buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mActualFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a473db0a6a9460c7c4f162648e19f8421</Anchor>
    <Abstract>where I actually am in the buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromSndfile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>a6123b253d8ed0c65c2d177c289080c14</Anchor>
    <Abstract>read SF header </Abstract>
    <DeclaredIn>SoundFileL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Writeable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_writeable.html</Path>
    <Anchor>ac402dc4b6151052465f5ca9c4554b7a0</Anchor>
    <Abstract>write to the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a1a86a2b513d543b7ea804039c55eaded</Anchor>
    <Abstract>allocate buffer lazily </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aa326942115ced26aa160a14a48d424e0</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad7f7cb3958081adfaabc0e7fd6c4676a</Anchor>
    <Abstract>read the ID3 or other tags. Returns true if able to read them. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillSine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a983c39e543ebf3781e4b99bb7573eb05</Anchor>
    <Abstract>fill the shared wavetable with 1 cycle of a sine wave </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSFInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>a338219c506f39f6e215a68c7e82e1fce</Anchor>
    <Abstract>libsndfile sf-info struct </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSndfile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>a8ba07caf4a3c9a9040484d9fa306f394</Anchor>
    <Abstract>libsndfile handle </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterleaver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>a09d115a32b6814a211e4e60c9539dcb9</Anchor>
    <Abstract>File IO interleaver/deinterleaver. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMaxDurInSecs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::LSoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_l_sound_file.html</Path>
    <Anchor>a16f3dc7a556017735c6f569ac5b132dc</Anchor>
    <Abstract>max size to read from file. In seconds so it can deal with varying sample rates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a95dafe980f08f7b9560c1cae87b6dd3d</Anchor>
    <Abstract>file name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a449d4217d42485410d7f7749b2bc2278</Anchor>
    <Abstract>r/w mode </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a56b5142eb3308123411125930dbc8251</Anchor>
    <Abstract>sf format </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aeed69e1885231279589ec6a19ec80429</Anchor>
    <Abstract>is my file valid? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsLooping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a0689b61b407433cc008f0b57086ae030</Anchor>
    <Abstract>am i looping start-stop? </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ad23941ac7c045ee53d91d36b0780413e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a4c6d2508c69701c8348119dbf409668d</Anchor>
    <Abstract>starting/ending frames (or -1 if not used) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>aa49de507d9c70a82214f838bd0ec1cce</Anchor>
    <Abstract>sample rate ratio </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>ae675a4778bf49016f165dff612940d95</Anchor>
    <Abstract>sample frames</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBytesPerSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>a0d6ae096275a3456fc86b1f864ff2e67</Anchor>
    <Abstract>the # of bytes per sample </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Abst_SoundFile</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_abst___sound_file.html</Path>
    <Anchor>afe3f27c850929e60f1d63b630e17aef1</Anchor>
    <Abstract>starting frame in file of buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::MemoryError</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::MemoryError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_memory_error.html</Path>
    <Abstract>Malloc failure subclass. </Abstract>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MemoryError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_memory_error.html</Path>
    <Anchor>aad6e37bf074aa1e8c8cc57f60be27492</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>aaa80baf48d8b2a9af6d5bce2d1b27388</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>a82f57e285f07ca934823977ed3d364e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Microphone</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Microphone</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_microphone.html</Path>
    <Abstract>Microphone – copies the input buffer (from the sound driver) to its output. </Abstract>
    <DeclaredIn>Microphone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Microphone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Microphone</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_microphone.html</Path>
    <Anchor>aa3e37554fc8890129d1664e5cccb8aad</Anchor>
    <DeclaredIn>Microphone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Microphone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Microphone</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_microphone.html</Path>
    <Anchor>a94d941641fca5e0f005834d735e4c981</Anchor>
    <DeclaredIn>Microphone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Microphone</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_microphone.html</Path>
    <Anchor>a4de5fcbd6467963bcc104663f884b580</Anchor>
    <Abstract>copy next buffer from cache </Abstract>
    <DeclaredIn>Microphone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Microphone</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_microphone.html</Path>
    <Anchor>a4e6ce54fe04be7cac6f2b85fbbc99d10</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::MIDIIn</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Abstract>MIDIIn class is-a MidiInputCallback too, and an &quot;input-ready&quot; flag. </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MIDIIn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a97fb21bea4d273f1a57c432842b0bffd</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a1d9ecfc2d50bdd5e2da7b884336c0f46</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>abcc1410375feb03ef37de7ddef6bdbf8</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a8ba822aedb6ea9aeda0a0be88ce00eb5</Anchor>
    <Abstract>open a device </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>poll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a92e347b41deb72173a2a69991482ae0f</Anchor>
    <Abstract>poll returns a bool (really quickly) </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>ae1bb94249beb6171b74a9223b0f9fe7d</Anchor>
    <Abstract>step to next event or reset flag </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dumpMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a3237249466c30f7d05e1410fe50d2998</Anchor>
    <Abstract>print current msg </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a031e2567d91191e74975628a68021110</Anchor>
    <Abstract>start MIDI stream </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>abd528b35a3d42870461d6ceffb151ec8</Anchor>
    <Abstract>stop MIDI stream </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a7cfc0e10f19131dd32d3238066fee55c</Anchor>
    <Abstract>evaluate answers the message command </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleIncomingMidiMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a69f44f6e6eec6d24ccabec28f003d7a1</Anchor>
    <Abstract>implement inherited MidiInputCallback </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MIDIIn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a26908a09406be5842ed098c537289652</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buffer_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>ab088f60582fd6c40e345e13995dd842a</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_buffer_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a80823add138d5ef3ad4781c6522d1430</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a64f692349390186630c441a12bb37d63</Anchor>
    <Abstract>method for opening the default stream. </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a8b6021be9c9c9c980773d2ef8cf8390c</Anchor>
    <Abstract>open a device </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>poll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a25e3ce3223e420f2a5cd34983ef3a33d</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a934e90eede11af4d4e7a378f13c3f625</Anchor>
    <Abstract>generic read method. gets MIDI message and store it in mBuffer </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_interpret</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a0294209d8c4811467bceded7a5d2b498</Anchor>
    <Abstract>read method and sets internal flag for which message was received </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a8bcda5205d6a10980380510a40286544</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump_buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>afa4204ac75823018a5e2ed9c05096e55</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a63b3ca84edd106e64b3dd3315ec3e67f</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump_CSL_MIDIMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a1c57db7a017f9e7b89fc981d775e1285</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_NoteOn_received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a30918669772cd83325ecc2785b064be9</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_NoteOff_received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a0af2ecad3b573c934b2990755d006045</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_PolyTouch_received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>ab5703cd2731f0c3f4e6505d88b987803</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_ControlChange_received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a9a075432e21ab0111ce6ecb452e45ba3</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_ProgramChange_received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a16c62fdf49931c06544a473ec82e5757</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_Aftertouch_received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>ac5bb9ad6b195047e938f38d0fcaea8e1</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_PitchWheel_received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a68fb901e8569f0c74aa0d2668db9e572</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_SysEX_received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a21b6ffb13e127e7f98452cab527e2e6d</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_note</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>afe862fcc98e3acb08a0ee0bf6cd51626</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_velocity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a71ed7ce90d26d134e50949b0991dc3de</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_PolyAftertouch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a3e6d6b2de86a7a34b345f55aace76d2d</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_ControlChange_function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>adb22d694fa21476de0a0003c1ed653aa</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_ControlChange_value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>abe4973b073b0b932529bb3182475db68</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_ProgramNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>ae392c29121cb06f226e99f873cceb4a7</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_Aftertouch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>ac71b8236480e860c1f80c6d5f70172bb</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_PitchWheel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>aba963319035caf15d3a18d07a8582257</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_frequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a94c360fc7f36bc527dd0b36f0c42e575</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_velocity_float</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>af0109f67088f93657d38c3d1ea81af57</Anchor>
    <Abstract>has range of [0.0 1.0] mapped to [0 127] </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a8fafd54740f20097d75c35cd98bf45b4</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filter_active_sensing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>ada587616609d88b71040d248ccb507ac</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filter_sysex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a426deb4f968760d5b3f47f1bed900725</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filter_clock_msg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a2bc4adaefcf5bfba9e16b04a8d503fab</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a9ae1dc20aee915b46003581ec0fe2490</Anchor>
    <Abstract>true if MIDI stream is opened. </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>acd0de4feb65c696ebd5b16d0c0333e3d</Anchor>
    <Abstract>closing MIDI stream </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a4b30d021863639779ba4dd4e61d563b3</Anchor>
    <Abstract>closing MIDI stream </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ad10f437721c124d7ec72dc1b08628eb9</Anchor>
    <Abstract>stop MIDI stream </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dumpBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a0133196d95732e03439d98a77c1abcdd</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a330f6c52206a5e104bd2071176caca79</Anchor>
    <Abstract>can&amp;#39;t open the abstract class </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump_device_info</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a78dab4b02fb36623695a4d762e836c4d</Anchor>
    <Abstract>printing device info for all devices. </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump_count_devices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a420af4433ebcbb9bfa44955b9fd56ac3</Anchor>
    <Abstract>printing total number of devices available </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_devices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>aff2cd745ad1e114cfda0ff74935f7252</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_default_input_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a7e454569efbabb1f65ed4a89cc20ba67</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_default_output_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ad6e212241cb02502982fa917d64d21f7</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_device_info</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a966a81177fe8b695f1624cf6c2badb73</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countDevices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ab9f9ce2753568c03f987a21990676887</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dumpDevices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ac3474f2d5a13326d3135f37eda6544b3</Anchor>
    <Abstract>printing device info for all devices. </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDevice</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>aa7ff01fff26b99e1c7c408afbefeb873</Anchor>
    <Abstract>my device ptr </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a687c0f1d0d63ca9e6f4a6052fdb9523a</Anchor>
    <Abstract>the time I was started </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDeviceID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a845a2c1e8996a685532cdc48567d6cdf</Anchor>
    <Abstract>device ID which will/is opened. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMsg2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a221a47c17a82866d73ba7640fdad7db0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>abb54f69299a0349947e3d8504fd820e9</Anchor>
    <Abstract>error handler </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a6269d4682f784fba906aae7c33ca72dc</Anchor>
    <Abstract>copy csl::CMIDIMessage &lt;–&gt; juce::MidiMessage </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a754833c6bd7a8fdd888af9f5c00ea85c</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a765480a5eefd493022f21d0cb6e2d58c</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle_error</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a8854d73a48b6ead51d02eadb139b0f11</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a706932262e456bc5e66646501890b407</Anchor>
    <Abstract>fundamental members </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFilterFlag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a1dd454dc6e33896b67e036b9e27b1dda</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>af9dcefac6f64b920f286d89079e601e7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>afa767889b88dd6a9425b4d3e9d45ff04</Anchor>
    <Abstract>buffer which gets filled by read() </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIn</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_in.html</Path>
    <Anchor>a77b11401723c23c1b433b2a977454ecd</Anchor>
    <Abstract>length </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDeviceID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ad3352ee8a45f4339ff48dc488a705ae8</Anchor>
    <Abstract>device ID which will/is opened. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mJMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a7ab3726536bf27c703cda111a0fdc396</Anchor>
    <Abstract>JUCE-format message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>aa01692a789208139cb0ca65e8bd29691</Anchor>
    <Abstract>instance status indicators </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMIDIStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a8f82527cba65057df9637b04fffc9e37</Anchor>
    <Abstract>opened stream </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a130a9a22388d4ef8350092373c793a1e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a7432bac15bf86890c1b04de3a714f16d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsInitialized</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a32f71c5549a139dd996337e91b813469</Anchor>
    <Abstract>&lt; static flags to keep track of driver state </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInstantiated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a769a20e74126b0d67d59bcef967bcadc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsPortTimeStarted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a03250a146c06144489833f340ae98e7f</Anchor>
    <Abstract>status indicators </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::MIDIIO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Abstract>MIDIIO class: superclass of in and out; has a message buffer and current messages It&amp;#39;s a model so you...</Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MIDIIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a38b4860cccc28e7a345b6b16d2b0b46f</Anchor>
    <Abstract>&lt; It&amp;#39;s a model &amp; sends itself &quot;changed&quot; </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MIDIIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a68391954dec77c050f92d47cdf218882</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>af36bb103bf0d0a4244704c187fc55239</Anchor>
    <Abstract>open the abstract </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>acedc3f3a88c877344d1d519fd397a0ea</Anchor>
    <Abstract>open a device </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a9ae1dc20aee915b46003581ec0fe2490</Anchor>
    <Abstract>true if MIDI stream is opened. </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>acd0de4feb65c696ebd5b16d0c0333e3d</Anchor>
    <Abstract>closing MIDI stream </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a6e4993eb7a26db6a997ae1616887089f</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>aeee1dd1850f5124c53a7c341e26a2829</Anchor>
    <Abstract>start MIDI stream </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ad10f437721c124d7ec72dc1b08628eb9</Anchor>
    <Abstract>stop MIDI stream </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dumpBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a0133196d95732e03439d98a77c1abcdd</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MIDIIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a9706a72be2b108b254f5606738a03427</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MIDIIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ae5e806bf3fa67d43522e01acf3764ef1</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ac6ae676faac26b2bc16fdc0700835f9a</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a330f6c52206a5e104bd2071176caca79</Anchor>
    <Abstract>can&amp;#39;t open the abstract class </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a4b30d021863639779ba4dd4e61d563b3</Anchor>
    <Abstract>closing MIDI stream </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump_device_info</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a78dab4b02fb36623695a4d762e836c4d</Anchor>
    <Abstract>printing device info for all devices. </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump_count_devices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a420af4433ebcbb9bfa44955b9fd56ac3</Anchor>
    <Abstract>printing total number of devices available </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_devices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>aff2cd745ad1e114cfda0ff74935f7252</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_default_input_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a7e454569efbabb1f65ed4a89cc20ba67</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_default_output_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ad6e212241cb02502982fa917d64d21f7</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_device_info</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a966a81177fe8b695f1624cf6c2badb73</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countDevices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ab9f9ce2753568c03f987a21990676887</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dumpDevices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ac3474f2d5a13326d3135f37eda6544b3</Anchor>
    <Abstract>printing device info for all devices. </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDeviceID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a845a2c1e8996a685532cdc48567d6cdf</Anchor>
    <Abstract>device ID which will/is opened. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a7c3c50337168789899fb443a83a7b716</Anchor>
    <Abstract>current message (its flags determine the port state) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMsg2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a221a47c17a82866d73ba7640fdad7db0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ad98c3e56820420badffa6363fa37b7f3</Anchor>
    <Abstract>I/O buffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>abb54f69299a0349947e3d8504fd820e9</Anchor>
    <Abstract>error handler </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a6269d4682f784fba906aae7c33ca72dc</Anchor>
    <Abstract>copy csl::CMIDIMessage &lt;–&gt; juce::MidiMessage </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a754833c6bd7a8fdd888af9f5c00ea85c</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a765480a5eefd493022f21d0cb6e2d58c</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle_error</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a8854d73a48b6ead51d02eadb139b0f11</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mJMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a7ab3726536bf27c703cda111a0fdc396</Anchor>
    <Abstract>JUCE-format message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>aa01692a789208139cb0ca65e8bd29691</Anchor>
    <Abstract>instance status indicators </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a20c94b283e208aef19d614f78bc2c074</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFilterFlag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a187eb9e60d696916119f552415e0533c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMIDIStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a8f82527cba65057df9637b04fffc9e37</Anchor>
    <Abstract>opened stream </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDeviceID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ad3352ee8a45f4339ff48dc488a705ae8</Anchor>
    <Abstract>device ID which will/is opened. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a130a9a22388d4ef8350092373c793a1e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a7432bac15bf86890c1b04de3a714f16d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsInitialized</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a32f71c5549a139dd996337e91b813469</Anchor>
    <Abstract>&lt; static flags to keep track of driver state </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInstantiated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a769a20e74126b0d67d59bcef967bcadc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsPortTimeStarted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a03250a146c06144489833f340ae98e7f</Anchor>
    <Abstract>status indicators </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::MIDIOut</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Abstract>MIDIOut class write msgs out to a device (or file) </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MIDIOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a63a7963ddbeb9e86a39d03bffbb04b21</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MIDIOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>ac83d56c986eb3b5af3e4fbd72557bed4</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a10956e94f0bd42b62d6e53c6f1b0713f</Anchor>
    <Abstract>open a device </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a9c3bf99f2ce48632b5b48c40b7261ccb</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeNoteOn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a679b8e608d2643b449898c4a6e0de67b</Anchor>
    <Abstract>MIDINote#, [0, 127]. </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeNoteOn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a12e147d12bc91f8da5a16c1609c9f2ee</Anchor>
    <Abstract>[Hz], [0.0 1.0]; </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeNoteOff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>af50426b556ee3f75a093b47e979d4a03</Anchor>
    <Abstract>MIDINote#, [0, 127]. </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeNoteOff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>abd0fa62ddeee6090aa47201846513743</Anchor>
    <Abstract>[Hz], [0.0 1.0]; </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writePolyTouch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a0a9b818f2d54f4075238c3e22772081f</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeControlChange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a5874f6083b1f7d3fae3897cdb5959b5c</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeProgramChange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a9650fb97e050ad1d9e566e90f7ad2c39</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeAftertouch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a81b2042669aef3108b3dfb12ddaa27ef</Anchor>
    <Abstract>[0, 127] </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writePitchWheel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>af5dd61ae6eab37425b8334d9eac74516</Anchor>
    <Abstract>[0, 16384] </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSysEX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a44a7b219641443ac4770fc73101ce3f8</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MIDIOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>ac9dd2b84391454f403230be6107d3d3c</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MIDIOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a3c2bc84abcc4ef256e68de2c7d13e6e2</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buffer_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>ab2ff500505f07fc2565c612791814170</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_buffer_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a67bde7ab01d351ceb98d2e5e8a1c027b</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>latency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a300d5ebb44de8f8b69c78a27e2a396f6</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_latency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a534638bc6b95bf716efc9bb118dfbddb</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>ab77a228a9de4e43a6c4c0fccc7026469</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>aba55283d40a98f6db482c095f6e88a3a</Anchor>
    <Abstract>open a device </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>ab633d77a424352332bb355eb580b457b</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>aacc1302a707e730aa7445b649f1e2b51</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a4a0692c22ab0c6bc950f6f0909f193c2</Anchor>
    <Abstract>thin wrapper for Pm_Write </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_short</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a5718af16a94cdc72ac4ef9cdf7a8a29a</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_SysEX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a2820a0c814d7e0986ba6b7a1dae905c1</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_NoteOn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a5de20d0a5ee5e42dcdde64b9fce1b8cc</Anchor>
    <Abstract>convenience method for each MIDI messages writes directly and doesn&amp;#39;t use member mMsg for temporal st...</Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_NoteOn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a3bcef0f40cb115eabf8749be4a873d0d</Anchor>
    <Abstract>[Hz], [0.0 1.0]; </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_NoteOff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a5454f8c5056290b6bcaf104639b8feec</Anchor>
    <Abstract>MIDINote#, [0, 127]. </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_NoteOff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a41e2e778691da6c8e5429a146af13d53</Anchor>
    <Abstract>[Hz], [0.0 1.0]; </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_PolyTouch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a53ed4afc8116f47111967dbc89aecc1c</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_ControlChange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a84966d0f374b6ef09d491b420bae50f5</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_ProgramChange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>ae342b86eca02b6fd73a34ae9916c02bb</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_Aftertouch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a780c311912fb7d30f497529766920983</Anchor>
    <Abstract>[0, 127] </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write_PitchWheel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>ac2bdc58850f9ae4ebdd5373fc21b92c3</Anchor>
    <Abstract>[0, 16384] </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a9ae1dc20aee915b46003581ec0fe2490</Anchor>
    <Abstract>true if MIDI stream is opened. </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>acd0de4feb65c696ebd5b16d0c0333e3d</Anchor>
    <Abstract>closing MIDI stream </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a4b30d021863639779ba4dd4e61d563b3</Anchor>
    <Abstract>closing MIDI stream </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a6e4993eb7a26db6a997ae1616887089f</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>aeee1dd1850f5124c53a7c341e26a2829</Anchor>
    <Abstract>start MIDI stream </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ad10f437721c124d7ec72dc1b08628eb9</Anchor>
    <Abstract>stop MIDI stream </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dumpBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a0133196d95732e03439d98a77c1abcdd</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a330f6c52206a5e104bd2071176caca79</Anchor>
    <Abstract>can&amp;#39;t open the abstract class </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump_device_info</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a78dab4b02fb36623695a4d762e836c4d</Anchor>
    <Abstract>printing device info for all devices. </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump_count_devices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a420af4433ebcbb9bfa44955b9fd56ac3</Anchor>
    <Abstract>printing total number of devices available </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_devices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>aff2cd745ad1e114cfda0ff74935f7252</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_default_input_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a7e454569efbabb1f65ed4a89cc20ba67</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_default_output_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ad6e212241cb02502982fa917d64d21f7</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_device_info</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a966a81177fe8b695f1624cf6c2badb73</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countDevices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ab9f9ce2753568c03f987a21990676887</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dumpDevices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ac3474f2d5a13326d3135f37eda6544b3</Anchor>
    <Abstract>printing device info for all devices. </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>aeb0dc6abce5436c6cc49c9cc315196cc</Anchor>
    <Abstract>the juce midi output is public </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDeviceID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a845a2c1e8996a685532cdc48567d6cdf</Anchor>
    <Abstract>device ID which will/is opened. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMsg2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a221a47c17a82866d73ba7640fdad7db0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ad98c3e56820420badffa6363fa37b7f3</Anchor>
    <Abstract>I/O buffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>abb54f69299a0349947e3d8504fd820e9</Anchor>
    <Abstract>error handler </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a6269d4682f784fba906aae7c33ca72dc</Anchor>
    <Abstract>copy csl::CMIDIMessage &lt;–&gt; juce::MidiMessage </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a754833c6bd7a8fdd888af9f5c00ea85c</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a765480a5eefd493022f21d0cb6e2d58c</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle_error</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a8854d73a48b6ead51d02eadb139b0f11</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>ad600f10fa2ec0b9c6d8663940c766865</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>ada3b027269100bcc0a4e71bffc469c41</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_out.html</Path>
    <Anchor>a68899d5509cc79cb72686236923eb831</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDeviceID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ad3352ee8a45f4339ff48dc488a705ae8</Anchor>
    <Abstract>device ID which will/is opened. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mJMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a7ab3726536bf27c703cda111a0fdc396</Anchor>
    <Abstract>JUCE-format message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>aa01692a789208139cb0ca65e8bd29691</Anchor>
    <Abstract>instance status indicators </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFilterFlag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a187eb9e60d696916119f552415e0533c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMIDIStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a8f82527cba65057df9637b04fffc9e37</Anchor>
    <Abstract>opened stream </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a130a9a22388d4ef8350092373c793a1e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a7432bac15bf86890c1b04de3a714f16d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsInitialized</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a32f71c5549a139dd996337e91b813469</Anchor>
    <Abstract>&lt; static flags to keep track of driver state </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInstantiated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a769a20e74126b0d67d59bcef967bcadc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsPortTimeStarted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a03250a146c06144489833f340ae98e7f</Anchor>
    <Abstract>status indicators </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::MIDIPlayer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::MIDIPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_player.html</Path>
    <Abstract>MIDI stream/file player. </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MIDIPlayer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_player.html</Path>
    <Anchor>af40e71fbf006b174274064712e69d9a2</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MIDIPlayer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_player.html</Path>
    <Anchor>a4e32e1824cd8e3ccce2d1e023826a668</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MIDIPlayer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_player.html</Path>
    <Anchor>a1f17b463e5fa5e187ac6d62f11570eba</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_player.html</Path>
    <Anchor>af4545c704282c4ca91e25ab10fada9ca</Anchor>
    <Abstract>open a device </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_player.html</Path>
    <Anchor>ac1d2e7a8145211925a862a0f380905db</Anchor>
    <Abstract>open a device (empty method) </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_player.html</Path>
    <Anchor>ae5d4a22d5f5447973832c623a61810a0</Anchor>
    <Abstract>stop playing </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>af36bb103bf0d0a4244704c187fc55239</Anchor>
    <Abstract>open the abstract </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a9ae1dc20aee915b46003581ec0fe2490</Anchor>
    <Abstract>true if MIDI stream is opened. </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>acd0de4feb65c696ebd5b16d0c0333e3d</Anchor>
    <Abstract>closing MIDI stream </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a4b30d021863639779ba4dd4e61d563b3</Anchor>
    <Abstract>closing MIDI stream </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a6e4993eb7a26db6a997ae1616887089f</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ad10f437721c124d7ec72dc1b08628eb9</Anchor>
    <Abstract>stop MIDI stream </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dumpBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a0133196d95732e03439d98a77c1abcdd</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a330f6c52206a5e104bd2071176caca79</Anchor>
    <Abstract>can&amp;#39;t open the abstract class </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump_device_info</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a78dab4b02fb36623695a4d762e836c4d</Anchor>
    <Abstract>printing device info for all devices. </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump_count_devices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a420af4433ebcbb9bfa44955b9fd56ac3</Anchor>
    <Abstract>printing total number of devices available </Abstract>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_devices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>aff2cd745ad1e114cfda0ff74935f7252</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_default_input_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a7e454569efbabb1f65ed4a89cc20ba67</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_default_output_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ad6e212241cb02502982fa917d64d21f7</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_device_info</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a966a81177fe8b695f1624cf6c2badb73</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countDevices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ab9f9ce2753568c03f987a21990676887</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dumpDevices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ac3474f2d5a13326d3135f37eda6544b3</Anchor>
    <Abstract>printing device info for all devices. </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_player.html</Path>
    <Anchor>a9e9179ecfe7d4775118567ea22dfa8a9</Anchor>
    <Abstract>JUCE MIDI file. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTrax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_player.html</Path>
    <Anchor>a1df51312d492fac27070269bd8c59743</Anchor>
    <Abstract>num tracks </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTrak</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_player.html</Path>
    <Anchor>a4f747e7902d42eea921e652fc31b6a4b</Anchor>
    <Abstract>track ptr </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsOn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_player.html</Path>
    <Anchor>a0cd171c34786206897c5f87ecbfab656</Anchor>
    <Abstract>Active flag. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLibrary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_player.html</Path>
    <Anchor>a8c0bbb6463760e1dec29010d61ce316e</Anchor>
    <Abstract>instrument library </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTempoScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_player.html</Path>
    <Anchor>a7ab70f7b958b3c725cb799a9e52c9ee8</Anchor>
    <Abstract>tempo scale (secs/beat / ticks/beat) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDeviceID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a845a2c1e8996a685532cdc48567d6cdf</Anchor>
    <Abstract>device ID which will/is opened. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a7c3c50337168789899fb443a83a7b716</Anchor>
    <Abstract>current message (its flags determine the port state) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMsg2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a221a47c17a82866d73ba7640fdad7db0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ad98c3e56820420badffa6363fa37b7f3</Anchor>
    <Abstract>I/O buffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_player.html</Path>
    <Anchor>a471c8551821f9bb7cf4d0b46dc483fd0</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mergeTrax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIPlayer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_player.html</Path>
    <Anchor>af60f833ea4efd69b8415aad2453e2eca</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>abb54f69299a0349947e3d8504fd820e9</Anchor>
    <Abstract>error handler </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a6269d4682f784fba906aae7c33ca72dc</Anchor>
    <Abstract>copy csl::CMIDIMessage &lt;–&gt; juce::MidiMessage </Abstract>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a754833c6bd7a8fdd888af9f5c00ea85c</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a765480a5eefd493022f21d0cb6e2d58c</Anchor>
    <DeclaredIn>MIDIIOJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle_error</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a8854d73a48b6ead51d02eadb139b0f11</Anchor>
    <DeclaredIn>MIDIIOP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDeviceID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>ad3352ee8a45f4339ff48dc488a705ae8</Anchor>
    <Abstract>device ID which will/is opened. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mJMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a7ab3726536bf27c703cda111a0fdc396</Anchor>
    <Abstract>JUCE-format message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>aa01692a789208139cb0ca65e8bd29691</Anchor>
    <Abstract>instance status indicators </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a20c94b283e208aef19d614f78bc2c074</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFilterFlag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a187eb9e60d696916119f552415e0533c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMIDIStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a8f82527cba65057df9637b04fffc9e37</Anchor>
    <Abstract>opened stream </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a130a9a22388d4ef8350092373c793a1e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a7432bac15bf86890c1b04de3a714f16d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsInitialized</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a32f71c5549a139dd996337e91b813469</Anchor>
    <Abstract>&lt; static flags to keep track of driver state </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInstantiated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a769a20e74126b0d67d59bcef967bcadc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIsPortTimeStarted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::MIDIIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_m_i_d_i_i_o.html</Path>
    <Anchor>a03250a146c06144489833f340ae98e7f</Anchor>
    <Abstract>status indicators </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Mixer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Abstract>Mixer – The n-input m-channel mixer class. </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mixer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>aedb32c0b9d526c8c3565311bab44a0fb</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mixer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a62c79da70ee3e98b9d1e3ba6fd0b2877</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mixer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a51e98de109d4f3c6f2c71dd63cc6db50</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mixer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a71554cb5496d533a86fd5c093ea34568</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Mixer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a85026e8a94b704a13e65445b80fc7821</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a182b2c70e0a8c61f5eb6dcd5770282ee</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a50f84f1be9fef2e743f056049a5cddcc</Anchor>
    <Abstract>list of inputs, arbitrary # of channels </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a0e63d860b410b3b89bcf845bfceab761</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>acfc787d6fcadbb9a4587d360937923b6</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a22ec6fc9e2119f77c039b4399a3c294e</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a6f9481bfdae75a02cd8cf578d24af2fa</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a28c90a90635c8bf36f0dfc3b82bba340</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a59135f4dc1189aa3f5b2f512c70130f9</Anchor>
    <Abstract>number of active inputs </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a476dfdb99d4cf0c9357163ba13f03742</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a5f651bf39ac0be7561599e481a1db237</Anchor>
    <Abstract>set the scale of an input </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a11bd7b16049e672f2c7396c80fa2dd90</Anchor>
    <Abstract>fill the buffer with the next buffer_length of values </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a43347c498cc15b93b29702eea4c87f63</Anchor>
    <Abstract>print info about this instance </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activeSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>ab04ce565f6edf76ca3f4f7ad497662e6</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a8078da1b4d6a65e5916e75793450343e</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocateOpBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a1a7ab5635d8a45670d60cb937567b46b</Anchor>
    <Abstract>allocate the op buffer </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>ab17e6f9baa80122e2e734fb0bba9dcc1</Anchor>
    <Abstract>mixers with inputs are always active </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScaleValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>aa15f37e0686f88512374f19a42ddf3da</Anchor>
    <Abstract>scales of inputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOpBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>a25ad0e71ca094a55c1db08b55924441e</Anchor>
    <Abstract>buffer used for operations, if needed </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasScales</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Mixer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mixer.html</Path>
    <Anchor>aacd0e7e9d4dd4af82c9bab88bdfbe8ce</Anchor>
    <Abstract>set to true if any of the scale values != 1.0 </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Model</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Abstract>The Model/Observable/Subject class; instances of its subclasses should send themselves, this-&gt;changed(some_data); on &quot;relevant&quot; state changes; the code they inherit (from Model) manages updating the list of observer/dependent objects in that they each receive update(some_data); and can access the model-passed data (the model might pass &quot;this&quot;). </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Model</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>ad6a96b8cb27c129057b4184df952c4ca</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Model</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a4734c277c7f1c52c18ae3f357735836c</Anchor>
    <Abstract>constructor </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mObservers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a7eae84da204c58df7053bd0edd9a0ffb</Anchor>
    <Abstract>the private vector of observers </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mObsMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a7111032d259b3bdfdfc6973ac5a0f508</Anchor>
    <Abstract>the private map-by-key of observers </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mHasObservers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a818a0fd0cc7fd034db37ff9e139fe08b</Anchor>
    <Abstract>whether there are any observers (for fast checking) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mHasObserverMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>aae6d958eac6737ac469c4ecde15b438e</Anchor>
    <Abstract>whether there are any observers (for fast checking) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUpdateTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a5d7d7a8f9269dbd6168845588d9ed787</Anchor>
    <Abstract>when I last updated </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a61a2b50117ca402497b0ddf162cac318</Anchor>
    <Abstract>update rate in sec </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Moog</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Abstract>Moog-style resonant VCF class. </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Moog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>a302282d89a307e966031dfb0e95d061c</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Moog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>a0177d396c5b2a49c9d4bccb88e206f5f</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Moog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>a0c2ed6561c7e055376327fb4664a411c</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Moog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>a8b08cb09239b3d6edb5fb6606846f66e</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Moog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>a6ca9f42c2a008e91ae684686c45bcf70</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Moog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>afc21e7e2db5902c658c9259c3050a753</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupCoeffs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>aa4f47cddf720cc339438b7cf7ec7c105</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>a5f8b345451f30da064632258345055a8</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a0025ddcb760ab59042a1b7f1454d7f86</Anchor>
    <Abstract>clears the input/output buffers </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupCoeffs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a005874013140674786666154cf493acf</Anchor>
    <Abstract>to be overloaded by subclasses supply the coefficients directly </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>af498bd7cc09785fb5c1a4c80ac603015</Anchor>
    <Abstract>log information about myself </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ac6cae58dc83261deb85088a3e42beb73</Anchor>
    <Abstract>set the receiver&amp;#39;s frequency to a UGen or a float </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ae1d49bbec872cf00f373df250af154a5</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a330e3b583d58717d2423f888fddb6dbd</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a33b250117a39b2fdda305daa8b472fbd</Anchor>
    <Abstract>set the receiver&amp;#39;s amount to a UGen or a float </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a8d4de20eb83b38c4b85866e226fca39b</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a689e7ff28c2d3336a408965c79674853</Anchor>
    <Abstract>shared initialization function </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>k</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>ab03c9331f5bede25fbeac8369a07d964</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>a2fb1015d74ddcc0539631abb9e127bef</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>r</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>add60689f98a7f7b7753396efc1c74db9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>a96a4530a8597cfc2d71043f8615c7f12</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>oldx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>a675a16165df48f8df88f67f0b48db6b8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>acdd1d22b19a59275a797989805676fcb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>ad3e87f0f6ae06f6e1897b5f6eda7689e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>abc96908170ed825dc31b8da53e8cd4e7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>ab8a119d3fee5a6c91dc6611f260acfaa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>oldy1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>a34752f4d5f7f8d329a1435e1feaed75d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>oldy2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>a4486f6e671c3b60d9abdd4cc4c637cf8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>oldy3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>a8d3ef53acfc7e51aaa86cbd271efe43e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>debugging</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Moog</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_moog.html</Path>
    <Anchor>ac294026c5809c3fb2603fa4e17962e5c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>ae88e176028ac99dbc4fe816289b90dcb</Anchor>
    <Abstract>array of numerator coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mACoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a95b02921293a9ff951107a2568ba7731</Anchor>
    <Abstract>array of denominator coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBNum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>aa7156b0b5d3c8d4f08181325654262b2</Anchor>
    <Abstract>number of coeffs in b </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mANum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>abbd984700c6190e0737d626eed850bf4</Anchor>
    <Abstract>number of coeffs in a </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a5b23dbbb4d7dd347280e188c7ddda873</Anchor>
    <Abstract>arrays of past input and output samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a869ea8dedfde47401e02e4c1944efac3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a95cd99da2071d440280d5b10d74226df</Anchor>
    <Abstract>to keep hold of sample rate for calculating coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::MulOp</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::MulOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mul_op.html</Path>
    <Abstract>MulOp – A BinaryOp that multiplies two UnitGenerators or fixed constants together, sample-by-sample. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MulOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MulOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mul_op.html</Path>
    <Anchor>ac051060c64f8f426ea2666eae64cdba3</Anchor>
    <Abstract>The constructor for dual-UnitGenerator operation. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MulOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MulOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mul_op.html</Path>
    <Anchor>ab81489df47130d6f25ed005bb5f1af0c</Anchor>
    <Abstract>Constructuctor for operating a UnitGenerator and a fixed float. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MulOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MulOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mul_op.html</Path>
    <Anchor>abd28f735ce8a161aeadb776093aefebd</Anchor>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MulOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mul_op.html</Path>
    <Anchor>a76dac8075009fe1018acc66ad5d774bd</Anchor>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::MulOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_mul_op.html</Path>
    <Anchor>a9f299033d30da53606879ea06b19b895</Anchor>
    <Abstract>Returns the next individual frame (for fixed values) </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>aea0c63160ddbde8d930f68bcbe084bfd</Anchor>
    <Abstract>Prints instance info. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOperand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>ad867251b56b221ea0c7bf8cf7dd8016c</Anchor>
    <Abstract>Set the operand from a fixed float. </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>acb0d105256bf40b19e2b63e6b8479dd7</Anchor>
    <Abstract>Is the input fixed or a dynamic UnitGenerator? </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inputIsFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>a0fc33c48cd24c4fbc5f7acc5ba9d9858</Anchor>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operandIsFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>a819c2e5d7ef172cd87ae0ae2778fb0ca</Anchor>
    <Abstract>Is the operand fixed or a dynamic UnitGenerator? </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operandFixedValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::BinaryOp</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_binary_op.html</Path>
    <Anchor>a8f1207331a9be9297c4cd3bee0231321</Anchor>
    <Abstract>Convert the dynamic operand to a fixed sample (if operand is fixed) </Abstract>
    <DeclaredIn>BinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Noise</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Abstract>Abstract Noise class - inherits from UnitGenerator &amp; Scalable, and provides constructors and basic ps...</Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateRandomNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>ad78184bcf531ddf1d31a9f67917e9974</Anchor>
    <Abstract>returns the next pseudo-random number </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateNormalizedRandomNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>ae5559b9425fe665f6a4eafedca44edd2</Anchor>
    <Abstract>returns next pseudo-random normalised to +/- 1.0 </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>a850501c314ea8a1844763247577e72d7</Anchor>
    <Abstract>set the seed integer for the pseudo-random number generators </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>a08d87a30f57e974d8fafcb6c74c932e5</Anchor>
    <Abstract>Tell me more about what is happening. </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Noise</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>a875a47574d1c86c793296b542e7de9f3</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Noise</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>ac26134576ad1f497549aed15fa3cc2aa</Anchor>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Noise</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>a83436af6e05b9445645322d4b56ea3a8</Anchor>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Noise</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>acbc3f34bce49c81afe040b4cfc1be5c9</Anchor>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>af9bce1dd693d6d176308a39b0e6c4b7f</Anchor>
    <Abstract>Destructor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDivisor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>af4d8d76a4dd98374cb14535106e0e54e</Anchor>
    <Abstract>factor to scale ints to +/- 1.0 </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Notch</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Notch</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_notch.html</Path>
    <Abstract>Notch Filter with poles at +-z and complex conjugate zeros at +-omega. </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Notch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Notch</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_notch.html</Path>
    <Anchor>a699192693d837016e6e1a57633a05845</Anchor>
    <Abstract>constructors &amp; destructor </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Notch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Notch</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_notch.html</Path>
    <Anchor>a0c441f66e6a3b196caa8e731f28b1a37</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Notch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Notch</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_notch.html</Path>
    <Anchor>a0da2cfb64690bb09e5250abe027e2f47</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupCoeffs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Notch</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_notch.html</Path>
    <Anchor>a6326e5b66ffdde63aa59adc467876d20</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a0025ddcb760ab59042a1b7f1454d7f86</Anchor>
    <Abstract>clears the input/output buffers </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupCoeffs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a005874013140674786666154cf493acf</Anchor>
    <Abstract>to be overloaded by subclasses supply the coefficients directly </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>aa8026143668464aa692e4cecf3092a59</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>af498bd7cc09785fb5c1a4c80ac603015</Anchor>
    <Abstract>log information about myself </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ac6cae58dc83261deb85088a3e42beb73</Anchor>
    <Abstract>set the receiver&amp;#39;s frequency to a UGen or a float </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>ae1d49bbec872cf00f373df250af154a5</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a330e3b583d58717d2423f888fddb6dbd</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a33b250117a39b2fdda305daa8b472fbd</Anchor>
    <Abstract>set the receiver&amp;#39;s amount to a UGen or a float </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::FrequencyAmount</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_frequency_amount.html</Path>
    <Anchor>a8d4de20eb83b38c4b85866e226fca39b</Anchor>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a689e7ff28c2d3336a408965c79674853</Anchor>
    <Abstract>shared initialization function </Abstract>
    <DeclaredIn>Filters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>ae88e176028ac99dbc4fe816289b90dcb</Anchor>
    <Abstract>array of numerator coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mACoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a95b02921293a9ff951107a2568ba7731</Anchor>
    <Abstract>array of denominator coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBNum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>aa7156b0b5d3c8d4f08181325654262b2</Anchor>
    <Abstract>number of coeffs in b </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mANum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>abbd984700c6190e0737d626eed850bf4</Anchor>
    <Abstract>number of coeffs in a </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a5b23dbbb4d7dd347280e188c7ddda873</Anchor>
    <Abstract>arrays of past input and output samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPrevOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a869ea8dedfde47401e02e4c1944efac3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Filter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_filter.html</Path>
    <Anchor>a95cd99da2071d440280d5b10d74226df</Anchor>
    <Abstract>to keep hold of sample rate for calculating coeffs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::NtoMPanner</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NtoMPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>a5111bfa158b0fd35244a96b027941b46</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NtoMPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>acaa5cb9d26944a95f1ebc55581dd3769</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NtoMPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>a62b1ac9983277ea56331e7605deea640</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NtoMPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>ab45e6eee39c780bd31a01d90fd8be3eb</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NtoMPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>a95f948f8c6939b0a70d772a839e9603e</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NtoMPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>aacb1d64b6ca3683f462815690aa0c653</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init_stereo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>a57874acaa223e7c29ccacf43f5918d62</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init_quad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>ab64bc2279d3d09864a6b41cde128c405</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init_5point1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>a574edfbe4d707138167b32003b182c53</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init_6ch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>a1db5e4a2beff609bfcc773bad9434cc8</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>a87c99778a27013f50a22ec90120019c2</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>a66a4b8572edbd8cfa1e229ac1ac8953c</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>ac76ed9ae8dd9ac90a5d9dabd01c72d2a</Anchor>
    <Abstract>I&amp;#39;m stereo! </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Panner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_panner.html</Path>
    <Anchor>a839b7f87a51bef7bd3864af8f8e7f9a6</Anchor>
    <Abstract>Operations. </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Panner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_panner.html</Path>
    <Anchor>a667bf8f61b6fec84a6318fdd49a95c92</Anchor>
    <Abstract>set the position to a float </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Panner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_panner.html</Path>
    <Anchor>a7dd3a8b1b83159d6bbb5278eda92550c</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initSpeakers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>a1f1a2cae3ede003221c421c1b5b684c7</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInCh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>a3f339db0541e679bf8a5dbf49cace9c0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutCh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>a485dd3714acdbae65a12a7dc0fe6205d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>a8fc43854ad6623de770188ffb414c55b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>a2fe749842b704417769c6f1838616066</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOpBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::NtoMPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_nto_m_panner.html</Path>
    <Anchor>afb6173a248a29a74a3f9925aa0b864de</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::NullIO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Abstract>NullIO is an IO that uses a thread and a timer to call its graph&amp;#39;s nextBuffer(); it doesn&amp;#39;t do anythi...</Abstract>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NullIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Anchor>ab3e94b2b6ad0c51728eae69e148a08b2</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NullIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Anchor>ad6bea409224d94892b914cfa79009e5b</Anchor>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NullIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Anchor>a923c0b8f7c28b1a21f440d54bc8de227</Anchor>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Anchor>a5ad93860a74353f5fdecead8fc1922a9</Anchor>
    <Abstract>start my timer thread </Abstract>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Anchor>a30090df89ef9922d73720bee74676da3</Anchor>
    <Abstract>stop the timer thread </Abstract>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Anchor>a1f193f08e260bc8f4d8da6b6766525d6</Anchor>
    <Abstract>Get the current input from the sound card. </Abstract>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Anchor>a35843ffb526fba786afec82232f8ad5c</Anchor>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>ac4c3014e44149b9dc5249f508ac86041</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a82ce520fe4291d76c74691cbcf67dc00</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6a8d3350db4f0b632509e6cbcf81b5c9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_on</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a33d3dfbf6b9de273c70491e4ed3540c0</Anchor>
    <Abstract>test the IO&amp;#39;s graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_off</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a29d83e9b6fc2610ea3cbac33588b9dcf</Anchor>
    <Abstract>end output capture </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_capture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0ce9f71e62551b921a17869f0d4ea3c8</Anchor>
    <Abstract>answer the capture buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0cd73786ea896b62cf0ec3e3e0367dd8</Anchor>
    <Abstract>set/clear my graph root generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a538b273c6de621b2e38266e6216bde1c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7cca2bf79735626d7ab93684554e0bff</Anchor>
    <Abstract>get a buffer from the CSL graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAndIncrementSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af2075a50a32bf0cfddae3183b37e0959</Anchor>
    <Abstract>increment and answer my seq # </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printTimeStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc6975037c1beec8dadf8f4bb1405549</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ThreadPthread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_thread_pthread.html</Path>
    <Anchor>a7d9287dd8c3c4cacb05d7f708467787d</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>a11c4989c89eca30879560ba5f1cae55c</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MakeThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>a46654594fd296962e4162cc71ee158e3</Anchor>
    <Abstract>factory method </Abstract>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af8690c5e8a8f34a0b10b74f3cd066063</Anchor>
    <Abstract>the root of my client DSP graph, often a mixer or panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a688331f6e9a2b1356f545d2ace55f41a</Anchor>
    <Abstract>the most recent input buffer (if it&amp;#39;s turned on) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a3c5d6efa6e7750baa2c271bb075b476c</Anchor>
    <Abstract>the output buffer I use (passed to nextBuffer calls) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCaptureBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a795d3c1ee90a4cdcd802b4592beb97d4</Anchor>
    <Abstract>the output buffer I use for capturing output (for testing) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afff5975d365381be5385ebe15b3a7bd2</Anchor>
    <Abstract>the buffer for holding the sound card input (if open) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChannelMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc83a0ce4a361d076eea2e657e256683</Anchor>
    <Abstract>the output channel remapping array </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFramesPlayed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7b84206149d0f23fee4669838291f222</Anchor>
    <Abstract>counter of frames I&amp;#39;ve played </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afc645076ff45980d4b9d8c2209f55850</Anchor>
    <Abstract>sequence counter </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLoggingPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a297e157c9f133ea1d9face8f08165478</Anchor>
    <Abstract>logging period in seconds </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a5e0be8bcb1d550c798d0cd12885754a7</Anchor>
    <Abstract>inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa384e814fb13e794b11f6ece70c37f21</Anchor>
    <Abstract>outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa00a157f1e87264998ba876740e80448</Anchor>
    <Abstract>physical inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a42b4e4ef54d1ae1f5a35bf962767608d</Anchor>
    <Abstract>physical outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a00e7e09a91e97b4fe51e9f1cab42354e</Anchor>
    <Abstract>status flag </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0f04053849229c3aa671f67783fee760</Anchor>
    <Abstract>flag if IO is interleaved </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a34133e4a0b4c142541f11fc67c1d76fc</Anchor>
    <Abstract>used for capture offset </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aacec7725efc2851f7cfd94c12f5c3c90</Anchor>
    <Abstract>used for getting the real time </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeVals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6347e98caa1e7767dabae8a6c75c3535</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThisSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a62812f8f78f1e1859fd8b39a4e0f047c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7fe073467db4543ef9c925151f65a13c</Anchor>
    <Abstract>for printing run-time statistics </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a03a3a04552d3c4862dceffdc6d513376</Anchor>
    <Abstract>cpu usage % print the CPU usage message </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAttributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>a733a58a421f8e68c83c633c4b1aa02c2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af4d52f5f176a5d68ddd88fd4fbaa6eca</Anchor>
    <Abstract>initialize overridden in subclasses </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FeederFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Anchor>a5aca49fbf29d8a7a7bfd0f00b0b0c0d0</Anchor>
    <Abstract>shared init function </Abstract>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Anchor>a90d20f0757e668693e384bdcc91a06be</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Anchor>a76b112a27d91ba828b7bd9edb2bf947b</Anchor>
    <Abstract>whether or not I&amp;#39;m running </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSynch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Anchor>a7b66a60d98b71d6af2f772b41bd55781</Anchor>
    <Abstract>the sync I wait on </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxSampEver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a531db5245d57b705379d5949f2d7e24c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Observer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Abstract>CSL Observer/Dependent/Monitor class – instances receive update() messages from &quot;models&quot; and handle ...</Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Observer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a7f685f302291e228769f8593b4373667</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Observer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a8d58411a2bab77a30a1b2068bfb3025f</Anchor>
    <Abstract>constructor </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a6443554786e20943b7b39a5efb340a53</Anchor>
    <Abstract>this will be implemented in subclasses. </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a8ef58a48644074a87b9ad63a99d68240</Anchor>
    <Abstract>virtual destructor (don&amp;#39;t notify or delete observers in this version) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a084498ac68190916f37d5922f5bf7b6c</Anchor>
    <Abstract>key selector (e.g., MIDI chan) I receive update() mesages from my model; </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Oscillator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Oscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_oscillator.html</Path>
    <Abstract>Oscillator – Abstract oscillator class; inherits from UnitGenerator, Phased, and Scalable and provid...</Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Oscillator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Oscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_oscillator.html</Path>
    <Anchor>aa7604a6de728378379988409754b3839</Anchor>
    <Abstract>Constructor: parameters are optional. </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Oscillator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Oscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_oscillator.html</Path>
    <Anchor>a59c6e6c164e98ff03ffedc732524ca28</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Oscillator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Oscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_oscillator.html</Path>
    <Anchor>a9735adcac456bbb80997b51972de53b7</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Oscillator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Oscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_oscillator.html</Path>
    <Anchor>a2ad7e67cb42d0a44d430675ffc084c5b</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Oscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_oscillator.html</Path>
    <Anchor>a25d694e0f48fc848ef49efb1908e6930</Anchor>
    <Abstract>print the receiver for debugging </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::OutOfRangeError</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::OutOfRangeError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_out_of_range_error.html</Path>
    <Abstract>Data out of range. </Abstract>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OutOfRangeError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::OutOfRangeError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_out_of_range_error.html</Path>
    <Anchor>aafbe53219512b6878316e64bf97dde16</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>aaa80baf48d8b2a9af6d5bce2d1b27388</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>a82f57e285f07ca934823977ed3d364e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::PAIO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::PAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_p_a_i_o.html</Path>
    <Abstract>The PortAudio IO class. </Abstract>
    <DeclaredIn>PAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PAIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::PAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_p_a_i_o.html</Path>
    <Anchor>a9c76d7e2fe9187b91b7dba1765970b75</Anchor>
    <DeclaredIn>PAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PAIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::PAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_p_a_i_o.html</Path>
    <Anchor>a3d3321ce5cb1c9271784751b6c1e775f</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>PAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::PAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_p_a_i_o.html</Path>
    <Anchor>a56ccccd9d0cf17551d2bcf2376053c12</Anchor>
    <Abstract>open the IO </Abstract>
    <DeclaredIn>PAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::PAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_p_a_i_o.html</Path>
    <Anchor>a0e9ef8542220abbf97db3f73353ed465</Anchor>
    <Abstract>start the callbacks </Abstract>
    <DeclaredIn>PAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::PAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_p_a_i_o.html</Path>
    <Anchor>a52f8126b847a71837aff676b428348b2</Anchor>
    <Abstract>stop the callbacks </Abstract>
    <DeclaredIn>PAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::PAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_p_a_i_o.html</Path>
    <Anchor>a4e2d7aeb64471683364fdebce384698f</Anchor>
    <Abstract>close the IO </Abstract>
    <DeclaredIn>PAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::PAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_p_a_i_o.html</Path>
    <Anchor>a11130c48962e05d5e82950710bfdc95e</Anchor>
    <Abstract>test the IO&amp;#39;s graph </Abstract>
    <DeclaredIn>PAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_on</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a33d3dfbf6b9de273c70491e4ed3540c0</Anchor>
    <Abstract>test the IO&amp;#39;s graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_off</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a29d83e9b6fc2610ea3cbac33588b9dcf</Anchor>
    <Abstract>end output capture </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_capture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0ce9f71e62551b921a17869f0d4ea3c8</Anchor>
    <Abstract>answer the capture buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0cd73786ea896b62cf0ec3e3e0367dd8</Anchor>
    <Abstract>set/clear my graph root generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a538b273c6de621b2e38266e6216bde1c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7cca2bf79735626d7ab93684554e0bff</Anchor>
    <Abstract>get a buffer from the CSL graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a26120896d8ce56c89443dbcd6f110ed9</Anchor>
    <Abstract>Get the current input from the sound card. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a8a206f11032ad9cda1b9c8202b8f06e8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAndIncrementSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af2075a50a32bf0cfddae3183b37e0959</Anchor>
    <Abstract>increment and answer my seq # </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printTimeStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc6975037c1beec8dadf8f4bb1405549</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::PAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_p_a_i_o.html</Path>
    <Anchor>ae7acba5cd232e63fc21a7fe103933b83</Anchor>
    <Abstract>the PortAudio stream we play out/get data from </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af8690c5e8a8f34a0b10b74f3cd066063</Anchor>
    <Abstract>the root of my client DSP graph, often a mixer or panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a688331f6e9a2b1356f545d2ace55f41a</Anchor>
    <Abstract>the most recent input buffer (if it&amp;#39;s turned on) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a3c5d6efa6e7750baa2c271bb075b476c</Anchor>
    <Abstract>the output buffer I use (passed to nextBuffer calls) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCaptureBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a795d3c1ee90a4cdcd802b4592beb97d4</Anchor>
    <Abstract>the output buffer I use for capturing output (for testing) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afff5975d365381be5385ebe15b3a7bd2</Anchor>
    <Abstract>the buffer for holding the sound card input (if open) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChannelMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc83a0ce4a361d076eea2e657e256683</Anchor>
    <Abstract>the output channel remapping array </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFramesPlayed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7b84206149d0f23fee4669838291f222</Anchor>
    <Abstract>counter of frames I&amp;#39;ve played </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afc645076ff45980d4b9d8c2209f55850</Anchor>
    <Abstract>sequence counter </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLoggingPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a297e157c9f133ea1d9face8f08165478</Anchor>
    <Abstract>logging period in seconds </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a5e0be8bcb1d550c798d0cd12885754a7</Anchor>
    <Abstract>inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa384e814fb13e794b11f6ece70c37f21</Anchor>
    <Abstract>outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa00a157f1e87264998ba876740e80448</Anchor>
    <Abstract>physical inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a42b4e4ef54d1ae1f5a35bf962767608d</Anchor>
    <Abstract>physical outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a00e7e09a91e97b4fe51e9f1cab42354e</Anchor>
    <Abstract>status flag </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0f04053849229c3aa671f67783fee760</Anchor>
    <Abstract>flag if IO is interleaved </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a34133e4a0b4c142541f11fc67c1d76fc</Anchor>
    <Abstract>used for capture offset </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aacec7725efc2851f7cfd94c12f5c3c90</Anchor>
    <Abstract>used for getting the real time </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeVals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6347e98caa1e7767dabae8a6c75c3535</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThisSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a62812f8f78f1e1859fd8b39a4e0f047c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7fe073467db4543ef9c925151f65a13c</Anchor>
    <Abstract>for printing run-time statistics </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a03a3a04552d3c4862dceffdc6d513376</Anchor>
    <Abstract>cpu usage % print the CPU usage message </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::PAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_p_a_i_o.html</Path>
    <Anchor>ab4722062ccc9e26733a25e0331864ee3</Anchor>
    <Abstract>print the error message </Abstract>
    <DeclaredIn>PAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::PAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_p_a_i_o.html</Path>
    <Anchor>a414c63ab8ab6f0a870cb5795a158e676</Anchor>
    <Abstract>Actually initialize PortAudio driver. </Abstract>
    <DeclaredIn>PAIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::PAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_p_a_i_o.html</Path>
    <Anchor>a5d53d41cad8f695b6075949a170c0cc8</Anchor>
    <Abstract>PA IO stream parameters. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::PAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_p_a_i_o.html</Path>
    <Anchor>a816a530a0a89234b80683dc073ddd018</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInDev</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::PAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_p_a_i_o.html</Path>
    <Anchor>a9b363f600d53821cfab3abc910b7bf18</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutDev</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::PAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_p_a_i_o.html</Path>
    <Anchor>ae291d44586b85344bf1ea59ce14e582d</Anchor>
    <Abstract>IO device numbers. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDevices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::PAIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_p_a_i_o.html</Path>
    <Anchor>acd3317d9472a0d692d0d6e5776bbe26f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxSampEver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a531db5245d57b705379d5949f2d7e24c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Panner</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Panner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_panner.html</Path>
    <Abstract>The CSL mono-to-stereo L/R panner class. </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Panner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Panner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_panner.html</Path>
    <Anchor>a69fc4d434260f76c1fa11318c44f3f94</Anchor>
    <Abstract>Constructors / destructor. </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Panner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Panner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_panner.html</Path>
    <Anchor>a4865228abd2fed98915f2285f5fb96da</Anchor>
    <Abstract>given an input stream </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Panner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Panner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_panner.html</Path>
    <Anchor>ab0ff3118e899ccfdc137bdd0f8e9c5e3</Anchor>
    <Abstract>given input and position stream </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Panner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Panner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_panner.html</Path>
    <Anchor>a749c9395e5837da20975b8911a100ea0</Anchor>
    <Abstract>given an input and an amplitude const </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Panner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Panner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_panner.html</Path>
    <Anchor>a809647f46a22e8c487d9a175a840ed61</Anchor>
    <Abstract>given an amplitude stream </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Panner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Panner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_panner.html</Path>
    <Anchor>a9735bd4e5f42383654a8b7a303afecbc</Anchor>
    <Abstract>given an amplitude value </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Panner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Panner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_panner.html</Path>
    <Anchor>aa197c2771bb9d58cf6923ee3011d3f9f</Anchor>
    <Abstract>given an amplitude value and pan value </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Panner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Panner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_panner.html</Path>
    <Anchor>a580b23ccd61a327bdf40957b2c650e5b</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Panner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_panner.html</Path>
    <Anchor>a839b7f87a51bef7bd3864af8f8e7f9a6</Anchor>
    <Abstract>Operations. </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Panner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_panner.html</Path>
    <Anchor>a667bf8f61b6fec84a6318fdd49a95c92</Anchor>
    <Abstract>set the position to a float </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Panner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_panner.html</Path>
    <Anchor>a7dd3a8b1b83159d6bbb5278eda92550c</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Panner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_panner.html</Path>
    <Anchor>a9aed967e670df9aa86d72e88c80c6936</Anchor>
    <Abstract>I&amp;#39;m stereo! </Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Partial</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Partial</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_partial.html</Path>
    <Abstract>Struct for partial overtones. </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>number</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Partial</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_partial.html</Path>
    <Anchor>aaeada68d786b0e3067350266cffc09a5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>amplitude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Partial</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_partial.html</Path>
    <Anchor>aaa11930c62e4e4299065ce98e65d0e4c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>phase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Partial</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1_partial.html</Path>
    <Anchor>ada2b49668a48aa4b97141484a5395f64</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Phased</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Abstract>Phased – a mix-in for objects with phase accumulators (local float) and frequency controls (an input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Phased</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>afe7582eb05093c556892ca954c08d9c1</Anchor>
    <Abstract>Constructors; this one is rearely used. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Phased</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a6718533ed4b4a1fd8147ff8f75436184</Anchor>
    <Abstract>use the given dynamic frequency &amp; phase </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Phased</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a35cc9db15f8a3757bff9100e457f9e5f</Anchor>
    <Abstract>use the given dynamic or static frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Phased</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>ac5ebcc5aaf42ae7f230b37cde1cf1080</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::PinkNoise</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::PinkNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_pink_noise.html</Path>
    <Abstract>Pink noise – equal power per octave. </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PinkNoise</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::PinkNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_pink_noise.html</Path>
    <Anchor>aaac894a16925eb95bc06434d5f37fff2</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PinkNoise</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::PinkNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_pink_noise.html</Path>
    <Anchor>a5c4d4dfcf24f776dbfb8ab0e573280e1</Anchor>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PinkNoise</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::PinkNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_pink_noise.html</Path>
    <Anchor>aded8e824e6607e6e593db3358a5fcc88</Anchor>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PinkNoise</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::PinkNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_pink_noise.html</Path>
    <Anchor>a03baa9d62e34b737ebc14a1d4b47ff0b</Anchor>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::PinkNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_pink_noise.html</Path>
    <Anchor>a3cb08cce74e2ecf2dce789cb3781bda9</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextPink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::PinkNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_pink_noise.html</Path>
    <Anchor>ac14e1fd4237e55bb65dde64a0086bc70</Anchor>
    <Abstract>returns the next pink noise sample </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateRandomNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>ad78184bcf531ddf1d31a9f67917e9974</Anchor>
    <Abstract>returns the next pseudo-random number </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateNormalizedRandomNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>ae5559b9425fe665f6a4eafedca44edd2</Anchor>
    <Abstract>returns next pseudo-random normalised to +/- 1.0 </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>a850501c314ea8a1844763247577e72d7</Anchor>
    <Abstract>set the seed integer for the pseudo-random number generators </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>a08d87a30f57e974d8fafcb6c74c932e5</Anchor>
    <Abstract>Tell me more about what is happening. </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::PinkNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_pink_noise.html</Path>
    <Anchor>a27573ead84b7ab0fe38a0f20c71da31c</Anchor>
    <Abstract>set up PinkNoise for N rows of generators </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPinkRows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::PinkNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_pink_noise.html</Path>
    <Anchor>a3ad85cf0a2aaef8f29e64444ce516e24</Anchor>
    <Abstract>Pink noise generator rows. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPinkRunningSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::PinkNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_pink_noise.html</Path>
    <Anchor>a17a453700e9a0e6ddcd5f3de52adbd41</Anchor>
    <Abstract>Used to optimize summing of generators. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPinkIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::PinkNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_pink_noise.html</Path>
    <Anchor>a09537275b8ab3aefb47c95c6d79448bb</Anchor>
    <Abstract>Incremented each sample. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPinkIndexMask</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::PinkNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_pink_noise.html</Path>
    <Anchor>a489c998c77420d5336709bd9b1f31922</Anchor>
    <Abstract>Index wrapped by ANDing with this mask. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPinkScalar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::PinkNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_pink_noise.html</Path>
    <Anchor>ac1df948602046dec0e5ad528ea2d0e30</Anchor>
    <Abstract>Used to scale within range of -1.0 to +1.0. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>af9bce1dd693d6d176308a39b0e6c4b7f</Anchor>
    <Abstract>Destructor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDivisor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>af4d8d76a4dd98374cb14535106e0e54e</Anchor>
    <Abstract>factor to scale ints to +/- 1.0 </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Port</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Abstract>Port – used to represent constant, control-rate or signal inputs and outputs in named maps; holds a ...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>a2cfb70a4b6d730e715042d646ec1d960</Anchor>
    <Abstract>Constructors: default is a float = 0. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>ae6a2f397cfcf05d67c23814ab23d3335</Anchor>
    <Abstract>Given a UGen, use it as the input. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>a93fd581566d9a9ae48bdf486822398dc</Anchor>
    <Abstract>given a float, hold it as the static value </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>afe166c2a6b10ad34d47472a150366bc1</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>a81c5f3efaa9f2a4251a55e289d37a722</Anchor>
    <Abstract>check the port&amp;#39;s buffer and allocate it if needed </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>ac816049d6696910a55a87d24653d6959</Anchor>
    <Abstract>answer the next value (dynamic or constant) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>a5e706eba781d66819aae574c235f3677</Anchor>
    <Abstract>write the val to a buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>a71bf127e92463f1ca7daefc2b4dda123</Anchor>
    <Abstract>answer whether I&amp;#39;m ready to be read </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>a437e9e615217b7d3c305d933852d7d5a</Anchor>
    <Abstract>reset the buffer pointer without re-pulling the input </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>a6c979cd2b9c4d7dd363869a0df0474e4</Anchor>
    <Abstract>answer whether I&amp;#39;m active </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>a63b60f57376c48608cb179ae4233e406</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>a944da2e5a34cf975d7600f57581e1b7e</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>aceef4e541d157f6d57c228d290a3a6b3</Anchor>
    <Abstract>am I fixed or dynamic </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUGen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>afea3a01573e6eb5ef24915c0b33555d0</Anchor>
    <Abstract>my unit generator (pointer or NULL) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>a91a70fce4e5e9b9252668b430949677d</Anchor>
    <Abstract>the buffer used to hold my output </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>a4bf9fd0b4c3fcc5e6868c824f71d508a</Anchor>
    <Abstract>my value (in case I&amp;#39;m fixed [mUGen == NULL]) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mValuePtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>a47055191ec4fec00b3ca51659d6fdf85</Anchor>
    <Abstract>my value&amp;#39;s address (const or buffer pointer) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPtrIncrement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>aadc0f6f06cf07f9e282403eeb87cec98</Anchor>
    <Abstract>the inter-sample ptr increment (0 for const, 1 for dynamic) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mValueIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Port</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_port.html</Path>
    <Anchor>a91dc03fbd1da4bb2e7325f1cc6337e86</Anchor>
    <Abstract>my index (into the UGen&amp;#39;s buffer) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::ProcessingError</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::ProcessingError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_processing_error.html</Path>
    <Abstract>Processing Error. </Abstract>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProcessingError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ProcessingError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_processing_error.html</Path>
    <Anchor>ac8a52bae0cc8b5f4b5370c92f4f23923</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>aaa80baf48d8b2a9af6d5bce2d1b27388</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>a82f57e285f07ca934823977ed3d364e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::RandEnvelope</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Abstract>RandEnvelope envelope class – makes random control signals using a single line segment. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RandEnvelope</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a00395fbb7e902c1f84e2f045fbb47bb9</Anchor>
    <Abstract>defaults are 1 Hz, +- 1.0 range </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RandEnvelope</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a179ee96fea69da2b7d909c61dc65480f</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWalk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>abf7da6f9e8d3187d9479d95f6943b6f4</Anchor>
    <Abstract>Accessors. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmplitude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a329986a80bfb20de58bb08083ad23498</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>aa1e0d58816249a08ce32fb8f3b99e477</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>ace8ede09cbce27b56e2900453fa664b9</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a27288573f4d6c3dce2c3b15b56fd4e29</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a463e9ab6dac66e8577798e4c1d7ba0cf</Anchor>
    <Abstract>This answers whether I&amp;#39;m active (ptr &lt; end) </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a26d7564910b198e070ab84d930919d47</Anchor>
    <Abstract>These are no-ops in Random envelopes. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>ae47cab15aa341e4db1e6a72538154f88</Anchor>
    <Abstract>reset internal time to restart envelope </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a2f955e86ddac23f839e59b16f85d04ac</Anchor>
    <Abstract>reset internal time to restart envelope </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a51bfe7ff191f234ffaf65ec3179cee98</Anchor>
    <Abstract>print the receiver </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleTimes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a80ed67ac81a5d68c9113e1fac7440486</Anchor>
    <Abstract>set/scale durations </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a41e013a1b98ece3b7a8efbf37d3fac3b</Anchor>
    <Abstract>scale durations </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBreakpoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>ad39e120b2cc844caaf579599cd44c097</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a9421a5f45b37fdeaa7915b2e7a9da366</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>abc3a00d656fed9abb632fc1b374adf27</Anchor>
    <Abstract>scale values so the max is s </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a0fcaf4e2c7c9669d439cfa1901213296</Anchor>
    <Abstract>set up the line segment </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>af4627be0664071b019ecde8e7973bc1e</Anchor>
    <Abstract>choose the values for the next line segment </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>privateNextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a5e8bc26caab6bb76f84c855d04dbebe5</Anchor>
    <Abstract>Internal helper method for computing the next buffer. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>abd2ecb2dca6859c7da2e8e8e1689bb37</Anchor>
    <Abstract>Allocate memory for the segments. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculateSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a233714c4b55f4f8e974a6827ea5ead42</Anchor>
    <Abstract>Calculate the internal data. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLastVal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a78e1740e698557b601e835f12fc66d40</Anchor>
    <Abstract>last line segment ending value (unscaled and unoffset) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>acf430298d560e87ec0eef88922a0e2cf</Anchor>
    <Abstract>frequency for picking new values </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAmplitude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a62991ffd684e1a97e3b2f0a572b3abdd</Anchor>
    <Abstract>scale (+-) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>ad191fcb77ac800db058b880af64f44be</Anchor>
    <Abstract>max step between values (+-) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a5b1f829ad40f3fb1781617002543cccb</Anchor>
    <Abstract>DC offset. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a84c675a8d9ecb76506adc6cb4b0049f8</Anchor>
    <Abstract>current index in line segment </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSegmentLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a13968ea437831ee37884776ffeee85a6</Anchor>
    <Abstract>line segment&amp;#39;s length in frames </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWalk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>a581aac2e505014b95918af7ed7cfcb1a</Anchor>
    <Abstract>whether to produce random values or a random walk </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RandEnvelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rand_envelope.html</Path>
    <Anchor>aeb8436f40433b14928082270da3eaedd</Anchor>
    <Abstract>single line segment </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a3a740e34b7872a2599f21ff3b37a0e0f</Anchor>
    <Abstract>Total duration, typically in seconds. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentMark</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>aeb4f7e489cb6d3863be43318a9e59f44</Anchor>
    <Abstract>How far we have read. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSegmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a806c34bfc5febd95060670a80bf48521</Anchor>
    <Abstract>list of envelope breakpoints </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>ad72b1156da3b7db2990da98b50d209bc</Anchor>
    <Abstract>array of line segments that for the envelope </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a7a1cba39a17c49d070b6f2b0fb100ebc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a0632379f852825bee1477a09320f3d98</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::RectangularWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::RectangularWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rectangular_window.html</Path>
    <Abstract>RectangularWindow:A rectangular window has all values set to the Gain value, or by default to 1...</Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RectangularWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RectangularWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rectangular_window.html</Path>
    <Anchor>a2f9f8c9e1d566d43b91c09c25cc1e27f</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RectangularWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RectangularWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rectangular_window.html</Path>
    <Anchor>a7e00b2bb41c44d5bdb457d3402bc2a58</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RectangularWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RectangularWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rectangular_window.html</Path>
    <Anchor>a3d434a6d42fa7bef5676917409a795a7</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RectangularWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RectangularWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rectangular_window.html</Path>
    <Anchor>a8aea782ed5a3e169abb3f246ff082e1a</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a445538717eb019a4a4b9f2581b34ee3e</Anchor>
    <Abstract>Set the number of samples the window spans. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a964f52a0cd1ee2089a632c507d0d87ec</Anchor>
    <Abstract>Set the gain to which the window should be normalized. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a02b50e78cdcc095403b5b96d37732bae</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a7b53f0c4c280029dc76470d3b3fcd890</Anchor>
    <Abstract>Returns a pointer to the window data. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>acfcb1d9b3ede7ac833d01b0cb17e0d64</Anchor>
    <Abstract>Print some info about the window. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RectangularWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_rectangular_window.html</Path>
    <Anchor>a1685357f571cee9f2743b918e0bf6d77</Anchor>
    <Abstract>subclasses override this to fill the buffer with corresponding function. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a8fe40904c35cdede17b4f6f7ba06e6a7</Anchor>
    <Abstract>used to store the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBufferPos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>aa0ac80869363b3471bd25727443529b3</Anchor>
    <Abstract>where am I in the window buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a4a832d761a5101d8dca5e820914e491d</Anchor>
    <Abstract>length in samples of the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a185596ca7875d3cfa30e089d34ae0fe9</Anchor>
    <Abstract>gain for the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::RemoteIO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Abstract>the RemoteIO class </Abstract>
    <DeclaredIn>RemoteIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>a62441f850795b080ad849ce9a2fcc7f3</Anchor>
    <DeclaredIn>RemoteIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>a62dde7ef7a6d0f44b5e5188376f90ba1</Anchor>
    <DeclaredIn>RemoteIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RemoteIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>aa645c116affae8832c1a5b08039bac04</Anchor>
    <DeclaredIn>RemoteIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>a28511eb946acc62a508cb60345d05002</Anchor>
    <DeclaredIn>RemoteIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>a84b3022ef254715c92f743ce1c452668</Anchor>
    <DeclaredIn>RemoteIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>ac06c2150c75eedea7e856aae3a97af92</Anchor>
    <DeclaredIn>RemoteIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>a99333d69d2ac3d839625ef8ea727a720</Anchor>
    <DeclaredIn>RemoteIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>a74f873f8d0a88d9f314d6108958f1b00</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>RemoteIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process_request_packet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>ac3d54fd7ba33be112356a63aabf3a2e6</Anchor>
    <DeclaredIn>RemoteIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_out_sock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>abb3cdf0f8803d5b01a3751a516ee514a</Anchor>
    <DeclaredIn>RemoteIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>a25c1e665b0794d11153620be7d76424c</Anchor>
    <DeclaredIn>RemoteIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_client_addr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>a29a622e11ae4ea4b0dcab6aad67e5de4</Anchor>
    <DeclaredIn>RemoteIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6a8d3350db4f0b632509e6cbcf81b5c9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_on</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a33d3dfbf6b9de273c70491e4ed3540c0</Anchor>
    <Abstract>test the IO&amp;#39;s graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_off</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a29d83e9b6fc2610ea3cbac33588b9dcf</Anchor>
    <Abstract>end output capture </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_capture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0ce9f71e62551b921a17869f0d4ea3c8</Anchor>
    <Abstract>answer the capture buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0cd73786ea896b62cf0ec3e3e0367dd8</Anchor>
    <Abstract>set/clear my graph root generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a538b273c6de621b2e38266e6216bde1c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7cca2bf79735626d7ab93684554e0bff</Anchor>
    <Abstract>get a buffer from the CSL graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a26120896d8ce56c89443dbcd6f110ed9</Anchor>
    <Abstract>Get the current input from the sound card. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a8a206f11032ad9cda1b9c8202b8f06e8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAndIncrementSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af2075a50a32bf0cfddae3183b37e0959</Anchor>
    <Abstract>increment and answer my seq # </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printTimeStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc6975037c1beec8dadf8f4bb1405549</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af8690c5e8a8f34a0b10b74f3cd066063</Anchor>
    <Abstract>the root of my client DSP graph, often a mixer or panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a688331f6e9a2b1356f545d2ace55f41a</Anchor>
    <Abstract>the most recent input buffer (if it&amp;#39;s turned on) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a3c5d6efa6e7750baa2c271bb075b476c</Anchor>
    <Abstract>the output buffer I use (passed to nextBuffer calls) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCaptureBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a795d3c1ee90a4cdcd802b4592beb97d4</Anchor>
    <Abstract>the output buffer I use for capturing output (for testing) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afff5975d365381be5385ebe15b3a7bd2</Anchor>
    <Abstract>the buffer for holding the sound card input (if open) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChannelMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc83a0ce4a361d076eea2e657e256683</Anchor>
    <Abstract>the output channel remapping array </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFramesPlayed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7b84206149d0f23fee4669838291f222</Anchor>
    <Abstract>counter of frames I&amp;#39;ve played </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afc645076ff45980d4b9d8c2209f55850</Anchor>
    <Abstract>sequence counter </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLoggingPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a297e157c9f133ea1d9face8f08165478</Anchor>
    <Abstract>logging period in seconds </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a5e0be8bcb1d550c798d0cd12885754a7</Anchor>
    <Abstract>inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa384e814fb13e794b11f6ece70c37f21</Anchor>
    <Abstract>outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa00a157f1e87264998ba876740e80448</Anchor>
    <Abstract>physical inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a42b4e4ef54d1ae1f5a35bf962767608d</Anchor>
    <Abstract>physical outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a00e7e09a91e97b4fe51e9f1cab42354e</Anchor>
    <Abstract>status flag </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0f04053849229c3aa671f67783fee760</Anchor>
    <Abstract>flag if IO is interleaved </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a34133e4a0b4c142541f11fc67c1d76fc</Anchor>
    <Abstract>used for capture offset </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aacec7725efc2851f7cfd94c12f5c3c90</Anchor>
    <Abstract>used for getting the real time </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeVals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6347e98caa1e7767dabae8a6c75c3535</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThisSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a62812f8f78f1e1859fd8b39a4e0f047c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7fe073467db4543ef9c925151f65a13c</Anchor>
    <Abstract>for printing run-time statistics </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a03a3a04552d3c4862dceffdc6d513376</Anchor>
    <Abstract>cpu usage % print the CPU usage message </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init_io</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>a8303a3d9ba603b1383a53233d115d775</Anchor>
    <DeclaredIn>RemoteIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af4d52f5f176a5d68ddd88fd4fbaa6eca</Anchor>
    <Abstract>initialize overridden in subclasses </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_inputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>a46dae4597a0f724889b09c49d9e19bbc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>a0c7c2dd77344f89df01f9585810ce1de</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_outputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>a7db8d62497939e2494e85c729e1c8f79</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_inputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>aad835deefe6264246994ad6e1d6ffb89</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_myAddr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>a67855d66c1c85579a757ba69b4f09bad</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_inSock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>a7c34ff30487cad70c4add238471410e2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_outSock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>aa20cd3cf7623383345adb9a3e3da297e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RemoteIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_i_o.html</Path>
    <Anchor>ad9aead001713d1b89969f05d1934b1ef</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxSampEver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a531db5245d57b705379d5949f2d7e24c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::RemoteStream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Abstract>RemoteStream class. </Abstract>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoteStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>a46d6369ac87bfeb947e0b6d38a0550db</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RemoteStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>ac4d21fc04504ae2c74f5417c64ed0612</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ioBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>a5c30bb3d7b80238bcf0f6065db9d4ac0</Anchor>
    <Abstract>Accessors used by the reader thread. </Abstract>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>socket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>abba99c93df9993b2c4207735373fa11e</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>a4f277095a28e2e6d51b880fe68f6b7a8</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bufferSwitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>a1f32e33b9cc5a6e2762b899f8f9a93bc</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bufferIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>a7769441ece66de173b7b2375c5052573</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>ac0d9f073ea25f61ad2bf51688cff2945</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>semaphore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>ab750d0464932c5740fb75f0f4908e2e6</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>a9139ebdd0abf7979d4e0db8fd0bc303b</Anchor>
    <Abstract>Get a buffer of frames. </Abstract>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initSockets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>a870b8eb4d980049c58f2689bce9f01f2</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initPacket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>a55ab05de49a8c2fa627493132c7c8953</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connectToServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>a311030a33076789fd8a9ef924e4b4925</Anchor>
    <DeclaredIn>RemoteStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>a56aa6ce25375671a46de721ed62114be</Anchor>
    <Abstract>the size of the input ring buffer (in FRAMES) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIoBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>af83d37c57fde0e169f5cb36ff0c5cc31</Anchor>
    <Abstract>My IO buffers (2 for dbl-buffering; mBufferSize frames in size) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>a71b0924084b982337c87a2779be57635</Anchor>
    <Abstract>current IO buffer in use </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>a66e147a47ad2c6f6c04de6c81fd4876e</Anchor>
    <Abstract>current position in buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSocket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>a6345d20d36078fb3845b05390cdc2695</Anchor>
    <Abstract>The socket I send to. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>a10c5c3918299436030441bb5989b13aa</Anchor>
    <Abstract>The request packet header. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mServerAddr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>a42c1031e9cd0862894e3ffd8e23e3688</Anchor>
    <Abstract>Socket addresses for the remote server and for me. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mServerSemaphore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RemoteStream</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_remote_stream.html</Path>
    <Anchor>ab70a125afcd1d52ce97ed8c092f82ee7</Anchor>
    <Abstract>Semaphore to trigger call to server for samples. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::RingBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Abstract>RingBuffer is the storage + a default reader. </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RingBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>a93b9973de32a836bdf70befaf9d78eed</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RingBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>aa411b9307a59008ccf49c302891cce81</Anchor>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RingBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>acf3ea4479d4f571a357f9b2855319509</Anchor>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seekTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>abcb5b84d9a9e95bbb91f37701d2a3c64</Anchor>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLoopStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>a31311864d277b7872c41d706c53882d2</Anchor>
    <Abstract>These loop setters allow for variable buffer lengths by varying the points where the buffer writes...</Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLoopEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>a5b623dbfe2cc1a2a26d51e55623a5215</Anchor>
    <Abstract>Calls the setLoopStart of it&amp;#39;s tap. </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>a0d75c99a06e8c66ecf9db2b534f3cf0d</Anchor>
    <Abstract>Calls the setLoopEnd of it&amp;#39;s tap. </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>a7b1efd0a97dacb41877d3b9f38b532e9</Anchor>
    <Abstract>Write a buffer of data into the ring buffer. </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sumIntoBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>aba3d4953a3754ca36cab173f7a28a4d3</Anchor>
    <Abstract>Do an adding write of data into the ring buffer. </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destructiveNextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>ae057f5980d8e3924a053a7877d874165</Anchor>
    <Abstract>Read a buffer zeroing as you go. </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>aeffb791738ab40b1f673844b013a427f</Anchor>
    <Abstract>write to the receiver </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sumIntoBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>a514ec863972aad8310b9bddb17f00523</Anchor>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentWriteFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>a18317761a3c400d309f0c41e70f3b830</Anchor>
    <Abstract>state – users can manipulate my internal tap and buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>ab5beea182c83b3bf4a42d549bc8b1ab1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>ad4d2d168c9e72145899a308623757770</Anchor>
    <Abstract>internal tap so a RingBuffer can also be a a UnitGenerator </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTempCurrentWriteFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>a96cba4cb85d0964ba8025935dc06b67a</Anchor>
    <Abstract>Used in next buffer to save state between calls in the same block. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RingBufferTap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>csl::RingBuffer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer.html</Path>
    <Anchor>add04c1e341d3465d168f8b67c9642d69</Anchor>
    <Abstract>Allow the RingBufferTap to access private members of this class. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::RingBufferTap</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Abstract>RingBufferTap is a reader that loops over a buffer. </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RingBufferTap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Anchor>afe95cd18e5491476fe2a303be513b930</Anchor>
    <Abstract>Create a tap on a ring buffer, optionally offset relative to the current write position. </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Anchor>a465124c70d10c341bd366bd8cff47bb9</Anchor>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Anchor>acb197f185e064737b73a80d345e78710</Anchor>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seekTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Anchor>ad257263852be6e43d8b34c3640fae950</Anchor>
    <Abstract>general-purpose seek on a stream </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLoopStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Anchor>a78f78d2c2b6987200e3a1f4156709ec1</Anchor>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLoopEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Anchor>a1374593b14434c4071af04ce3bbd6be4</Anchor>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Anchor>a95de90ea50f2095ebb19bcd745327f78</Anchor>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Anchor>a2c4e767af07fa348bd5c8e2f0d5e02a2</Anchor>
    <Abstract>nextBuffer method </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Anchor>a2260a4cd8a38f373d00a1d6acde17443</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destructiveNextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Anchor>af76878424bb9bfb03cd0afc9caaeb08d</Anchor>
    <Abstract>zeroing as it goes. </Abstract>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destructiveNextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Anchor>a9124bfa10bd8247b59c7ec4cef7f59a7</Anchor>
    <DeclaredIn>RingBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a28b5bad4f2349398de3c6d09304fef4c</Anchor>
    <Abstract>reset-to-zero </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLoopStartFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Anchor>ab0acc1de54111a79dffcf307c450dee7</Anchor>
    <Abstract>Number of frames from the beginning to start a loop at. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLoopEndFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Anchor>ad270fb27fc80c1dec68ccfb6e0df1ed1</Anchor>
    <Abstract>Number of frames away from buffer end. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a323673b284a59f017163a9d4bac3e51b</Anchor>
    <Abstract>where I currently am in the buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mActualFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a473db0a6a9460c7c4f162648e19f8421</Anchor>
    <Abstract>where I actually am in the buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTempCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Anchor>a0c084d8291a52c902e6058e2a6842c3d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mParentBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Anchor>af0d6919c5ab3583e45cf340848e20d14</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RingBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>csl::RingBufferTap</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_ring_buffer_tap.html</Path>
    <Anchor>ae3e726ccd462aea75499dedfe5c436e7</Anchor>
    <Abstract>Allow RingBuffer to access private members of RingBufferTap. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::RunTimeError</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::RunTimeError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_run_time_error.html</Path>
    <Abstract>Illegal operation at run time. </Abstract>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RunTimeError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::RunTimeError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_run_time_error.html</Path>
    <Anchor>a28fae064316bbf6ea2b7f3d28aefd966</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>aaa80baf48d8b2a9af6d5bce2d1b27388</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>a82f57e285f07ca934823977ed3d364e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SampleBankInstrument</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SampleBankInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sample_bank_instrument.html</Path>
    <Abstract>Sample bank player instrument. </Abstract>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SampleBankInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SampleBankInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sample_bank_instrument.html</Path>
    <Anchor>a950164b9d586a09ab119d2690673a59f</Anchor>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SampleBankInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SampleBankInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sample_bank_instrument.html</Path>
    <Anchor>af11c603a1e754d06438d58a43a6aede0</Anchor>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SampleBankInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sample_bank_instrument.html</Path>
    <Anchor>a72434d2c0ff5cded5328c1c69ab6c00e</Anchor>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>play</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SampleBankInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sample_bank_instrument.html</Path>
    <Anchor>a6c767b66d71035141f51df02347c0b48</Anchor>
    <Abstract>play note </Abstract>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playOSC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SampleBankInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sample_bank_instrument.html</Path>
    <Anchor>a2a24b84f756ca13e803196509e31b8b7</Anchor>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SampleBankInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sample_bank_instrument.html</Path>
    <Anchor>aba5aeae0a9314c82f4d147200fce8c2f</Anchor>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a2f5d77834a2385ca2e2112509a02de2d</Anchor>
    <Abstract>Plug functions. </Abstract>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a1b783961f66930972f30e242139be90f</Anchor>
    <Abstract>Play a note (subclasses refine) </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playMIDI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>aef74cff39b56ac6a71b25f82358e123f</Anchor>
    <Abstract>These are the UGens of the DSP graph (i.e., the sndfile player instrument) </Abstract>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playMIDI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a71832a951ab951581b40817dd350ee88</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>afa6f111dc85dab7a7bdf5e2cc6c165af</Anchor>
    <Abstract>Accessors. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a79aab7d10f67e121641d09224eb230bb</Anchor>
    <Abstract>my UGen graph </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>envelopes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a58dc9b22696af5314e391ed1212782c6</Anchor>
    <Abstract>the map of ugens in the graph by name </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a2714d7d2ec9c9dc7008e81b31e423f1b</Anchor>
    <Abstract>the vector of envelopes to query or trigger </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genNamed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abccad2cc3a254ae6bac8c660f7518778</Anchor>
    <Abstract>answer my name answer the number of channels </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abeb0b477a2388f8c7a2b41e87ad24c01</Anchor>
    <Abstract>Accessor management. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ae5f78c65cf53af61bbdcc3a8e228f947</Anchor>
    <Abstract>answer the accessor vector </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a751268fdb83b44806a6f0b745400fce5</Anchor>
    <Abstract>set a named parameter </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a05fbcc14ac4a0cd792e85aff09147b3b</Anchor>
    <Abstract>Envelope query and re-trigger. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abffd98c97971ef8ec4c893f8d019e3c1</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPlayer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a0feefb6c989733d553ee0fd155e5b623</Anchor>
    <Abstract>sample player </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnvelope</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a74ace615cc6a68303f6d77e8c1cdb886</Anchor>
    <Abstract>AR envelope. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a47bcb903cc161dba558507c708b4b6fa</Anchor>
    <Abstract>stereo panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a3af3700bc55e2eb91f209e73d1867b9e</Anchor>
    <Abstract>plugs playback rate (ignored for now) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a843469ec1190435c1b186b4ea0683124</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a6c2f5c468b4dfed2899c0d00bfbef5d1</Anchor>
    <Abstract>start/stop sample indices </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a16ddc37c677ce929088dab14906d95cf</Anchor>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a3685284d2311cfe1d10f38536c424666</Anchor>
    <Abstract>Caches. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a660770fe07dc68cb05f277ff03130ec5</Anchor>
    <Abstract>my name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUGens</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ab5af1851504b58a140055423100bc61a</Anchor>
    <Abstract>the map of ugens in the graph by name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnvelopes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a07ff212be08d5cc25fa2a328dd630188</Anchor>
    <Abstract>the vector of envelopes to query or trigger </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ad52424c33a5b87976186ef9e3f784a73</Anchor>
    <Abstract>the accessor vector </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Sawtooth</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Sawtooth</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sawtooth.html</Path>
    <Abstract>Sawtooth oscillator class (non-band-limited) </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sawtooth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Sawtooth</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sawtooth.html</Path>
    <Anchor>a71e73afb39f0adc2a67033ff09c3270a</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Sawtooth</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sawtooth.html</Path>
    <Anchor>a65ea1683c492e96ef8084ec24c44f054</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Oscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_oscillator.html</Path>
    <Anchor>a25d694e0f48fc848ef49efb1908e6930</Anchor>
    <Abstract>print the receiver for debugging </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Scalable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Abstract>Scalable – mix-in class with scale and offset control inputs (may be constants or generators)...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>abf64a4db13b4b7fc2393b05a809456a6</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a1c01502c021f7383c5b84784d7a3402b</Anchor>
    <Abstract>use the given static scale </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a3d0ffd25bb881ee5b27eb515c18f42ca</Anchor>
    <Abstract>use the given static scale &amp; offset </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a7df2bc7cbdfcda9cbc8c07074f5b6cfa</Anchor>
    <Abstract>use the given dynamic scale &amp; static offset </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scalable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a97128b05b04c4e2568792e6005109a1c</Anchor>
    <Abstract>use the given dynamic scale &amp; offset </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Scalable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aee5e93b96e4c029bb1129c5f21af6feb</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Seekable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Abstract>Seekable – a mix-in for positionable streams. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Seekable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a94a09d42b266c41eaf81fe70668a84d4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Seekable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a36d8029a31ae74e40fe0a2e87cb558f8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seekTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a879b7ddb825a6ce724a08c4631f25e4f</Anchor>
    <Abstract>general-purpose seek on a stream </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a28b5bad4f2349398de3c6d09304fef4c</Anchor>
    <Abstract>reset-to-zero </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a0517e39b4d75e904acf246d7ed86b1ce</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a323673b284a59f017163a9d4bac3e51b</Anchor>
    <Abstract>where I currently am in the buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mActualFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Seekable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_seekable.html</Path>
    <Anchor>a473db0a6a9460c7c4f162648e19f8421</Anchor>
    <Abstract>where I actually am in the buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SHARCInstrument</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SHARCInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_instrument.html</Path>
    <Abstract>SHARC instrument class. </Abstract>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SHARCInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_instrument.html</Path>
    <Anchor>aca0889f0b6a4e8f4501dbb2649aa654f</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SHARCInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_instrument.html</Path>
    <Anchor>a3d3e8452aad8d3d9ca93b8b300cab9e7</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spectrum_names</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_instrument.html</Path>
    <Anchor>a22f8d1dfd00677dc8202afaf9eb4d013</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spectrum_keys</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_instrument.html</Path>
    <Anchor>aa6f31dd987bb16abe9595f157e98b4aa</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spectrum_frequencies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_instrument.html</Path>
    <Anchor>aae3895872fa531bc6641c7409146e1be</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spectrum_named</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_instrument.html</Path>
    <Anchor>a4abef6b65b47bc49bf667932ca459582</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spectrum_with_key</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_instrument.html</Path>
    <Anchor>a67606f7956fe63bfacae9f5dbdb04cce</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spectrum_with_frequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_instrument.html</Path>
    <Anchor>ac651baad775b96da6182c95525714302</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_spectra</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_instrument.html</Path>
    <Anchor>a0df89f4c51a23ae64b36c9a3d0f34d8a</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_partials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_instrument.html</Path>
    <Anchor>ac66db4cc05c027ac90ae90207ad8df20</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump_example</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_instrument.html</Path>
    <Anchor>a9c4a16a6f999e57d22725e75f8899bea</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SHARCInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_instrument.html</Path>
    <Anchor>a0d267efd775a84afe5517d3b06ce2c37</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_num_spectra</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SHARCInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_instrument.html</Path>
    <Anchor>a9507c9ddf97642c26f3330c82c8796cb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_spectra</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SHARCInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_instrument.html</Path>
    <Anchor>af2ec2e13a44513a382a615dfa9bef189</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_from_TOC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_instrument.html</Path>
    <Anchor>a631f05cc3f4ddd95c7bb940f31ff68e7</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SHARCLibrary</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Abstract>SHARC library class. </Abstract>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SHARCLibrary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>a4f1795faf8e1f711657c8d38b7843eb4</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SHARCLibrary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>ae010dffee657c306ac5f996087de91bf</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SHARCLibrary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>a78db1076a5d5436feeb5bc21cda2a058</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instrument_names</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>aade54c36604860293e740e514df7df02</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instrument_named</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>adc139f02b9751731ce9df04368e69cd7</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spectrum_named</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>ace88d55e5cb50098ed6389c84354ccc1</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>a1398374b6572004cd451fa265c8b48c6</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump_stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>a0d31d883fd55d49cabe5871e5b184bc2</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump_example</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>a13bb6f5b43857c3463fc49f3ca72b4a2</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadDefault</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>aef99eefb1b7cd32ba6ab8f9ef169db85</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>library</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>aed770922a12837897741f26b00fe3023</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>a8b75e2b78f39cc918e3ed32c4ec82512</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>a5b7ffbb7fd4cc73f5634344556a55240</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spectrum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>a64e30953c02258a203f83368d7b4a1c6</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spectrum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>ae136a4f67585a6f9ca4b6513f1dea58a</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spectrum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>a85699b42401ceabaeb0b5feb40c0b796</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_num_instruments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>a130d604908f6186dc0f069e0dbcbaefc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_instruments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>a424e727647ec377a3e23903c73ae0a68</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sSHARCLib</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>a423165b4757198d96df93771ab140dc6</Anchor>
    <Abstract>The protected single instance of the HRTF Database. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_from_directory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCLibrary</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_library.html</Path>
    <Anchor>aefba5b4d415534672207f8a9b5878f05</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SHARCSpectrum</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SHARCSpectrum</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_spectrum.html</Path>
    <Abstract>SHARC spectrum class. </Abstract>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SHARCSpectrum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCSpectrum</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_spectrum.html</Path>
    <Anchor>af5154041597f22ff432d8207875864fe</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SHARCSpectrum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCSpectrum</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_spectrum.html</Path>
    <Anchor>a448a641791ed62e4c32e8b4e6368336f</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read_from_file</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCSpectrum</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_spectrum.html</Path>
    <Anchor>afd8592b4a0589138243ed4c24e2e051e</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count_partials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCSpectrum</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_spectrum.html</Path>
    <Anchor>a0d3247f3fb4890b414c61fc767893b1c</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump_example</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SHARCSpectrum</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_spectrum.html</Path>
    <Anchor>add29f56aadbcffd51fb427740b844894</Anchor>
    <DeclaredIn>SHARC.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_note_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SHARCSpectrum</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_spectrum.html</Path>
    <Anchor>ab6efba78609dc5e94ea333ab4352d4d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_midi_key</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SHARCSpectrum</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_spectrum.html</Path>
    <Anchor>a686fdcc2fe4056db6ae9690a45349134</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nom_pitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SHARCSpectrum</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_spectrum.html</Path>
    <Anchor>ad290d565fb0f462e9c87130749f4d548</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_actual_pitch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SHARCSpectrum</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_spectrum.html</Path>
    <Anchor>a4ff268690cd4df5239a755e43de1c747</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_max_amp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SHARCSpectrum</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_spectrum.html</Path>
    <Anchor>a3897c6457b5f43b4c178335e3b7d3f5a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_num_partials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SHARCSpectrum</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_spectrum.html</Path>
    <Anchor>a9aae6f3c2ab3824537748223976ae90d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_partials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SHARCSpectrum</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_s_h_a_r_c_spectrum.html</Path>
    <Anchor>ad0c0ee21134a46615de1c81348dcb661</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::ShoeBox</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ShoeBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a47c153c5d4c082bae9605149bbbfe29b</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ShoeBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a2101066970acc1f5397a6de16a7cea81</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSourceLocation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a49b30532716aef4fa4085d5ac2b7bd6f</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setListenerLocation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a4ddb36b3ce492e8674e612ba5abb0685</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoomSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a17a064710814a17e35d43522880d4c02</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>roomSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a949911d4d5184d9ae1976ebc0cf90b93</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>source</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a5ad7684d2dc21b2058c519f8569eff48</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>listener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a9fba4c947f02cecd7a25cc31c0a49ac9</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWallMaterialsDamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a614b5516dd9baf9b42fbfa0f642a2e5a</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>ad43dcc0883e3a82fca4de6635fbfcd38</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReflections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a79b6430309f87bb21645a56055710d73</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculateReflections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a83760f103ad0cefac3a92f453351db3e</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findNumReflectionsFromTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a26a79533916e72d80e8a6a3c06aedf4d</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shellSort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a4eb80710b00686c2486f9417a4fa1e6b</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkPositionValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>afa9dc01fda3d39613bfc2e2d493d4f42</Anchor>
    <DeclaredIn>ShoeBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRoomSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>ad9552c150d9b2ba5ef3d29efb783dfbd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>aa65f1875b2bd4f75a7a315de1d7af643</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mListenerPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a46474da3323fda609286b062b53d1cb4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDampX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>adfa441b47c9b39d21f3dcdeddf101666</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDampY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a11db0b7bc5189988d0de83d5b5d6d791</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDampZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>ab18e201a1298e25604c9e26c8564bfe7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mReflectionsArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a0e08be200fbaad8ac38aaee8609c1928</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGainsArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a6d471dfd83d1d12a1cbf8bfa893d74d2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAnglesArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a4ed86d7f8d2a71d907dbddccbcaaf81b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a87df23a576b052e63109f78c0ae6eb2b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumReflections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a9d2a9aabe81898502c05c1aefb6cd4a1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMaxBouncesX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a8811a2e92636410f5b5aff2eff6c062a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMaxBouncesY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a2acd2521c946148b27ce2cdafcd9b8ee</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMaxBouncesZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::ShoeBox</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_shoe_box.html</Path>
    <Anchor>a3107a125ec60835cdc2ba7afcab16485</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SimplePanner</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Abstract>Simple Panner. </Abstract>
    <DeclaredIn>SimplePanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimplePanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>afb30d74627b6b5560bdf0e9a9b8c40ef</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>SimplePanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SimplePanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>ae36c855bb739f672a5617562165317ac</Anchor>
    <DeclaredIn>SimplePanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>ae2419392c8d005cb8289f1826c9990fd</Anchor>
    <Abstract>Implement Panner&amp;#39;s addSource, inserting a panner to each source. </Abstract>
    <DeclaredIn>SimplePanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>a94a240d63d3a8908c6945dc3d18007f9</Anchor>
    <Abstract>Remove a sound source. </Abstract>
    <DeclaredIn>SimplePanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>a7bf3ff3789609236564ee1ad0ab05e56</Anchor>
    <Abstract>fill the buffer with the next buffer_length of values </Abstract>
    <DeclaredIn>SimplePanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimplePanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>afb30d74627b6b5560bdf0e9a9b8c40ef</Anchor>
    <DeclaredIn>SimplePanner2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SimplePanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>ae36c855bb739f672a5617562165317ac</Anchor>
    <DeclaredIn>SimplePanner2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>ae2419392c8d005cb8289f1826c9990fd</Anchor>
    <Abstract>Implement Panner&amp;#39;s addSource, inserting a panner to each source. </Abstract>
    <DeclaredIn>SimplePanner2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>a94a240d63d3a8908c6945dc3d18007f9</Anchor>
    <Abstract>Remove a sound source. </Abstract>
    <DeclaredIn>SimplePanner2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>a7bf3ff3789609236564ee1ad0ab05e56</Anchor>
    <Abstract>fill the buffer with the next buffer_length of values </Abstract>
    <DeclaredIn>SimplePanner2.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a681b55756470d82ba0c2bd938eed2616</Anchor>
    <Abstract>Set the speaker layout to be used by this panner. The panner will request the default layout if not s...</Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ad0d4c19bff2cf93f663929138b9d4f46</Anchor>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ae50d5734f1e3594201bf8ddb55b5f6b3</Anchor>
    <Abstract>Called when the speaker layout changes. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a26a1956b527dd6476a516f01cf6fcf7e</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a8ef58a48644074a87b9ad63a99d68240</Anchor>
    <Abstract>virtual destructor (don&amp;#39;t notify or delete observers in this version) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a084498ac68190916f37d5922f5bf7b6c</Anchor>
    <Abstract>key selector (e.g., MIDI chan) I receive update() mesages from my model; </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a45bd029de329ef1c2374b3721a87978f</Anchor>
    <Abstract>create the cache </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speakerLayoutChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ac52ed2037d08a4c02fc71f2c25945f2d</Anchor>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDryMix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>ae68fcd8d71af8ae78feb48b9d60fb955</Anchor>
    <Abstract>direct send mixer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFiltMix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>abf0da80d25631173bff6ba051971dcf7</Anchor>
    <Abstract>LPF filter send mix. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRevMix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>a1e1c9c4fdff3f23170589c878d6e6e6d</Anchor>
    <Abstract>reverb send mixer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFiltSplit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>a4a648bec26ef16c0eb01d3d7e0b5569f</Anchor>
    <Abstract>stereo-to-mono splitter (for filters) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRLPF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>aa7d92e4b38d91bc7590e8360fb5a5345</Anchor>
    <Abstract>left &amp; </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLLPF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>a773d37eb3443dc1082ce88772b8b710b</Anchor>
    <Abstract>right lo-pass filters </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFiltJoin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>a4fd8f097397897004a28a0ec77a10459</Anchor>
    <Abstract>mono-to-stereo joiner (for filters) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mReverb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>af35753550d0aeb84bf9cbd876b90db13</Anchor>
    <Abstract>stereo freeverb </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutMix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>aa919ab05ea5341bc2806b7bb741b3369</Anchor>
    <Abstract>master output mixer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPanners</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>a936bb0a24da33b289a6850d694d1b0cc</Anchor>
    <Abstract>Vector of pointers to the panners. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPanners</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>aba17686d5fc0851519b14d8e74253bca</Anchor>
    <Abstract>Vector of pointers to the panners. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFanOuts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SimplePanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_panner.html</Path>
    <Anchor>a513e70befa2105b637f2110000e6be1b</Anchor>
    <Abstract>Vector of pointers to the fan-outs. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a470567e2f64564c4ec0c80bc6faaaa97</Anchor>
    <Abstract>SpatialSource... refers to its input UGen, but with the knowledge of its position within a space...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a7165ffb7e0fe7fe6454409f9ac8ff50a</Anchor>
    <Abstract>Vector of pointers to the prior I/O data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a0a81e9957bf271e336e8efc6a5381bb0</Anchor>
    <Abstract>If null, it will use the default layout by calling SpeakerLayout::defaultSpeakerLayout();. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTempBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a3d4d8e6502c2528597973f344b3acc37</Anchor>
    <Abstract>Buffer used to temporarily hold input source data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SimpleSine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SimpleSine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_sine.html</Path>
    <Abstract>SimpleSine – The simplest CSL sine oscillator class. </Abstract>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleSine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SimpleSine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_sine.html</Path>
    <Anchor>a4cff208cc27e3a060426d5aa4a8da124</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleSine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SimpleSine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_sine.html</Path>
    <Anchor>a34edee8303adb1d339bc2196015c7287</Anchor>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleSine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SimpleSine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_sine.html</Path>
    <Anchor>a2d01e2028bd2736f9244ab54071d45d0</Anchor>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SimpleSine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SimpleSine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_sine.html</Path>
    <Anchor>a4ceb4b494ee32fceae8ccc6e8969cde8</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SimpleSine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_sine.html</Path>
    <Anchor>a24d0b9b48d67e135f477280036d71c47</Anchor>
    <Abstract>the monoNextBuffer method is where the DSP takes place </Abstract>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SimpleSine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_sine.html</Path>
    <Anchor>adfbe1872e2550e6097e7c2bcecba9cff</Anchor>
    <Abstract>my frequency value in Hz </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SimpleSine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_simple_sine.html</Path>
    <Anchor>a9a29df9ba6274777fa1a8a963d03bfc9</Anchor>
    <Abstract>my instantaneous phase in Radians </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Sine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Sine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine.html</Path>
    <Abstract>Sine – oscillator class (this computes the sine fcn on the fly) </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Sine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine.html</Path>
    <Anchor>a84270e42895269c1b6d126b385200fba</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Sine</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine.html</Path>
    <Anchor>aa5f7a0154bb37d84550c85a607e1068e</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Oscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_oscillator.html</Path>
    <Anchor>a25d694e0f48fc848ef49efb1908e6930</Anchor>
    <Abstract>print the receiver for debugging </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SineAsPhased</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SineAsPhased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine_as_phased.html</Path>
    <Abstract>SineAsPhased – A sine oscillator that uses the Phased mix-in class, meaning that we inherit mFrequen...</Abstract>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SineAsPhased</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SineAsPhased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine_as_phased.html</Path>
    <Anchor>a1fe76f341525492251b4cdd529c36ab8</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SineAsPhased</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SineAsPhased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine_as_phased.html</Path>
    <Anchor>a7d93c0adfe854f81ee18668a79b2c92a</Anchor>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SineAsPhased</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SineAsPhased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine_as_phased.html</Path>
    <Anchor>a6b5aad721faa5b06453f900f151d34f5</Anchor>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SineAsPhased</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SineAsPhased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine_as_phased.html</Path>
    <Anchor>ad57d7e4946e9c6c4b6f0e1443e88d864</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SineAsPhased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine_as_phased.html</Path>
    <Anchor>a1e6992eb9feddeb2f2a6cce93809983c</Anchor>
    <Abstract>the monoNextBuffer method is where the DSP takes place </Abstract>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SineAsPhased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine_as_phased.html</Path>
    <Anchor>a9dd27d913cc5c554edc852ab03c6aa23</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SineAsScaled</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SineAsScaled</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine_as_scaled.html</Path>
    <Abstract>SineAsScaled – A sine oscillator that also has scale and offset as dynamic controls (from Scalable) ...</Abstract>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SineAsScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SineAsScaled</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine_as_scaled.html</Path>
    <Anchor>aef985265ddd2a497c4e8d49c52e91cfe</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SineAsScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SineAsScaled</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine_as_scaled.html</Path>
    <Anchor>a7194d127ea2069e69c12ce7c1dac53fe</Anchor>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SineAsScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SineAsScaled</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine_as_scaled.html</Path>
    <Anchor>a3ba0b542eed07886e06ac9cfb8bee254</Anchor>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SineAsScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SineAsScaled</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine_as_scaled.html</Path>
    <Anchor>a9704ba54618213013bc4d59dc109652b</Anchor>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SineAsScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SineAsScaled</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine_as_scaled.html</Path>
    <Anchor>aecb79ee5e54d3eeb8450d50013e89afc</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SineAsScaled</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine_as_scaled.html</Path>
    <Anchor>a2f9cc7a55bad361660196f2d298831e0</Anchor>
    <Abstract>the monoNextBuffer method is where the DSP takes place </Abstract>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SineAsScaled</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sine_as_scaled.html</Path>
    <Anchor>a745db6a224239404a783a7fca0e78503</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>SimpleSines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SndFileInstrument</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Abstract>Sound file player instrument. </Abstract>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SndFileInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>af1145db3f9e4b5f353c36454b41e312a</Anchor>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SndFileInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a4144ec26d10b1a8e1cc1355d2a02c30f</Anchor>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SndFileInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>af63afd300fcc4c53de108e9a678856f9</Anchor>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a2f5d77834a2385ca2e2112509a02de2d</Anchor>
    <Abstract>Plug functions. </Abstract>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>play</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>ace1032b0747c57fcc4662c4c057f245c</Anchor>
    <Abstract>play note </Abstract>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playOSC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a1c275c4e46358f644c2f154bc42def70</Anchor>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>acdc7d8038a6436e1749f7dac4e90ce25</Anchor>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playMIDI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>aef74cff39b56ac6a71b25f82358e123f</Anchor>
    <Abstract>These are the UGens of the DSP graph (i.e., the sndfile player instrument) </Abstract>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>afa6f111dc85dab7a7bdf5e2cc6c165af</Anchor>
    <Abstract>Accessors. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a79aab7d10f67e121641d09224eb230bb</Anchor>
    <Abstract>my UGen graph </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>envelopes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a58dc9b22696af5314e391ed1212782c6</Anchor>
    <Abstract>the map of ugens in the graph by name </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a2714d7d2ec9c9dc7008e81b31e423f1b</Anchor>
    <Abstract>the vector of envelopes to query or trigger </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genNamed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abccad2cc3a254ae6bac8c660f7518778</Anchor>
    <Abstract>answer my name answer the number of channels </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abeb0b477a2388f8c7a2b41e87ad24c01</Anchor>
    <Abstract>Accessor management. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ae5f78c65cf53af61bbdcc3a8e228f947</Anchor>
    <Abstract>answer the accessor vector </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a751268fdb83b44806a6f0b745400fce5</Anchor>
    <Abstract>set a named parameter </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a05fbcc14ac4a0cd792e85aff09147b3b</Anchor>
    <Abstract>Envelope query and re-trigger. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a1b783961f66930972f30e242139be90f</Anchor>
    <Abstract>Play a note (subclasses refine) </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playMIDI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a71832a951ab951581b40817dd350ee88</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abffd98c97971ef8ec4c893f8d019e3c1</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPlayer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a0feefb6c989733d553ee0fd155e5b623</Anchor>
    <Abstract>sample player </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnvelope</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a74ace615cc6a68303f6d77e8c1cdb886</Anchor>
    <Abstract>AR envelope. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a47bcb903cc161dba558507c708b4b6fa</Anchor>
    <Abstract>stereo panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a3af3700bc55e2eb91f209e73d1867b9e</Anchor>
    <Abstract>plugs playback rate (ignored for now) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a843469ec1190435c1b186b4ea0683124</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a6c2f5c468b4dfed2899c0d00bfbef5d1</Anchor>
    <Abstract>start/stop sample indices </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SndFileInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_snd_file_instrument.html</Path>
    <Anchor>a16ddc37c677ce929088dab14906d95cf</Anchor>
    <DeclaredIn>SndFileInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a3685284d2311cfe1d10f38536c424666</Anchor>
    <Abstract>Caches. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a660770fe07dc68cb05f277ff03130ec5</Anchor>
    <Abstract>my name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUGens</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ab5af1851504b58a140055423100bc61a</Anchor>
    <Abstract>the map of ugens in the graph by name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnvelopes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a07ff212be08d5cc25fa2a328dd630188</Anchor>
    <Abstract>the vector of envelopes to query or trigger </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ad52424c33a5b87976186ef9e3f784a73</Anchor>
    <Abstract>the accessor vector </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SoundCue</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Abstract>SoundCue – a pointer to a segment of a sound file. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SoundCue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>a413838cade9cbbbc7749dc735ea630ba</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SoundCue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>aac99127e49718dbd3c247c6885b0b98b</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SoundCue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>ab202730d8fb777fdba03d368e5e95b3f</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>afdd877ce20a4f3a72c06efaee5d2d9d3</Anchor>
    <Abstract>for loading file lists </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>a681464905e043a17439af57af3aef98b</Anchor>
    <Abstract>pretty-print me UGen operations </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>ad93bb2956ac9c670fca1f1b51c4c5c1e</Anchor>
    <Abstract>copy next buffer from cache </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>af6f1b7f24f69de0ceb9e0c55e53c992b</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>a787bf499b9427e7eae9189e4fc0afb8b</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setToEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>a8f7be3354a18fd771853ea5a618d1a21</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>ad9b2860f5eef805ddcd063c1b98a61d2</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>affc4faa56c2d95995ff538bc77a7dd04</Anchor>
    <Abstract>duration in frames </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>ad00089bb39a910b2b64da6488007f43f</Anchor>
    <Abstract>my name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>a49c6dfe50f2e37ec3e17dfce3e68a595</Anchor>
    <Abstract>the file I point into </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>a662e470a74b87efde1f4dcc2ce11d0c9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>a0fbd015f815982e0057ad86035a76bca</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>a301589c5b6da23223779d6132be92056</Anchor>
    <Abstract>the start/stop samples I represent </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mReadRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>a6583a1016ab6bc2be2f2747873f3639f</Anchor>
    <Abstract>my playback rate </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFloatCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundCue</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_cue.html</Path>
    <Anchor>acfc1f3b479f940166d1ba37fae4ac800</Anchor>
    <Abstract>current pointer as a float </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SoundFileMetadata</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SoundFileMetadata</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_file_metadata.html</Path>
    <Abstract>Class SndFileMetadata holds the ID3 tags of a sound file. </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SoundFileMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SoundFileMetadata</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_file_metadata.html</Path>
    <Anchor>a31a00e872606c6828c160af664b930f2</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SoundFileMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SoundFileMetadata</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_file_metadata.html</Path>
    <Anchor>ac64282b646a083067e1960675f0a51d1</Anchor>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SoundFileMetadata</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_file_metadata.html</Path>
    <Anchor>ac180873569f0c5ca65e28757bc29deb2</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>SoundFile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundFileMetadata</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_file_metadata.html</Path>
    <Anchor>ab72d0648b9f4cd0437d3986016322975</Anchor>
    <Abstract>ID3 tag fields. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mArtist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundFileMetadata</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_file_metadata.html</Path>
    <Anchor>a593d5cdd4d8d34069fd9f5103ee8a420</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAlbum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundFileMetadata</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_file_metadata.html</Path>
    <Anchor>a7121a3346a8fc24d155c0e228e28e6d2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mYear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundFileMetadata</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_file_metadata.html</Path>
    <Anchor>a8fdda6d9d6711e68a9700d3d201389ab</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mComment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundFileMetadata</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_file_metadata.html</Path>
    <Anchor>a0e32b6bef3a5e01ca2322e107718018a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTrack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundFileMetadata</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_file_metadata.html</Path>
    <Anchor>aa87b42defb46209788f1c354c56c3e1d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGenre</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundFileMetadata</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_file_metadata.html</Path>
    <Anchor>af16ecd336903a265adf3133016724777</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBitRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundFileMetadata</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_file_metadata.html</Path>
    <Anchor>a31ae04ff17e89b2f7dd543f5b7e0e26a</Anchor>
    <Abstract>encoding data </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSampleRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundFileMetadata</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_file_metadata.html</Path>
    <Anchor>aceca304906394a27c1bf4ba87fa7d2b7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundFileMetadata</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_file_metadata.html</Path>
    <Anchor>a3e64636ef8e90ca0310723d0d559fc0c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SoundFileMetadata</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sound_file_metadata.html</Path>
    <Anchor>acfd978e85028dc9d6743268b38900076</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Spatializer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Abstract>Container class that simplifies the spatial audio interface. This layer hides most of the inner-worki...</Abstract>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Spatializer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>a21fab86362c5a76d7f4a34a4841f36d4</Anchor>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Spatializer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>ab8ce14101ee86bac530bc605101db683</Anchor>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>a54a1067751a42391200e5d1a7e10282c</Anchor>
    <Abstract>Add a sound souce to the list of inputs to be processed. </Abstract>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>a84bf103d5c94f0307877936e49f2e495</Anchor>
    <Abstract>Remove a Sound Source. </Abstract>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>a7a214d33c4ff2bf1061d450cf7b37634</Anchor>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPanningMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>a4bffbf5e792562babd26c315cf42081f</Anchor>
    <Abstract>number of active inputs. </Abstract>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>a3463e81630cbcbf5042b2b5db4af56ff</Anchor>
    <Abstract>called when the speaker layout changes, so panners update precalculated data. </Abstract>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>ae359a1092edcf16405d78d3db75aac9c</Anchor>
    <Abstract>fill the buffer with data :-) </Abstract>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a8ef58a48644074a87b9ad63a99d68240</Anchor>
    <Abstract>virtual destructor (don&amp;#39;t notify or delete observers in this version) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a084498ac68190916f37d5922f5bf7b6c</Anchor>
    <Abstract>key selector (e.g., MIDI chan) I receive update() mesages from my model; </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>a300d9eb2e3f673889357c8583fc9beaf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputsHashMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>a4980eff873f2b8c1a0aa413905273746</Anchor>
    <Abstract>a map between a source passed/key and a the corresponding distance simulator (used for removing sourc...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>ad41a6d236cd4710e267605f4b55d38c7</Anchor>
    <Abstract>If null, it will use the default layout by calling SpeakerLayout::defaultSpeakerLayout();. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Spatializer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatializer.html</Path>
    <Anchor>a498cc5f1b444f41a487a2cba264ffefc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SpatialPanner</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Abstract>Base class for all panners. Handles source management and holds a speaker layout. ...</Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpatialPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>abf934befad469f4061fff68246772639</Anchor>
    <Abstract>Constructor - a SpeakerLayout can be specified. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpatialPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ab6bdc2bbdfb9c4cb7b11ab7939abc9a6</Anchor>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a681b55756470d82ba0c2bd938eed2616</Anchor>
    <Abstract>Set the speaker layout to be used by this panner. The panner will request the default layout if not s...</Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ad0d4c19bff2cf93f663929138b9d4f46</Anchor>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a749e35896956fac6034e6c7904dd2b19</Anchor>
    <Abstract>number of active inputs. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a325baea355171ce19e7e385ed3ea0915</Anchor>
    <Abstract>Remove a Sound Source. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ae50d5734f1e3594201bf8ddb55b5f6b3</Anchor>
    <Abstract>Called when the speaker layout changes. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>acf29d6b9d52b2d47714b651aeb443213</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a26a1956b527dd6476a516f01cf6fcf7e</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a8ef58a48644074a87b9ad63a99d68240</Anchor>
    <Abstract>virtual destructor (don&amp;#39;t notify or delete observers in this version) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a084498ac68190916f37d5922f5bf7b6c</Anchor>
    <Abstract>key selector (e.g., MIDI chan) I receive update() mesages from my model; </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a45bd029de329ef1c2374b3721a87978f</Anchor>
    <Abstract>create the cache </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speakerLayoutChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ac52ed2037d08a4c02fc71f2c25945f2d</Anchor>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a470567e2f64564c4ec0c80bc6faaaa97</Anchor>
    <Abstract>SpatialSource... refers to its input UGen, but with the knowledge of its position within a space...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a7165ffb7e0fe7fe6454409f9ac8ff50a</Anchor>
    <Abstract>Vector of pointers to the prior I/O data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a0a81e9957bf271e336e8efc6a5381bb0</Anchor>
    <Abstract>If null, it will use the default layout by calling SpeakerLayout::defaultSpeakerLayout();. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTempBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a3d4d8e6502c2528597973f344b3acc37</Anchor>
    <Abstract>Buffer used to temporarily hold input source data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SpatialSource</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Abstract>Temp Spatial Sound Source. </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpatialSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a372690ac871d4a3efe3ed3d5a45398e3</Anchor>
    <Abstract>constructors </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpatialSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a729d3a081dd3de5b6b7b4f492e626b5e</Anchor>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpatialSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>aa3bd5b55fe6a25b405c92443c4b99be0</Anchor>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>acd4d1af29750bbbf3dec4077710abd9b</Anchor>
    <Abstract>Set the sound source position in cartesian coordinates. </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a5aa48e5f3723bd076d414b942e6694c7</Anchor>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a3b258beb9994faa666cf06ddc5a4521e</Anchor>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>ab62c2f73307a46c685f6bbf9e6ccee61</Anchor>
    <Abstract>Set the sound source position in spherical coordinates (degrees). </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>acb2fe5850fb2185cc8a6a10bb934c27f</Anchor>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>ad345f9c204a61d03e32613160f079845</Anchor>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAzimuth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a4c3ba6f962b1cb6456282c27acc442c7</Anchor>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setElevation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a794598f06292e9565a7c3f6a47e41002</Anchor>
    <Abstract>Sets the horizontal angle. </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a5e79d27a40ff1732ffb61ade823558a7</Anchor>
    <Abstract>Sets the angle of elevation. </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>azimuth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a94f64991105b577d21dbea2813dd572b</Anchor>
    <Abstract>Sets the distance from the center. </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elevation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a87ef3ae0806f0c40b60142d371c9dd91</Anchor>
    <Abstract>Returns the horizontal angle. </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>distance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>abdddcb67e25d5475236df1385bea1718</Anchor>
    <Abstract>Returns the angle of elevation. </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>afd6d64625667ce764c32372b94c9bc2d</Anchor>
    <Abstract>Returns the distance from the center. </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>positionChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a0702ce592257d70511b2f0c0c126e401</Anchor>
    <Abstract>Returns whether the sound source position changed since last block call. </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a6cdcdcbf406223dc41b2406f95e7c78f</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a52f3f0c291c6cd7cda47898ae28ec7b6</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>acfd03d1d592b31255e782b4af83e01c8</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>SpatialSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>a6feaaeafa3d2a04bf9afcc5aa251ac5c</Anchor>
    <Abstract>source position </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPositionChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialSource</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_source.html</Path>
    <Anchor>ad5f5cfd9c0cf04f5183371fb1f96d6e1</Anchor>
    <Abstract>true if this source&amp;#39;s position has changed recently </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Speaker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Speaker</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker.html</Path>
    <Abstract>Represents a speaker as a position relative to the center of a space. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Speaker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Speaker</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker.html</Path>
    <Anchor>a940a14236dac28cdbfdc1e65681be8e5</Anchor>
    <Abstract>Speaker constructor. The speaker class should only be used by the speaker layout. Clients should modi...</Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Speaker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Speaker</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker.html</Path>
    <Anchor>a19b551d00e461dd437c6996198b44c8a</Anchor>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Speaker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Speaker</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker.html</Path>
    <Anchor>a7fcb9f8fb3daa919306e5c861bf19f34</Anchor>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Speaker</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker.html</Path>
    <Anchor>ab7354cba31c4cdc6e344965692e85ca6</Anchor>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>azimuth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Speaker</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker.html</Path>
    <Anchor>a389cd93dc9a4e74835b182263345caec</Anchor>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elevation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Speaker</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker.html</Path>
    <Anchor>ae163084aee9edf4b6b1baaddd887f4e3</Anchor>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Speaker</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker.html</Path>
    <Anchor>ab85a415243fb14c5e360d6e083a100d5</Anchor>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Speaker</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker.html</Path>
    <Anchor>a59b74a50ee8ccee88bb44b4452bd5207</Anchor>
    <Abstract>Specify the distance from the center of the coordinate space to the speaker. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Speaker</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker.html</Path>
    <Anchor>a670101712e00218bac1d3c2a0c749f60</Anchor>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speakerGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Speaker</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker.html</Path>
    <Anchor>a3c17889c41808e99be62eee57a6fda6a</Anchor>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Speaker</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker.html</Path>
    <Anchor>a7f4fdee9a48052f607e65c513eff12f9</Anchor>
    <Abstract>Print speaker information. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Speaker</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker.html</Path>
    <Anchor>a401a0f687d0f6791d0813dd2c3661450</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNormal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Speaker</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker.html</Path>
    <Anchor>a22ec7fedfa740bfdddb2d8d91b46e8f6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Speaker</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker.html</Path>
    <Anchor>a1c7117f9c340b57af1702e82354adb15</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SpeakerLayout</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>ace095bfc15c6cf150b27c93e3ee352ef</Anchor>
    <Abstract>Creates an empty speaker layout. Optionally reads loudspeaker layout from file. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a3bb35fdc5cd2f87e3bad9c384f050de6</Anchor>
    <Abstract>destructor </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSpeakerFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a017891c8313dbba316bb94c9cac1db12</Anchor>
    <Abstract>Reads the speaker listing file according to the specification. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeaker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a376e8e55b302290fdde04ae0f241291b</Anchor>
    <Abstract>Add a speaker specifying its position in degrees from the center of the listening space...</Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeaker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a4d917971d819e301fb879b930cc07ac7</Anchor>
    <Abstract>Add a WFS speaker. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numSpeakers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a336116418cb1cc2378d1c3190cb31655</Anchor>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalizeSpeakerDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a2a31a11fc6a25bb75280a4fb3764bfc0</Anchor>
    <Abstract>Returns the number of loudspeakers in the layout. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speakerAtIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>adf7a944e4b1954c6ad0fae60b69ca66a</Anchor>
    <Abstract>Returns the speaker at the specified index. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPeriphonic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a205bebcaec7fa55da24e9fb9aeecd191</Anchor>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a896276154013f08ea0c4ba34d5693a14</Anchor>
    <Abstract>If any of the speakers in the layout has an elevation other than 0, it returns true. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>acdce0a2ed802250e460b1fcdce701c9f</Anchor>
    <Abstract>Overloaded &quot;=&quot; operator allows copying the layout. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>ad897b481f5e8f5b5a8b230b682371355</Anchor>
    <Abstract>Returns a pointer to the default layout. If no default exists, it creates one. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>af145986c3817a8008ca94973c75f63b3</Anchor>
    <Abstract>Use it to set a layout as default. Clients (e.g. a Panner) can then make use of this layout...</Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a9d0c736d505946d732683bbca8fee74c</Anchor>
    <Abstract>Vector of pointers to the loudspeakers. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a66a219ac5eebcbb2e2025a717b9e7dab</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakerDistanceDeltas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>af594e586481e1794d93e778b48c1785f</Anchor>
    <Abstract>Holds the diference of the optimal speaker distance and the real one. Only used if distances are norm...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sDefaultSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a2f3f1fe5aa3e87267ddda9ae581d77a2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SpeakerLayoutExpert</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SpeakerLayoutExpert</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout_expert.html</Path>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeakerLayoutExpert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayoutExpert</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout_expert.html</Path>
    <Anchor>ab6f987f89924d712e6f8538170105f04</Anchor>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpeakerLayoutExpert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayoutExpert</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout_expert.html</Path>
    <Anchor>ac8ac0aa0fbade5ed4e9c59dbac078ab2</Anchor>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findPannerFromLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::SpeakerLayoutExpert</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout_expert.html</Path>
    <Anchor>abbba87203e2367ce8f9acfd6bce7a2c8</Anchor>
    <DeclaredIn>SpatialAudio.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SpeakerSet</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SpeakerSet</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set.html</Path>
    <Abstract>Groups two or three loudspeakers, and their inverse. Used for VBAP computations. </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeakerSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerSet</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set.html</Path>
    <Anchor>a27e94fcb987f17156ccb63a698d00dd9</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpeakerSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerSet</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set.html</Path>
    <Anchor>afc36b03636ddf384711a075a66d541bd</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerSet</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set.html</Path>
    <Anchor>ac19d9134e18b96a29ffb4cee386679d6</Anchor>
    <Abstract>just print friendly info about the triplet </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpeakerSet</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set.html</Path>
    <Anchor>a7faf38c3c25fd8790d93aec2bf9b326d</Anchor>
    <Abstract>the index for each of the three speakers that represent the triplet </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpeakerSet</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set.html</Path>
    <Anchor>a19f973364771af3fcce16794761e473f</Anchor>
    <Abstract>pre-computed inverse matrix for this triplet </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SpeakerSetLayout</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SpeakerSetLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set_layout.html</Path>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeakerSetLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerSetLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set_layout.html</Path>
    <Anchor>a163a7023a0e7bf2ca20cbc96ba9269f9</Anchor>
    <Abstract>Constructors &amp; destructor: </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpeakerSetLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerSetLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set_layout.html</Path>
    <Anchor>ab5f0571c1d72132d5826b410ddb8afe5</Anchor>
    <Abstract>destructor </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerSetLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set_layout.html</Path>
    <Anchor>a57982c82ca9b1bca3ee2683f8760c54c</Anchor>
    <Abstract>Returns the Speaker Layout used to find the triplets. </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerSetLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set_layout.html</Path>
    <Anchor>a4ba04e6d04193a08590a19b98075d2c4</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeakerTriplets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerSetLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set_layout.html</Path>
    <Anchor>a249de9d73d65ea040286627882bdbfcb</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeakerPairs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerSetLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set_layout.html</Path>
    <Anchor>a04e99c8b5eafb68c95a6bcce5813999d</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invertTripleMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerSetLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set_layout.html</Path>
    <Anchor>ace9e91b096cc67c06a0e6cae623a3562</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTriple</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerSetLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set_layout.html</Path>
    <Anchor>a575c489969f83107257a95c7f45203a8</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTriple</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerSetLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set_layout.html</Path>
    <Anchor>a7cfd7fe8d36b063c0aa12e0d16e5681b</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluateCrossing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerSetLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set_layout.html</Path>
    <Anchor>a046b376dbe61cf9a13efebb6e7b78505</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTriplets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpeakerSetLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set_layout.html</Path>
    <Anchor>a54ec41778dc2a479d3b5a54d38baec15</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpeakerSetLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set_layout.html</Path>
    <Anchor>a93ce13d6491e4d7c2748037a8af2bfb8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTriplets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpeakerSetLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set_layout.html</Path>
    <Anchor>afc8ea9b6c3ef2880d6d41198f18837bd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpeakerSetLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set_layout.html</Path>
    <Anchor>a86c79283f49f5208cd74fbcbbe2a9a4f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VBAP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>csl::SpeakerSetLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_set_layout.html</Path>
    <Anchor>a7e0d922f78f163228e95c6eccfc36b9f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Splitter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Splitter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_splitter.html</Path>
    <Abstract>Splitter class – a de-multiplexer for multi-channel signals. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Splitter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Splitter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_splitter.html</Path>
    <Anchor>a755b03cdd8699bdd2607685e7566f62d</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Splitter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Splitter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_splitter.html</Path>
    <Anchor>a4859c173233a61e089c9e9896d67f752</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Splitter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_splitter.html</Path>
    <Anchor>a3dfc8399f10227a9b02d8d24dfef1530</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Splitter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_splitter.html</Path>
    <Anchor>a0dbd021da14039d2414d1b976f42b33f</Anchor>
    <Abstract>I&amp;#39;m mono nextBuffer processes splitter channels. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Splitter</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_splitter.html</Path>
    <Anchor>ac768564390313eabbbb2334dcdf7b21e</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FanOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fan_out.html</Path>
    <Anchor>af2b2c78ff80baebb540e45ba476a0cfe</Anchor>
    <Abstract>my temp buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFanOuts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FanOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fan_out.html</Path>
    <Anchor>a7d6ba642afac2f3704f2cb24696116f7</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::FanOut</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_fan_out.html</Path>
    <Anchor>aa5336c0beef1bc94a4531f616a75ecbd</Anchor>
    <Abstract>the current output </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Square</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Square</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_square.html</Path>
    <Abstract>Square oscillator class (non-band-limited) </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Square</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Square</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_square.html</Path>
    <Anchor>ad9b91f7cad8ed927e4eefb245313fbd6</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Square</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_square.html</Path>
    <Anchor>ac824d1904009b4253a499650838fbb3f</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Oscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_oscillator.html</Path>
    <Anchor>a25d694e0f48fc848ef49efb1908e6930</Anchor>
    <Abstract>print the receiver for debugging </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SquareBL</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SquareBL</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_square_b_l.html</Path>
    <Abstract>Band-limited square, impulse, and triangle waveform oscillators. </Abstract>
    <DeclaredIn>OscillatorBL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SquareBL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SquareBL</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_square_b_l.html</Path>
    <Anchor>a8c22edbfc9544eabce9fae9f8ad29fc9</Anchor>
    <DeclaredIn>OscillatorBL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SquareBL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SquareBL</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_square_b_l.html</Path>
    <Anchor>aef76d856a3de2f127a50b0ea0e8b8968</Anchor>
    <DeclaredIn>OscillatorBL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SquareBL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SquareBL</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_square_b_l.html</Path>
    <Anchor>a9757cbe759ade902bd7c7d2c71ef629d</Anchor>
    <DeclaredIn>OscillatorBL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextWaveInto</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SquareBL</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_square_b_l.html</Path>
    <Anchor>a9abaf9eebdf8b91384271a8083080b6a</Anchor>
    <DeclaredIn>OscillatorBL.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPartial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a07271534bfb96487932e2019acf27789</Anchor>
    <Abstract>given a SHARC spectrum </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPartial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a2bf6e2d723936ee13bb794efa20ef547</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPartial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a4d93920445a8c99379fb67b43688a472</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPartials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a140219804a649ce85c85daf3b8be9728</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPartials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>aad6eaec4bb2af9d17898963ee2ab496a</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearPartials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a503eb3311fa9607a8b68f2d76d9d1442</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a5a527e517b025e97aee6e375562c1716</Anchor>
    <Abstract>print the receiver for debugging </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CompOrCacheOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comp_or_cache_oscillator.html</Path>
    <Anchor>a7b2d8566da94606463138cc668f77f63</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWaveform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a3f201809be66f80f23b50161f0deaed9</Anchor>
    <Abstract>plug in waveforms set the interpolation flag </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a246e451b9ccaa15d818c4417adfb7cf9</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a1d37712b7fd137dab432d733003eca71</Anchor>
    <Abstract>whether/how I should interpolate between samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWavetable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a926e9d03bb39119f4c0992143cb3baaa</Anchor>
    <Abstract>the stored wave form </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUseCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Cacheable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_cacheable.html</Path>
    <Anchor>a7e865d55361ee4b836489340b0da91e2</Anchor>
    <Abstract>whether I&amp;#39;m to cache (vs. compute) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextWaveInto</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a8a26baff7384ceeb3a7617d1e49130fc</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CompOrCacheOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comp_or_cache_oscillator.html</Path>
    <Anchor>a42a7b273bce5e23aa53da5d4c57d1f63</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillSine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a983c39e543ebf3781e4b99bb7573eb05</Anchor>
    <Abstract>fill the shared wavetable with 1 cycle of a sine wave </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPartials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>abaf7ccec6a861e4cc6cb2b5484c21ff0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::StaticVariable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::StaticVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_static_variable.html</Path>
    <Abstract>StaticVariable – he static external variable (plug) class. This is a kind of variable that holds ont...</Abstract>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticVariable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StaticVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_static_variable.html</Path>
    <Anchor>a4ead25f7099a7401a263746fb2da37a0</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticVariable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StaticVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_static_variable.html</Path>
    <Anchor>a8ea0a9257e8071293957fdab88c75eb6</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticVariable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StaticVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_static_variable.html</Path>
    <Anchor>a57ae11c3b0ecd27016c6903c96969610</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StaticVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_static_variable.html</Path>
    <Anchor>aeb35998b3c6411e431573c8e20152e36</Anchor>
    <Abstract>this what being a static variable means! </Abstract>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StaticVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_static_variable.html</Path>
    <Anchor>afe606a5aeed607b50cf0c4f2989c36d5</Anchor>
    <Abstract>versions of nextBuffer </Abstract>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StaticVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_static_variable.html</Path>
    <Anchor>af7f5c3db82273f79daafa03ac1bac7c7</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StaticVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_static_variable.html</Path>
    <Anchor>ab2042c5ab7290894fac66bf4b4b457aa</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StaticVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_static_variable.html</Path>
    <Anchor>a7e3652052dd548937c5ced3b98ebb10f</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StaticVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_static_variable.html</Path>
    <Anchor>a1ebb71602594e782dec5782407ed47a5</Anchor>
    <DeclaredIn>Variable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CVariable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_variable.html</Path>
    <Anchor>a1b88d0bcbc802365dbaf362cb572fff3</Anchor>
    <Abstract>the value I represent </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::StdIO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::StdIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_std_i_o.html</Path>
    <Abstract>StdIO reads/write the UNIX Standard IO pipes. </Abstract>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StdIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StdIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_std_i_o.html</Path>
    <Anchor>a9084f2936f5a582ae3ad7674d4dc8bf6</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StdIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StdIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_std_i_o.html</Path>
    <Anchor>adc7c4c5977bd028399481ed571a15bc2</Anchor>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~StdIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StdIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_std_i_o.html</Path>
    <Anchor>a917f4df8217e4740265db5b2cc8edce6</Anchor>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StdIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_std_i_o.html</Path>
    <Anchor>a7b7188d14ff64f3639a04820352e232e</Anchor>
    <Abstract>start my timer thread </Abstract>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StdIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_std_i_o.html</Path>
    <Anchor>a652e7e5d19d464a75de8ebcb9e562dcd</Anchor>
    <Abstract>stop the timer thread </Abstract>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Anchor>a1f193f08e260bc8f4d8da6b6766525d6</Anchor>
    <Abstract>Get the current input from the sound card. </Abstract>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Anchor>a35843ffb526fba786afec82232f8ad5c</Anchor>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>ac4c3014e44149b9dc5249f508ac86041</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a82ce520fe4291d76c74691cbcf67dc00</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6a8d3350db4f0b632509e6cbcf81b5c9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_on</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a33d3dfbf6b9de273c70491e4ed3540c0</Anchor>
    <Abstract>test the IO&amp;#39;s graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_off</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a29d83e9b6fc2610ea3cbac33588b9dcf</Anchor>
    <Abstract>end output capture </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_capture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0ce9f71e62551b921a17869f0d4ea3c8</Anchor>
    <Abstract>answer the capture buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0cd73786ea896b62cf0ec3e3e0367dd8</Anchor>
    <Abstract>set/clear my graph root generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a538b273c6de621b2e38266e6216bde1c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7cca2bf79735626d7ab93684554e0bff</Anchor>
    <Abstract>get a buffer from the CSL graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAndIncrementSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af2075a50a32bf0cfddae3183b37e0959</Anchor>
    <Abstract>increment and answer my seq # </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printTimeStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc6975037c1beec8dadf8f4bb1405549</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ThreadPthread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_thread_pthread.html</Path>
    <Anchor>a7d9287dd8c3c4cacb05d7f708467787d</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>a11c4989c89eca30879560ba5f1cae55c</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MakeThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>a46654594fd296962e4162cc71ee158e3</Anchor>
    <Abstract>factory method </Abstract>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af8690c5e8a8f34a0b10b74f3cd066063</Anchor>
    <Abstract>the root of my client DSP graph, often a mixer or panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a688331f6e9a2b1356f545d2ace55f41a</Anchor>
    <Abstract>the most recent input buffer (if it&amp;#39;s turned on) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a3c5d6efa6e7750baa2c271bb075b476c</Anchor>
    <Abstract>the output buffer I use (passed to nextBuffer calls) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCaptureBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a795d3c1ee90a4cdcd802b4592beb97d4</Anchor>
    <Abstract>the output buffer I use for capturing output (for testing) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afff5975d365381be5385ebe15b3a7bd2</Anchor>
    <Abstract>the buffer for holding the sound card input (if open) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChannelMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc83a0ce4a361d076eea2e657e256683</Anchor>
    <Abstract>the output channel remapping array </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFramesPlayed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7b84206149d0f23fee4669838291f222</Anchor>
    <Abstract>counter of frames I&amp;#39;ve played </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afc645076ff45980d4b9d8c2209f55850</Anchor>
    <Abstract>sequence counter </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLoggingPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a297e157c9f133ea1d9face8f08165478</Anchor>
    <Abstract>logging period in seconds </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a5e0be8bcb1d550c798d0cd12885754a7</Anchor>
    <Abstract>inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa384e814fb13e794b11f6ece70c37f21</Anchor>
    <Abstract>outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa00a157f1e87264998ba876740e80448</Anchor>
    <Abstract>physical inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a42b4e4ef54d1ae1f5a35bf962767608d</Anchor>
    <Abstract>physical outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a00e7e09a91e97b4fe51e9f1cab42354e</Anchor>
    <Abstract>status flag </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0f04053849229c3aa671f67783fee760</Anchor>
    <Abstract>flag if IO is interleaved </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a34133e4a0b4c142541f11fc67c1d76fc</Anchor>
    <Abstract>used for capture offset </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aacec7725efc2851f7cfd94c12f5c3c90</Anchor>
    <Abstract>used for getting the real time </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeVals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6347e98caa1e7767dabae8a6c75c3535</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThisSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a62812f8f78f1e1859fd8b39a4e0f047c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7fe073467db4543ef9c925151f65a13c</Anchor>
    <Abstract>for printing run-time statistics </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a03a3a04552d3c4862dceffdc6d513376</Anchor>
    <Abstract>cpu usage % print the CPU usage message </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAttributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>a733a58a421f8e68c83c633c4b1aa02c2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af4d52f5f176a5d68ddd88fd4fbaa6eca</Anchor>
    <Abstract>initialize overridden in subclasses </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FeederFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::StdIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_std_i_o.html</Path>
    <Anchor>aaaf2daa5a33ca68c05afa4420ed8f0dd</Anchor>
    <Abstract>shared init function </Abstract>
    <DeclaredIn>NullIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Anchor>a90d20f0757e668693e384bdcc91a06be</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Anchor>a76b112a27d91ba828b7bd9edb2bf947b</Anchor>
    <Abstract>whether or not I&amp;#39;m running </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSynch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::NullIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_null_i_o.html</Path>
    <Anchor>a7b66a60d98b71d6af2f772b41bd55781</Anchor>
    <Abstract>the sync I wait on </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxSampEver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a531db5245d57b705379d5949f2d7e24c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::StereoPanner</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::StereoPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereo_panner.html</Path>
    <Abstract>Simple Stereo Panner. </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StereoPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StereoPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereo_panner.html</Path>
    <Anchor>a72c0ce08d8234e081a817a69aadcefa5</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~StereoPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StereoPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereo_panner.html</Path>
    <Anchor>abc44898a33dc64dac4592e56eb886152</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StereoPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereo_panner.html</Path>
    <Anchor>a0306e45d28458eb8438efb04b7af31a3</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a7eb58f1804aa5e262ebd8cac66fbadbc</Anchor>
    <Abstract>Just as any Effect in CSL, this method gets called at runtime by the audio driver. Here is where the actual processing happens. </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a810d4b736ca740da3625f307ffd22930</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a18efab558505b7bae2dc8b95581f20e8</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a681b55756470d82ba0c2bd938eed2616</Anchor>
    <Abstract>Set the speaker layout to be used by this panner. The panner will request the default layout if not s...</Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ad0d4c19bff2cf93f663929138b9d4f46</Anchor>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a749e35896956fac6034e6c7904dd2b19</Anchor>
    <Abstract>number of active inputs. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a325baea355171ce19e7e385ed3ea0915</Anchor>
    <Abstract>Remove a Sound Source. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ae50d5734f1e3594201bf8ddb55b5f6b3</Anchor>
    <Abstract>Called when the speaker layout changes. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a8ef58a48644074a87b9ad63a99d68240</Anchor>
    <Abstract>virtual destructor (don&amp;#39;t notify or delete observers in this version) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a084498ac68190916f37d5922f5bf7b6c</Anchor>
    <Abstract>key selector (e.g., MIDI chan) I receive update() mesages from my model; </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a0f220521955775fd124b5f08855aa10c</Anchor>
    <Abstract>Returns an instance of it&amp;#39;s cache data per sound source. </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speakerLayoutChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>aa7d4abd6efc6380b08a9bef3924a438a</Anchor>
    <Abstract>called when the speaker layout changes, so panners update precalculated data </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a011215e6bdf32f08a059a341d1498625</Anchor>
    <Abstract>Prints useful information about this VBAP instance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakerSetLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>ac02c7cd2228255c490aa00ea75830aad</Anchor>
    <Abstract>A reference to the layout that contains the speaker pairs or triplets. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a470567e2f64564c4ec0c80bc6faaaa97</Anchor>
    <Abstract>SpatialSource... refers to its input UGen, but with the knowledge of its position within a space...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a7165ffb7e0fe7fe6454409f9ac8ff50a</Anchor>
    <Abstract>Vector of pointers to the prior I/O data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a0a81e9957bf271e336e8efc6a5381bb0</Anchor>
    <Abstract>If null, it will use the default layout by calling SpeakerLayout::defaultSpeakerLayout();. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTempBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a3d4d8e6502c2528597973f344b3acc37</Anchor>
    <Abstract>Buffer used to temporarily hold input source data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::StereoSpeakerLayout</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::StereoSpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereo_speaker_layout.html</Path>
    <Abstract>Standard &quot;Stereo Speaker Layout&quot;, where two speakers are positioned 30¼ left, 30¼ right and no elevat...</Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StereoSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StereoSpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereo_speaker_layout.html</Path>
    <Anchor>a6ead1a54c4be0ab086c7acffb5f06a97</Anchor>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSpeakerFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a017891c8313dbba316bb94c9cac1db12</Anchor>
    <Abstract>Reads the speaker listing file according to the specification. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeaker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a376e8e55b302290fdde04ae0f241291b</Anchor>
    <Abstract>Add a speaker specifying its position in degrees from the center of the listening space...</Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeaker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a4d917971d819e301fb879b930cc07ac7</Anchor>
    <Abstract>Add a WFS speaker. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numSpeakers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a336116418cb1cc2378d1c3190cb31655</Anchor>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalizeSpeakerDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a2a31a11fc6a25bb75280a4fb3764bfc0</Anchor>
    <Abstract>Returns the number of loudspeakers in the layout. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speakerAtIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>adf7a944e4b1954c6ad0fae60b69ca66a</Anchor>
    <Abstract>Returns the speaker at the specified index. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPeriphonic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a205bebcaec7fa55da24e9fb9aeecd191</Anchor>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a896276154013f08ea0c4ba34d5693a14</Anchor>
    <Abstract>If any of the speakers in the layout has an elevation other than 0, it returns true. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>ad897b481f5e8f5b5a8b230b682371355</Anchor>
    <Abstract>Returns a pointer to the default layout. If no default exists, it creates one. </Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>af145986c3817a8008ca94973c75f63b3</Anchor>
    <Abstract>Use it to set a layout as default. Clients (e.g. a Panner) can then make use of this layout...</Abstract>
    <DeclaredIn>SpeakerLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpeakerLayout</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_speaker_layout.html</Path>
    <Anchor>a9d0c736d505946d732683bbca8fee74c</Anchor>
    <Abstract>Vector of pointers to the loudspeakers. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Stereoverb</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Stereoverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereoverb.html</Path>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Stereoverb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Stereoverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereoverb.html</Path>
    <Anchor>aeff2352321f33deaf9bd2b9848b9eacd</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Stereoverb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Stereoverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereoverb.html</Path>
    <Anchor>a820951b4886160785ed104ad7395af0d</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoomSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Stereoverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereoverb.html</Path>
    <Anchor>ae0ef19c01f3b298e4a987e198e5b40a2</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDampening</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Stereoverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereoverb.html</Path>
    <Anchor>abc9785995ca8eaefc15d3b50251c6c9e</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWetLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Stereoverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereoverb.html</Path>
    <Anchor>a5743d8f642d24073516b22851ab8a17d</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDryLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Stereoverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereoverb.html</Path>
    <Anchor>a9f609e017e785669f9abbeef45cfaf87</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Stereoverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereoverb.html</Path>
    <Anchor>a14abc9d2c57442963cf7cf4b017aec69</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Stereoverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereoverb.html</Path>
    <Anchor>a1095203d3a42cb5664b6bf83ee5aad15</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Stereoverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereoverb.html</Path>
    <Anchor>af22eff477626ef3d53ef6225146c5001</Anchor>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Stereoverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereoverb.html</Path>
    <Anchor>a306ae66aa48bbe4cb5847d0fe10f4527</Anchor>
    <Abstract>I&amp;#39;m stereo. </Abstract>
    <DeclaredIn>Freeverb.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leftRev</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Stereoverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereoverb.html</Path>
    <Anchor>a223f0b33a3e9384209a069412002c390</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rightRev</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Stereoverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereoverb.html</Path>
    <Anchor>a35d28dff448006f6a4f0fc0b4144f536</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>split</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Stereoverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereoverb.html</Path>
    <Anchor>ac243d3e61edbbc0d39d6de128645aa88</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>join</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Stereoverb</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereoverb.html</Path>
    <Anchor>a0794920cada2316de26be7c83dca95fa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::StereoWidth</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::StereoWidth</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereo_width.html</Path>
    <Abstract>Stereo width processor – can mix stereo channels or subtract the sum from each to widen...</Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StereoWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StereoWidth</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereo_width.html</Path>
    <Anchor>a7b8dde9b88e245cf00c5136a800c3a08</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~StereoWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StereoWidth</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereo_width.html</Path>
    <Anchor>a53ed57c6a119babb006c02774ffc2cd3</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StereoWidth</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereo_width.html</Path>
    <Anchor>ae821dafc035af5ab2b1c8a4ba17c8f68</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StereoWidth</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereo_width.html</Path>
    <Anchor>a22409457b13d18153b2f7ac4802c0cbc</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StereoWidth</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereo_width.html</Path>
    <Anchor>a380a577041733339cafc7d9a4810b06a</Anchor>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::StereoWidth</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereo_width.html</Path>
    <Anchor>a4bf02bcfd0f6994feb1f19bfe40b40d0</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>Mixer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a841ade4126d16430eccbc3ecc3ff5142</Anchor>
    <Abstract>am I active? </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5aa7e299971049551d91d262e5d07c9a</Anchor>
    <Abstract>set the receiver&amp;#39;s input generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>af2581a33d993cefd8bca6b4bf7e7b254</Anchor>
    <Abstract>set the Effect to be inline </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>ac9437c85619fd68d0816e328b2a33e05</Anchor>
    <Abstract>whether to use input or buffer as source </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a5bd3114c6d08f9b438c5ecccd833cddc</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a949fe181d09694b432e8d4e2ef2c3aa5</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>acb98ee8f880bfdf7019273d869042bc4</Anchor>
    <Abstract>trigger passed on here get the input port </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a8ce16757a1d3a0bd65acb35529bfe0e9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a1055d9ef86c3fd240d4ae1a90ed57531</Anchor>
    <Abstract>pretty-print the receiver&amp;#39;s input/controls map </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::StereoWidth</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereo_width.html</Path>
    <Anchor>a44e73615e4ed27006bb581434497bd9c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::StereoWidth</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereo_width.html</Path>
    <Anchor>a8ffbc338b35c60e3e41f0727c39490e6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::StereoWidth</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_stereo_width.html</Path>
    <Anchor>a2ac847041432cf7db2b21291521acb2d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Effect</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_effect.html</Path>
    <Anchor>a24ced1638f8aae5bfba298195d5f092e</Anchor>
    <Abstract>A pointer to my input&amp;#39;s data. method to read the input value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SumOfSines</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SumOfSines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>afcad8d50c7d26cb4142339ee8af6ef37</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SumOfSines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a4352bf8fc3a0ac273336289b1b028f0a</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SumOfSines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a612de75c278c1a32670af08829e0a7a4</Anchor>
    <Abstract>1/f spectrum + noise </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SumOfSines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a17c51619ac989c2fb7ec4afb327f0cd1</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SumOfSines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a3cb6a653b858da59531107f7cf153512</Anchor>
    <Abstract>given a var-args partials list </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SumOfSines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a2ebf2a3f6ec217790581337dce25ad6a</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPartial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a07271534bfb96487932e2019acf27789</Anchor>
    <Abstract>given a SHARC spectrum </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPartials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a140219804a649ce85c85daf3b8be9728</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPartials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>aad6eaec4bb2af9d17898963ee2ab496a</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPartial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a2bf6e2d723936ee13bb794efa20ef547</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPartial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a4d93920445a8c99379fb67b43688a472</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearPartials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a503eb3311fa9607a8b68f2d76d9d1442</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a5a527e517b025e97aee6e375562c1716</Anchor>
    <Abstract>print the receiver for debugging </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CompOrCacheOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comp_or_cache_oscillator.html</Path>
    <Anchor>a7b2d8566da94606463138cc668f77f63</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWaveform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a3f201809be66f80f23b50161f0deaed9</Anchor>
    <Abstract>plug in waveforms set the interpolation flag </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a246e451b9ccaa15d818c4417adfb7cf9</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a1d37712b7fd137dab432d733003eca71</Anchor>
    <Abstract>whether/how I should interpolate between samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWavetable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a926e9d03bb39119f4c0992143cb3baaa</Anchor>
    <Abstract>the stored wave form </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUseCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Cacheable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_cacheable.html</Path>
    <Anchor>a7e865d55361ee4b836489340b0da91e2</Anchor>
    <Abstract>whether I&amp;#39;m to cache (vs. compute) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextWaveInto</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>a8a26baff7384ceeb3a7617d1e49130fc</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CompOrCacheOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_comp_or_cache_oscillator.html</Path>
    <Anchor>a42a7b273bce5e23aa53da5d4c57d1f63</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillSine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a983c39e543ebf3781e4b99bb7573eb05</Anchor>
    <Abstract>fill the shared wavetable with 1 cycle of a sine wave </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPartials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>abaf7ccec6a861e4cc6cb2b5484c21ff0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SumOfSines</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_sum_of_sines.html</Path>
    <Anchor>ab900c852668ffa5c4a1be0d928452b32</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SurroundPanner</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SurroundPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_surround_panner.html</Path>
    <Abstract>Generic Panner for most surround formats. It accepts any number of speakers around the horizontal pla...</Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SurroundPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SurroundPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_surround_panner.html</Path>
    <Anchor>ad7359228c6c194926fae2b88038aa0a8</Anchor>
    <Abstract>The constructor defaults to a 5.1 setup. </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SurroundPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SurroundPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_surround_panner.html</Path>
    <Anchor>a50970580b8a010981dba99f27770e26b</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a7eb58f1804aa5e262ebd8cac66fbadbc</Anchor>
    <Abstract>Just as any Effect in CSL, this method gets called at runtime by the audio driver. Here is where the actual processing happens. </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a810d4b736ca740da3625f307ffd22930</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a18efab558505b7bae2dc8b95581f20e8</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a681b55756470d82ba0c2bd938eed2616</Anchor>
    <Abstract>Set the speaker layout to be used by this panner. The panner will request the default layout if not s...</Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ad0d4c19bff2cf93f663929138b9d4f46</Anchor>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a749e35896956fac6034e6c7904dd2b19</Anchor>
    <Abstract>number of active inputs. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a325baea355171ce19e7e385ed3ea0915</Anchor>
    <Abstract>Remove a Sound Source. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ae50d5734f1e3594201bf8ddb55b5f6b3</Anchor>
    <Abstract>Called when the speaker layout changes. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a8ef58a48644074a87b9ad63a99d68240</Anchor>
    <Abstract>virtual destructor (don&amp;#39;t notify or delete observers in this version) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a084498ac68190916f37d5922f5bf7b6c</Anchor>
    <Abstract>key selector (e.g., MIDI chan) I receive update() mesages from my model; </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a0f220521955775fd124b5f08855aa10c</Anchor>
    <Abstract>Returns an instance of it&amp;#39;s cache data per sound source. </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speakerLayoutChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>aa7d4abd6efc6380b08a9bef3924a438a</Anchor>
    <Abstract>called when the speaker layout changes, so panners update precalculated data </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a011215e6bdf32f08a059a341d1498625</Anchor>
    <Abstract>Prints useful information about this VBAP instance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakerSetLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>ac02c7cd2228255c490aa00ea75830aad</Anchor>
    <Abstract>A reference to the layout that contains the speaker pairs or triplets. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a470567e2f64564c4ec0c80bc6faaaa97</Anchor>
    <Abstract>SpatialSource... refers to its input UGen, but with the knowledge of its position within a space...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a7165ffb7e0fe7fe6454409f9ac8ff50a</Anchor>
    <Abstract>Vector of pointers to the prior I/O data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a0a81e9957bf271e336e8efc6a5381bb0</Anchor>
    <Abstract>If null, it will use the default layout by calling SpeakerLayout::defaultSpeakerLayout();. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTempBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a3d4d8e6502c2528597973f344b3acc37</Anchor>
    <Abstract>Buffer used to temporarily hold input source data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Synch</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Synch</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch.html</Path>
    <Abstract>Sync is a cross-thread synchronization object. </Abstract>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Synch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Synch</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch.html</Path>
    <Anchor>af88a7839f94c25e9d942f9b80ba724d5</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Synch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Synch</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch.html</Path>
    <Anchor>af460c425a7cdbd25ce31ddbf7f4c94ef</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Synch</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch.html</Path>
    <Anchor>ac277db48d3836e2e096ce14e26a4e624</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Synch</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch.html</Path>
    <Anchor>ae54f50d9977f5d2371fc655f6dc580fa</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>condWait</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Synch</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch.html</Path>
    <Anchor>a46b9fd5ca304998cc83f1ab038960b29</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>condSignal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Synch</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch.html</Path>
    <Anchor>a7e8cc58b56629ebf6fb56a0452de8095</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MakeSynch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::Synch</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch.html</Path>
    <Anchor>a4667a3c47f9e8227b9149d03e5a8c1a5</Anchor>
    <Abstract>Factory method Utilities. </Abstract>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::SynchPthread</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::SynchPthread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch_pthread.html</Path>
    <Abstract>PThread version of Sync. </Abstract>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynchPthread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SynchPthread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch_pthread.html</Path>
    <Anchor>a1dba06918b6e9b4e1462a6ee28c51012</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SynchPthread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SynchPthread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch_pthread.html</Path>
    <Anchor>ae088a05385d10296cdbbf7252baafd57</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SynchPthread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch_pthread.html</Path>
    <Anchor>adf5fb8043c4e674480d7b48bc40257d2</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SynchPthread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch_pthread.html</Path>
    <Anchor>a25ce18294a58bc3e0d27dd058944e1cc</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>condWait</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SynchPthread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch_pthread.html</Path>
    <Anchor>a31c6dbbb14016ac72984af3653d5fcc3</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>condSignal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SynchPthread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch_pthread.html</Path>
    <Anchor>a94d423988ca531c06f24fb30aebf9dc5</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MakeSynch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::Synch</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch.html</Path>
    <Anchor>a4667a3c47f9e8227b9149d03e5a8c1a5</Anchor>
    <Abstract>Factory method Utilities. </Abstract>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMutex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SynchPthread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch_pthread.html</Path>
    <Anchor>afa1bcad949c1a233927e1f7366b31297</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCond</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SynchPthread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_synch_pthread.html</Path>
    <Anchor>ad2873be85058eb7319323f4d049d417b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::testStruct</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::testStruct</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1test_struct.html</Path>
    <Abstract>struct used for the JUCE pop-up menu of tests (see the test files) </Abstract>
    <DeclaredIn>CSL_Types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::testStruct</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1test_struct.html</Path>
    <Anchor>a60d232bca6483c3622d79e590e8532b7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fcn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::testStruct</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1test_struct.html</Path>
    <Anchor>a6082590d70d6688e47d9d23f74313f29</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>comment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::testStruct</Scope>
    </TokenIdentifier>
    <Path>structcsl_1_1test_struct.html</Path>
    <Anchor>a1754263ae06c963a9d252aee973f4669</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::ThreadPthread</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::ThreadPthread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_thread_pthread.html</Path>
    <Abstract>PThread version of Thread. </Abstract>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadPthread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ThreadPthread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_thread_pthread.html</Path>
    <Anchor>a2b535ba938c50d55431a920820b98cb9</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ThreadPthread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ThreadPthread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_thread_pthread.html</Path>
    <Anchor>a21baeb7e10f9210c193fda5fc1685247</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ThreadPthread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_thread_pthread.html</Path>
    <Anchor>a7d9287dd8c3c4cacb05d7f708467787d</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>a11c4989c89eca30879560ba5f1cae55c</Anchor>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MakeThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>a46654594fd296962e4162cc71ee158e3</Anchor>
    <Abstract>factory method </Abstract>
    <DeclaredIn>ThreadUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>a8d0b88f66931bbe9eaa5de73a7758b61</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAttributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CThread</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_thread.html</Path>
    <Anchor>a733a58a421f8e68c83c633c4b1aa02c2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::TimingError</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::TimingError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_timing_error.html</Path>
    <Abstract>Time-out. </Abstract>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TimingError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::TimingError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_timing_error.html</Path>
    <Anchor>a32a89cb3a6eca14925efa4d0962224a0</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>aaa80baf48d8b2a9af6d5bce2d1b27388</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>a82f57e285f07ca934823977ed3d364e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Triangle</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Triangle</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_triangle.html</Path>
    <Abstract>Triangle envelope class – equal attack/release times. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Triangle</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_triangle.html</Path>
    <Anchor>a6d02c2163ece7cff1717c06be20890a7</Anchor>
    <Abstract>Various Constructors. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Triangle</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_triangle.html</Path>
    <Anchor>a48ef1da57b1d2cb5256e6b28b88a40a3</Anchor>
    <Abstract>Simple constructor. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Triangle</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_triangle.html</Path>
    <Anchor>adde132ae512227cc103c2f74f19aa660</Anchor>
    <Abstract>Versions with initial delay segments. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Triangle</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_triangle.html</Path>
    <Anchor>a435bf9e24715e26ec887e181a6e4d6fe</Anchor>
    <Abstract>Simple constructor. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Triangle</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_triangle.html</Path>
    <Anchor>a27a51a328e13751c0545809a7c6c6a9e</Anchor>
    <Abstract>Versions with initial delay segments. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Triangle</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_triangle.html</Path>
    <Anchor>a80781780415d549f7ef5d0f039063647</Anchor>
    <Abstract>Minimal version - AR. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>ad467b3c7afce695b428a9cc66e10c712</Anchor>
    <Abstract>This answers whether I&amp;#39;m active (ptr &lt; end) </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBreakpoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>ad39e120b2cc844caaf579599cd44c097</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a9421a5f45b37fdeaa7915b2e7a9da366</Anchor>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a04fe5848b232e1c4552391172638a92e</Anchor>
    <Abstract>set/scale durations </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleTimes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a3ecc09876d58baab0489517864240a8f</Anchor>
    <Abstract>scale durations </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>abc3a00d656fed9abb632fc1b374adf27</Anchor>
    <Abstract>scale values so the max is s </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>af93203a7ae1fec4791eb36565db934f0</Anchor>
    <Abstract>reset internal time to restart envelope </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a03b0aeb7f8550ec701e3a07839ad47ec</Anchor>
    <Abstract>reset internal time to restart envelope </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a7642a463c20819de6d04a6b102b91976</Anchor>
    <Abstract>Pretty-printer. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a5068ded8e64397f2756c9967cb10eac6</Anchor>
    <Abstract>The main FrameStream work method. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>privateNextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a5e8bc26caab6bb76f84c855d04dbebe5</Anchor>
    <Abstract>Internal helper method for computing the next buffer. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>abd2ecb2dca6859c7da2e8e8e1689bb37</Anchor>
    <Abstract>Allocate memory for the segments. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculateSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a233714c4b55f4f8e974a6827ea5ead42</Anchor>
    <Abstract>Calculate the internal data. </Abstract>
    <DeclaredIn>Envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a3a740e34b7872a2599f21ff3b37a0e0f</Anchor>
    <Abstract>Total duration, typically in seconds. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentMark</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>aeb4f7e489cb6d3863be43318a9e59f44</Anchor>
    <Abstract>How far we have read. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSegmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a806c34bfc5febd95060670a80bf48521</Anchor>
    <Abstract>list of envelope breakpoints </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>ad72b1156da3b7db2990da98b50d209bc</Anchor>
    <Abstract>array of line segments that for the envelope </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a7a1cba39a17c49d070b6f2b0fb100ebc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Envelope</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_envelope.html</Path>
    <Anchor>a0632379f852825bee1477a09320f3d98</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::TriangularWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::TriangularWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_triangular_window.html</Path>
    <Abstract>TriangularWindow:A triangularWindow window. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TriangularWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::TriangularWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_triangular_window.html</Path>
    <Anchor>aaf6394e95eb19dc35e0519317f47828a</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TriangularWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::TriangularWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_triangular_window.html</Path>
    <Anchor>aac51ef5b3eac0505e5b879093aa17e94</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TriangularWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::TriangularWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_triangular_window.html</Path>
    <Anchor>a6857c48a98a85c21f7de434f8799085b</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TriangularWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::TriangularWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_triangular_window.html</Path>
    <Anchor>aba7a6f247d11e86f6ed0a49b5a3555e0</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a445538717eb019a4a4b9f2581b34ee3e</Anchor>
    <Abstract>Set the number of samples the window spans. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a964f52a0cd1ee2089a632c507d0d87ec</Anchor>
    <Abstract>Set the gain to which the window should be normalized. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a02b50e78cdcc095403b5b96d37732bae</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a7b53f0c4c280029dc76470d3b3fcd890</Anchor>
    <Abstract>Returns a pointer to the window data. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>acfcb1d9b3ede7ac833d01b0cb17e0d64</Anchor>
    <Abstract>Print some info about the window. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::TriangularWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_triangular_window.html</Path>
    <Anchor>aebc8171f820a7699237a0f6598d0e59e</Anchor>
    <Abstract>subclasses override this to fill the buffer with corresponding function. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a8fe40904c35cdede17b4f6f7ba06e6a7</Anchor>
    <Abstract>used to store the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBufferPos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>aa0ac80869363b3471bd25727443529b3</Anchor>
    <Abstract>where am I in the window buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a4a832d761a5101d8dca5e820914e491d</Anchor>
    <Abstract>length in samples of the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a185596ca7875d3cfa30e089d34ae0fe9</Anchor>
    <Abstract>gain for the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::UnitGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Abstract>forward declaration </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnitGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aa7c9698175013a0c8034fb1726a69216</Anchor>
    <Abstract>Constructors (UGens are mono by default) defaults to mono and maxBlockSize if not specified...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~UnitGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6c5fcdaa7a0a59b426fd23dc7b1a1ab7</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::VAdditiveInstrument</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::VAdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_additive_instrument.html</Path>
    <Abstract>VAdditiveInstrument = vector-additive - cross-fade between 2 SOS spectra Envelope mXEnv(dur...</Abstract>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VAdditiveInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VAdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_additive_instrument.html</Path>
    <Anchor>ab65d5b52c73d478ac531a0110a668cea</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VAdditiveInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VAdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_additive_instrument.html</Path>
    <Anchor>aafe1a08008e5a538a110c0a0c44f4782</Anchor>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VAdditiveInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VAdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_additive_instrument.html</Path>
    <Anchor>a12edca0bb63d76abdad645d84b719f6f</Anchor>
    <Abstract>copy constructor </Abstract>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~VAdditiveInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VAdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_additive_instrument.html</Path>
    <Anchor>aa74738438bd56c994540a1e81fff7fa1</Anchor>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VAdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_additive_instrument.html</Path>
    <Anchor>a0bd3411fc555ccbc95afa9ada60b6546</Anchor>
    <Abstract>Plug functions. </Abstract>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playOSC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VAdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_additive_instrument.html</Path>
    <Anchor>a155ed63425cadba240b68c383410ba62</Anchor>
    <Abstract>Play functions. </Abstract>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VAdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_additive_instrument.html</Path>
    <Anchor>aca2c2ab2d34eed4bf22cbba00837622e</Anchor>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playMIDI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VAdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_additive_instrument.html</Path>
    <Anchor>a8e3231a17086430fca77004e1ba1410a</Anchor>
    <DeclaredIn>AdditiveInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>afa6f111dc85dab7a7bdf5e2cc6c165af</Anchor>
    <Abstract>Accessors. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a79aab7d10f67e121641d09224eb230bb</Anchor>
    <Abstract>my UGen graph </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>envelopes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a58dc9b22696af5314e391ed1212782c6</Anchor>
    <Abstract>the map of ugens in the graph by name </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a2714d7d2ec9c9dc7008e81b31e423f1b</Anchor>
    <Abstract>the vector of envelopes to query or trigger </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genNamed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abccad2cc3a254ae6bac8c660f7518778</Anchor>
    <Abstract>answer my name answer the number of channels </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abeb0b477a2388f8c7a2b41e87ad24c01</Anchor>
    <Abstract>Accessor management. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ae5f78c65cf53af61bbdcc3a8e228f947</Anchor>
    <Abstract>answer the accessor vector </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a751268fdb83b44806a6f0b745400fce5</Anchor>
    <Abstract>set a named parameter </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a05fbcc14ac4a0cd792e85aff09147b3b</Anchor>
    <Abstract>Envelope query and re-trigger. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>play</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ab643e7923572c1cf2b4edb62cb1fc14a</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a1b783961f66930972f30e242139be90f</Anchor>
    <Abstract>Play a note (subclasses refine) </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abffd98c97971ef8ec4c893f8d019e3c1</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAEnv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::VAdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_additive_instrument.html</Path>
    <Anchor>aab656cb0eb5216fe9e19488c3c1d70c3</Anchor>
    <Abstract>amplitude envelope </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mXEnv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::VAdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_additive_instrument.html</Path>
    <Anchor>ac921255a81be6ef086156c32c88ed1e4</Anchor>
    <Abstract>cross-fade envelope, AR with init delay </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSOS1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::VAdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_additive_instrument.html</Path>
    <Anchor>abb413db0be43e239454ea1f341d8c8b0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSOS2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::VAdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_additive_instrument.html</Path>
    <Anchor>a3c159646d5bff10091e5f0a83c60bd03</Anchor>
    <Abstract>2 sum-of-sine oscillators </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::VAdditiveInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_additive_instrument.html</Path>
    <Anchor>a3f8167bece33979146357e4fbd818211</Anchor>
    <Abstract>stereo panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a3685284d2311cfe1d10f38536c424666</Anchor>
    <Abstract>Caches. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a660770fe07dc68cb05f277ff03130ec5</Anchor>
    <Abstract>my name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUGens</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ab5af1851504b58a140055423100bc61a</Anchor>
    <Abstract>the map of ugens in the graph by name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnvelopes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a07ff212be08d5cc25fa2a328dd630188</Anchor>
    <Abstract>the vector of envelopes to query or trigger </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ad52424c33a5b87976186ef9e3f784a73</Anchor>
    <Abstract>the accessor vector </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::ValueError</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::ValueError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_value_error.html</Path>
    <Abstract>Wrong kind of operand error. </Abstract>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ValueError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::ValueError</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_value_error.html</Path>
    <Anchor>a8938844aaff81ecf2734fa2cf7975be9</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>aaa80baf48d8b2a9af6d5bce2d1b27388</Anchor>
    <DeclaredIn>CSL_Exceptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::CException</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_c_exception.html</Path>
    <Anchor>a82f57e285f07ca934823977ed3d364e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::VBAP</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Abstract>Vector Base Amplitude Panning. </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VBAP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a48d36443675333d94946d54b64012652</Anchor>
    <Abstract>Initializer for a VBAP Panner. Optionally a speaker layout can be specified. Defaults to auto...</Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~VBAP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a94ef92045758d995fe23ec09d0525ddb</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a7eb58f1804aa5e262ebd8cac66fbadbc</Anchor>
    <Abstract>Just as any Effect in CSL, this method gets called at runtime by the audio driver. Here is where the actual processing happens. </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a810d4b736ca740da3625f307ffd22930</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a18efab558505b7bae2dc8b95581f20e8</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a681b55756470d82ba0c2bd938eed2616</Anchor>
    <Abstract>Set the speaker layout to be used by this panner. The panner will request the default layout if not s...</Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ad0d4c19bff2cf93f663929138b9d4f46</Anchor>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a749e35896956fac6034e6c7904dd2b19</Anchor>
    <Abstract>number of active inputs. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a325baea355171ce19e7e385ed3ea0915</Anchor>
    <Abstract>Remove a Sound Source. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>ae50d5734f1e3594201bf8ddb55b5f6b3</Anchor>
    <Abstract>Called when the speaker layout changes. </Abstract>
    <DeclaredIn>SpatialPanner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a8ef58a48644074a87b9ad63a99d68240</Anchor>
    <Abstract>virtual destructor (don&amp;#39;t notify or delete observers in this version) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Observer</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_observer.html</Path>
    <Anchor>a084498ac68190916f37d5922f5bf7b6c</Anchor>
    <Abstract>key selector (e.g., MIDI chan) I receive update() mesages from my model; </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a0f220521955775fd124b5f08855aa10c</Anchor>
    <Abstract>Returns an instance of it&amp;#39;s cache data per sound source. </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speakerLayoutChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>aa7d4abd6efc6380b08a9bef3924a438a</Anchor>
    <Abstract>called when the speaker layout changes, so panners update precalculated data </Abstract>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>a011215e6bdf32f08a059a341d1498625</Anchor>
    <Abstract>Prints useful information about this VBAP instance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakerSetLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::VBAP</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p.html</Path>
    <Anchor>ac02c7cd2228255c490aa00ea75830aad</Anchor>
    <Abstract>A reference to the layout that contains the speaker pairs or triplets. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a470567e2f64564c4ec0c80bc6faaaa97</Anchor>
    <Abstract>SpatialSource... refers to its input UGen, but with the knowledge of its position within a space...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a7165ffb7e0fe7fe6454409f9ac8ff50a</Anchor>
    <Abstract>Vector of pointers to the prior I/O data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpeakerLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a0a81e9957bf271e336e8efc6a5381bb0</Anchor>
    <Abstract>If null, it will use the default layout by calling SpeakerLayout::defaultSpeakerLayout();. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTempBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::SpatialPanner</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_spatial_panner.html</Path>
    <Anchor>a3d4d8e6502c2528597973f344b3acc37</Anchor>
    <Abstract>Buffer used to temporarily hold input source data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::VBAPSourceCache</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::VBAPSourceCache</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p_source_cache.html</Path>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VBAPSourceCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAPSourceCache</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p_source_cache.html</Path>
    <Anchor>a1a9a271b12931e1342efd3b73ba5cab3</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~VBAPSourceCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VBAPSourceCache</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p_source_cache.html</Path>
    <Anchor>af9be412fc486e7e69d4b07935665f214</Anchor>
    <DeclaredIn>VBAP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::VBAPSourceCache</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p_source_cache.html</Path>
    <Anchor>a04bb16b2a863b3c1df1f186db5978707</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tripletIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::VBAPSourceCache</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_b_a_p_source_cache.html</Path>
    <Anchor>adb9aa0a30bbf562896b497f5f32b2d4c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::VSTIO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Abstract>VSTIO is an IO that answers the VST processReplacing() call by calling its CSL graph. </Abstract>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VSTIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>aa87597504604d2f6547b09f7116dfddd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VSTIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>a06f0c66f5906c2fbba7f2b429da5a75d</Anchor>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~VSTIO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>a98b4b192065700212e92247677f05b55</Anchor>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>a8fb4bfbe989959b64aef05e6c61551df</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>a59f2334a75ea4f646ed1cdbca283e763</Anchor>
    <Abstract>open/close start/stop methods </Abstract>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>a17927dc90f31da42998fb8835fc28c03</Anchor>
    <Abstract>start my timer thread </Abstract>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>a0ad8de75d183657efca9acf6bc637cd7</Anchor>
    <Abstract>stop the timer thread </Abstract>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processReplacing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>a0e0713fd4dac320163288f4eaa4db51d</Anchor>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processDoubleReplacing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>a7f0fe3360e4c5fec2d6dcae0772405a4</Anchor>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProgramName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>acaeac7410b1d0e4db98ff0193a8b643c</Anchor>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProgramName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>aa2595286ee9a2f55499efdce56dd0d9a</Anchor>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>a9b46c44e76b7587de952c07cc41a7be9</Anchor>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>a48480110c1916bfed6c713b7b9cb200b</Anchor>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParameterLabel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>a1482d59523405793bff865eca9d02e12</Anchor>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParameterDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>a34b0950be91efbf77d2dcd49d34a479f</Anchor>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParameterName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>afc61c07638d1e8c7fd7aff01986e13ae</Anchor>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEffectName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>a61a0982114881ef6a1b96d50cd9345a6</Anchor>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVendorString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>a8b0f3b7ad54b17df0e4989950bbdc3f7</Anchor>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProductString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>ade24b4229bc4a7c49d1fff932bc673db</Anchor>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVendorVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>ab8555204d8eb9aed2aa0393c2df33b8c</Anchor>
    <DeclaredIn>VSTIO.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6a8d3350db4f0b632509e6cbcf81b5c9</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_on</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a33d3dfbf6b9de273c70491e4ed3540c0</Anchor>
    <Abstract>test the IO&amp;#39;s graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capture_off</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a29d83e9b6fc2610ea3cbac33588b9dcf</Anchor>
    <Abstract>end output capture </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_capture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0ce9f71e62551b921a17869f0d4ea3c8</Anchor>
    <Abstract>answer the capture buffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0cd73786ea896b62cf0ec3e3e0367dd8</Anchor>
    <Abstract>set/clear my graph root generator </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a538b273c6de621b2e38266e6216bde1c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7cca2bf79735626d7ab93684554e0bff</Anchor>
    <Abstract>get a buffer from the CSL graph </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a26120896d8ce56c89443dbcd6f110ed9</Anchor>
    <Abstract>Get the current input from the sound card. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a8a206f11032ad9cda1b9c8202b8f06e8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAndIncrementSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af2075a50a32bf0cfddae3183b37e0959</Anchor>
    <Abstract>increment and answer my seq # </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printTimeStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc6975037c1beec8dadf8f4bb1405549</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af8690c5e8a8f34a0b10b74f3cd066063</Anchor>
    <Abstract>the root of my client DSP graph, often a mixer or panner </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a688331f6e9a2b1356f545d2ace55f41a</Anchor>
    <Abstract>the most recent input buffer (if it&amp;#39;s turned on) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a3c5d6efa6e7750baa2c271bb075b476c</Anchor>
    <Abstract>the output buffer I use (passed to nextBuffer calls) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCaptureBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a795d3c1ee90a4cdcd802b4592beb97d4</Anchor>
    <Abstract>the output buffer I use for capturing output (for testing) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afff5975d365381be5385ebe15b3a7bd2</Anchor>
    <Abstract>the buffer for holding the sound card input (if open) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mChannelMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>adc83a0ce4a361d076eea2e657e256683</Anchor>
    <Abstract>the output channel remapping array </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumFramesPlayed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7b84206149d0f23fee4669838291f222</Anchor>
    <Abstract>counter of frames I&amp;#39;ve played </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>afc645076ff45980d4b9d8c2209f55850</Anchor>
    <Abstract>sequence counter </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLoggingPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a297e157c9f133ea1d9face8f08165478</Anchor>
    <Abstract>logging period in seconds </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a5e0be8bcb1d550c798d0cd12885754a7</Anchor>
    <Abstract>inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa384e814fb13e794b11f6ece70c37f21</Anchor>
    <Abstract>outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealInChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aa00a157f1e87264998ba876740e80448</Anchor>
    <Abstract>physical inputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumRealOutChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a42b4e4ef54d1ae1f5a35bf962767608d</Anchor>
    <Abstract>physical outputs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a00e7e09a91e97b4fe51e9f1cab42354e</Anchor>
    <Abstract>status flag </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterleaved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a0f04053849229c3aa671f67783fee760</Anchor>
    <Abstract>flag if IO is interleaved </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a34133e4a0b4c142541f11fc67c1d76fc</Anchor>
    <Abstract>used for capture offset </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>aacec7725efc2851f7cfd94c12f5c3c90</Anchor>
    <Abstract>used for getting the real time </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeVals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a6347e98caa1e7767dabae8a6c75c3535</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mThisSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a62812f8f78f1e1859fd8b39a4e0f047c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTimeSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a7fe073467db4543ef9c925151f65a13c</Anchor>
    <Abstract>for printing run-time statistics </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a03a3a04552d3c4862dceffdc6d513376</Anchor>
    <Abstract>cpu usage % print the CPU usage message </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>af4d52f5f176a5d68ddd88fd4fbaa6eca</Anchor>
    <Abstract>initialize overridden in subclasses </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>ad775262c5b914e55e98b8ca1c2c6b406</Anchor>
    <Abstract>the in-out object </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>ab62642f3032324b4e2ead1a007907158</Anchor>
    <Abstract>BPF filter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFreq</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::VSTIO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_v_s_t_i_o.html</Path>
    <Anchor>a77cfa20cedc9852c9978622f334e6041</Anchor>
    <Abstract>Example: filter center freq. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxSampEver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::IO</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_i_o.html</Path>
    <Anchor>a531db5245d57b705379d5949f2d7e24c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::WaveShaper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::WaveShaper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wave_shaper.html</Path>
    <Abstract>WaveShaper – Wave-shaping oscillator class. </Abstract>
    <DeclaredIn>WaveShaper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WaveShaper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WaveShaper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wave_shaper.html</Path>
    <Anchor>a5ce729ed9c7d7bfd54c09b4a71a35dc1</Anchor>
    <DeclaredIn>WaveShaper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WaveShaper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WaveShaper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wave_shaper.html</Path>
    <Anchor>aff20071b98d4c2b2eebad49f134ef382</Anchor>
    <DeclaredIn>WaveShaper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTableLenght</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WaveShaper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wave_shaper.html</Path>
    <Anchor>abaa503d52cd68493dd2d4cb1a385b62b</Anchor>
    <Abstract>set the size in bytes of the table. </Abstract>
    <DeclaredIn>WaveShaper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tableLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WaveShaper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wave_shaper.html</Path>
    <Anchor>a576e277ba1d398b554d0756944b3caca</Anchor>
    <DeclaredIn>WaveShaper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WaveShaper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WaveShaper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wave_shaper.html</Path>
    <Anchor>a1842a5a5c37eec73f353604190d58ec2</Anchor>
    <DeclaredIn>WaveShaper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WaveShaper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WaveShaper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wave_shaper.html</Path>
    <Anchor>ae3950e9a7e9805edfa94d6b6b87cc7c6</Anchor>
    <DeclaredIn>WaveShaper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTableLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WaveShaper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wave_shaper.html</Path>
    <Anchor>a7149f3dd52ae11f58e3c206bd700ae83</Anchor>
    <Abstract>set the size in bytes of the table. </Abstract>
    <DeclaredIn>WaveShaper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tableLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WaveShaper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wave_shaper.html</Path>
    <Anchor>a576e277ba1d398b554d0756944b3caca</Anchor>
    <DeclaredIn>WaveShaper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WaveShaper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wave_shaper.html</Path>
    <Anchor>a26e4bfb450096c3c80e8e49a49364ab4</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>WaveShaper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Oscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_oscillator.html</Path>
    <Anchor>a25d694e0f48fc848ef49efb1908e6930</Anchor>
    <Abstract>print the receiver for debugging </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransferFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WaveShaper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wave_shaper.html</Path>
    <Anchor>aa9607c1779f9c0f17229488a1c56350a</Anchor>
    <Abstract>the wave-shaping look-up table (it&amp;#39;s just a sample buffer) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mono_next_buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WaveShaper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wave_shaper.html</Path>
    <Anchor>a6ff20222e136e7b7778dced6cfd49805</Anchor>
    <DeclaredIn>WaveShaper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWaveTable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WaveShaper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wave_shaper.html</Path>
    <Anchor>aaaea791d337bb2a01c1cb4aac0f84a51</Anchor>
    <DeclaredIn>WaveShaper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWaveTable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WaveShaper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wave_shaper.html</Path>
    <Anchor>a604206cbfacab8185a461fa16edb74cf</Anchor>
    <Abstract>function to initialize the default shaping table </Abstract>
    <DeclaredIn>WaveShaper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTableSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WaveShaper</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wave_shaper.html</Path>
    <Anchor>aa05247ec1cd0fe038e60b72857be89f4</Anchor>
    <Abstract>Table size in bytes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::WavetableOscillator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Abstract>WavetableOscillator – Oscillator with a stored wave table that does table look-up. The default wave table is an 8192-sample sine. (perhaps accept a vector of freqs and a multichannel buffer?) </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WavetableOscillator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>ab83a9d0daed20fddbb550f9c5504db5c</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WavetableOscillator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a3861c352e0988c8cd0c0bbfea3ef3efe</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WavetableOscillator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a0503ef2bec81ebd76fff167e2b07c17b</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWaveform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a3f201809be66f80f23b50161f0deaed9</Anchor>
    <Abstract>plug in waveforms set the interpolation flag </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a246e451b9ccaa15d818c4417adfb7cf9</Anchor>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>abf76877b80d84a924c71cfe057c589c9</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Oscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_oscillator.html</Path>
    <Anchor>a25d694e0f48fc848ef49efb1908e6930</Anchor>
    <Abstract>print the receiver for debugging </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a8b7cc24c72115c7d8cbdf6511665184a</Anchor>
    <Abstract>Setter accessors. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a13269ce8f31f9461e70c2bebdad215a0</Anchor>
    <Abstract>set frequency </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a47cf261655c85721020c484e05b0bdd4</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a1d37712b7fd137dab432d733003eca71</Anchor>
    <Abstract>whether/how I should interpolate between samples </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWavetable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a926e9d03bb39119f4c0992143cb3baaa</Anchor>
    <Abstract>the stored wave form </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillSine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WavetableOscillator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_wavetable_oscillator.html</Path>
    <Anchor>a983c39e543ebf3781e4b99bb7573eb05</Anchor>
    <Abstract>fill the shared wavetable with 1 cycle of a sine wave </Abstract>
    <DeclaredIn>Oscillator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Phased</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_phased.html</Path>
    <Anchor>a570bcc29b448258b2723860339af84ac</Anchor>
    <Abstract>set phase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::WelchWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::WelchWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_welch_window.html</Path>
    <Abstract>WelchWindow: This is basically an equal-power curve. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WelchWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WelchWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_welch_window.html</Path>
    <Anchor>af9c1bda8b5483b133e9ee44cf79b5e85</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WelchWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WelchWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_welch_window.html</Path>
    <Anchor>ad7eb5c918980588544bf85000c23b5f2</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WelchWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WelchWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_welch_window.html</Path>
    <Anchor>a430af1e41b1d8c534854f43cdbe0e36c</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WelchWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WelchWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_welch_window.html</Path>
    <Anchor>ab1b85b514fcd85cf4a7b3e276d66dd36</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a445538717eb019a4a4b9f2581b34ee3e</Anchor>
    <Abstract>Set the number of samples the window spans. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a964f52a0cd1ee2089a632c507d0d87ec</Anchor>
    <Abstract>Set the gain to which the window should be normalized. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a02b50e78cdcc095403b5b96d37732bae</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a7b53f0c4c280029dc76470d3b3fcd890</Anchor>
    <Abstract>Returns a pointer to the window data. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>acfcb1d9b3ede7ac833d01b0cb17e0d64</Anchor>
    <Abstract>Print some info about the window. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WelchWindow</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_welch_window.html</Path>
    <Anchor>a384b0752746af4e6042a76a15a5075ef</Anchor>
    <Abstract>subclasses override this to fill the buffer with corresponding function. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a8fe40904c35cdede17b4f6f7ba06e6a7</Anchor>
    <Abstract>used to store the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBufferPos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>aa0ac80869363b3471bd25727443529b3</Anchor>
    <Abstract>where am I in the window buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a4a832d761a5101d8dca5e820914e491d</Anchor>
    <Abstract>length in samples of the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a185596ca7875d3cfa30e089d34ae0fe9</Anchor>
    <Abstract>gain for the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::WhiteNoise</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::WhiteNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise.html</Path>
    <Abstract>White noise – equal power per frequency. </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WhiteNoise</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WhiteNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise.html</Path>
    <Anchor>a8bce7fd2f768c6bca21e7172293099a0</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WhiteNoise</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WhiteNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise.html</Path>
    <Anchor>adef5de8edd9daabf65e2aaa80f70da63</Anchor>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WhiteNoise</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WhiteNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise.html</Path>
    <Anchor>a562cd3feb08824c47cfda1128def5be5</Anchor>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WhiteNoise</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WhiteNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise.html</Path>
    <Anchor>a8679d34d0835abfd7a2dbe12cf4609ee</Anchor>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WhiteNoise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise.html</Path>
    <Anchor>a37303efe207b29afeb21dba3d6e04955</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateRandomNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>ad78184bcf531ddf1d31a9f67917e9974</Anchor>
    <Abstract>returns the next pseudo-random number </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateNormalizedRandomNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>ae5559b9425fe665f6a4eafedca44edd2</Anchor>
    <Abstract>returns next pseudo-random normalised to +/- 1.0 </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>a850501c314ea8a1844763247577e72d7</Anchor>
    <Abstract>set the seed integer for the pseudo-random number generators </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>a08d87a30f57e974d8fafcb6c74c932e5</Anchor>
    <Abstract>Tell me more about what is happening. </Abstract>
    <DeclaredIn>Noise.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aea1b11dc8b91188467f2406cc50e4c10</Anchor>
    <Abstract>trigger passed on here </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a27258611ca4769ec35e64954e03e5851</Anchor>
    <Abstract>set the receiver&amp;#39;s scale member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>addaddd6c42e4bfb0b6da04af43201b72</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>aff7c94c6f4dd75f322866500464c3739</Anchor>
    <Abstract>set the receiver&amp;#39;s offset member to a UGen or a float </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a60a35dd30304f03120bbeb42f4f62cf3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isScaled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Scalable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_scalable.html</Path>
    <Anchor>a2bed74120385174e7782d8004eb7aadc</Anchor>
    <Abstract>answer whether scale = 1 &amp; offset = 0 </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a97af0aab15f5bd707c672dd450b630e6</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ab3e6d0af15e7f824a15782e8c57e15d1</Anchor>
    <Abstract>Plug in a unit generator to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>a9fd4d1266bb22a2212c61f82ab6ad005</Anchor>
    <Abstract>Plug in a float to the named input slot. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>ac7b24bdea3a33bdd7cf1bbe266787362</Anchor>
    <Abstract>method to read the control values (in case they&amp;#39;re dynamic). this sends nextBuffer() to the input...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pullInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>afe6bc5e9c1058ae28a4e0ba2b53b0f67</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>af9bce1dd693d6d176308a39b0e6c4b7f</Anchor>
    <Abstract>Destructor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDivisor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Noise</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_noise.html</Path>
    <Anchor>af4d8d76a4dd98374cb14535106e0e54e</Anchor>
    <Abstract>factor to scale ints to +/- 1.0 </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Controllable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_controllable.html</Path>
    <Anchor>aaa6da76a70b9f21f265024c185485832</Anchor>
    <Abstract>the map of my inputs or controls (used by the mix-in classes) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::WhiteNoiseInstrument</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::WhiteNoiseInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise_instrument.html</Path>
    <DeclaredIn>WhiteNoiseInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WhiteNoiseInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WhiteNoiseInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise_instrument.html</Path>
    <Anchor>a3d166eeb7a0378b6b4b04c2f65ea8b8e</Anchor>
    <DeclaredIn>WhiteNoiseInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WhiteNoiseInstrument</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WhiteNoiseInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise_instrument.html</Path>
    <Anchor>a3d434237c3b383699e15c08a5041a699</Anchor>
    <DeclaredIn>WhiteNoiseInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>num_accessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WhiteNoiseInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise_instrument.html</Path>
    <Anchor>afea9ead4341eb41e572e5d425986d18f</Anchor>
    <DeclaredIn>WhiteNoiseInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_accessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WhiteNoiseInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise_instrument.html</Path>
    <Anchor>a664dca7761bf25874f00d57b1f6f2328</Anchor>
    <DeclaredIn>WhiteNoiseInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_parameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WhiteNoiseInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise_instrument.html</Path>
    <Anchor>a18bd8616c8d1608e8917b03ee0e29fcf</Anchor>
    <DeclaredIn>WhiteNoiseInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>play_osc_note</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WhiteNoiseInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise_instrument.html</Path>
    <Anchor>aaef3ec47e01fa98252d302fc41b5d926</Anchor>
    <DeclaredIn>WhiteNoiseInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playMIDI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::WhiteNoiseInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise_instrument.html</Path>
    <Anchor>adde4664f9158068fb7d8cb08f87a0397</Anchor>
    <DeclaredIn>WhiteNoiseInstrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>afa6f111dc85dab7a7bdf5e2cc6c165af</Anchor>
    <Abstract>Accessors. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a79aab7d10f67e121641d09224eb230bb</Anchor>
    <Abstract>my UGen graph </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>envelopes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a58dc9b22696af5314e391ed1212782c6</Anchor>
    <Abstract>the map of ugens in the graph by name </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a2714d7d2ec9c9dc7008e81b31e423f1b</Anchor>
    <Abstract>the vector of envelopes to query or trigger </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genNamed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abccad2cc3a254ae6bac8c660f7518778</Anchor>
    <Abstract>answer my name answer the number of channels </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abeb0b477a2388f8c7a2b41e87ad24c01</Anchor>
    <Abstract>Accessor management. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ae5f78c65cf53af61bbdcc3a8e228f947</Anchor>
    <Abstract>answer the accessor vector </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a55b0b996bba1b6ce2ed06e32e212af21</Anchor>
    <Abstract>answer the number of accessors </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a751268fdb83b44806a6f0b745400fce5</Anchor>
    <Abstract>set a named parameter </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a875c2749e3c590a150e157e1be308677</Anchor>
    <Abstract>really compute the next buffer given an offset base channel; this is called by nextBuffer, possibly multiple times </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a05fbcc14ac4a0cd792e85aff09147b3b</Anchor>
    <Abstract>Envelope query and re-trigger. </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>play</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ab643e7923572c1cf2b4edb62cb1fc14a</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playOSC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a15f73ef9e52d47cd719e0720c0ada60b</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>playNote</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a1b783961f66930972f30e242139be90f</Anchor>
    <Abstract>Play a note (subclasses refine) </Abstract>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>abffd98c97971ef8ec4c893f8d019e3c1</Anchor>
    <DeclaredIn>Instrument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae1172496abefc5458c0034bb72be2b73</Anchor>
    <Abstract>pretty-print the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAEnv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WhiteNoiseInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise_instrument.html</Path>
    <Anchor>a090707d842f972f6c63221f8ccaa4f01</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WhiteNoiseInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise_instrument.html</Path>
    <Anchor>aa10a3e8c6067f43d7dd64e7c075da9b9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLpfilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WhiteNoiseInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise_instrument.html</Path>
    <Anchor>aa4b04f7b45f9b9096f28b6fef6ad0542</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAPul</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::WhiteNoiseInstrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_white_noise_instrument.html</Path>
    <Anchor>a201fa1754f58858c640e39f5b4c179a1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGraph</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a3685284d2311cfe1d10f38536c424666</Anchor>
    <Abstract>Caches. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a660770fe07dc68cb05f277ff03130ec5</Anchor>
    <Abstract>my name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUGens</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ab5af1851504b58a140055423100bc61a</Anchor>
    <Abstract>the map of ugens in the graph by name </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnvelopes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>a07ff212be08d5cc25fa2a328dd630188</Anchor>
    <Abstract>the vector of envelopes to query or trigger </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAccessors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Instrument</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_instrument.html</Path>
    <Anchor>ad52424c33a5b87976186ef9e3f784a73</Anchor>
    <Abstract>the accessor vector </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Abstract>Window; The superclass of all other window function classes in CSL. Subclasses need only to implement...</Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a74e6087da23d3c24e9fac0245e5ec92c</Anchor>
    <Abstract>Creates a window using the default Gestalt size and a gain of 1; &lt; Creates a window (hann) with the s...</Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a7661ee928141eef983e34cd519df2184</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a245d821e6016fa1f6970ccbbedd635f6</Anchor>
    <Abstract>clean-up . . . free the allocated buffer that held the window data. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a445538717eb019a4a4b9f2581b34ee3e</Anchor>
    <Abstract>Set the number of samples the window spans. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a964f52a0cd1ee2089a632c507d0d87ec</Anchor>
    <Abstract>Set the gain to which the window should be normalized. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a02b50e78cdcc095403b5b96d37732bae</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a7b53f0c4c280029dc76470d3b3fcd890</Anchor>
    <Abstract>Returns a pointer to the window data. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>acfcb1d9b3ede7ac833d01b0cb17e0d64</Anchor>
    <Abstract>Print some info about the window. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a2f825e701aac9728f0537bed4a9e023a</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a99a238dd609ea713a9beb3947d34a1f1</Anchor>
    <Abstract>get/set the receiver&amp;#39;s frame rate </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a059f46216ac25c66303d4a4a0fc05908</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6b32fca84b97b2188d1083fc14ad2e3b</Anchor>
    <Abstract>get/set the receiver&amp;#39;s number of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1e11315d93c96243ea01c6f81c2b3398</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a25220db411018d17aa90fa5f1e2cd7db</Anchor>
    <Abstract>get/set the receiver&amp;#39;s buffer copy policy </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac2e590724c0a93b36ba2e9932930a2aa</Anchor>
    <Abstract>get a buffer of Frames – this is the core CSL &quot;pull&quot; function; the given buffer can be written into...</Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a3cc6d36b2f6449ee2d6194633740fb6c</Anchor>
    <Abstract>query whether I&amp;#39;m fixed (StaticVariable overrides this) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae17d9b2638d6ba280f8b8de87e5ac071</Anchor>
    <Abstract>query whether I&amp;#39;m currently active (Envelopes can go inactive) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ac552ea0ee58637e985321ed62920003a</Anchor>
    <Abstract>add to or return the UGen vector of outputs </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a33dc32beaa3144b33c7b3c639be2e5ed</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a404d62d57173b0b0f4a3b4f547390e8c</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aab231fefa52c4f7fb56c9435751ee813</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ae26eb0bfea17ced109bb5301b83eedd3</Anchor>
    <Abstract>check for fan-out and copy previous buffer; return true if fanning out </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleFanOut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>ab0421f1e05e97b6ab6c4a667a54843b3</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a5a86bdb347aca7d97253501e957a31bb</Anchor>
    <Abstract>set/get the value (not allowed in the abstract, useful for static values) </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>aaeddb654f3663338451f9f1d1c76c7c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a6bb76b22361cee5f900d961823f2930b</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3ffed5d9cb58915d9eb955360e616df7</Anchor>
    <Abstract>(possibly notify obersvers on my death) </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detachObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>adc085a325daba33ffd3d636f2c5387b1</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a9e422ab16017b0bd488b27434d8eed95</Anchor>
    <Abstract>this is what I send to myself to notify my observers; It&amp;#39;s not overridden in general. It results in the observers receiving update() calls &lt; override evaluate to filter updates to the observer map </Abstract>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Model</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_model.html</Path>
    <Anchor>a3989dbf7dc2c5624e47e4405d5caa83e</Anchor>
    <DeclaredIn>CGestalt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fillWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>addb1d678c157d5dd40a9cff2e3172822</Anchor>
    <Abstract>subclasses override this to fill the buffer with corresponding function. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeroBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a14621f54452b97881bacefabe88d914c</Anchor>
    <Abstract>utility method to zero out an outputBuffer </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a8fe40904c35cdede17b4f6f7ba06e6a7</Anchor>
    <Abstract>used to store the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowBufferPos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>aa0ac80869363b3471bd25727443529b3</Anchor>
    <Abstract>where am I in the window buffer </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mWindowSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a4a832d761a5101d8dca5e820914e491d</Anchor>
    <Abstract>length in samples of the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mGain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::Window</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_window.html</Path>
    <Anchor>a185596ca7875d3cfa30e089d34ae0fe9</Anchor>
    <Abstract>gain for the window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a1a80bacb20e960c9a4011916cf7d2cbc</Anchor>
    <Abstract>trigger ignored here </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a905d2cd8a1d8ac233fdb025d1a545205</Anchor>
    <Abstract>my &quot;expected&quot; number of output channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCopyPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a47d5b09c3229e15fb937c40e9cd12182</Anchor>
    <Abstract>the policy I use if asked for more or fewer channels </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a560ed71245bfa740cec9fcd42210f5e1</Anchor>
    <Abstract>the vector of my output UGens </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumOutputs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a18fbfa273518b084b5e18aed48e1ea09</Anchor>
    <Abstract>the number of outputs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutputCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a8656302c00027e557a14e3f2f9f024fc</Anchor>
    <Abstract>my past output ring buffer (only used in case of fan-out) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>csl::UnitGenerator</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_unit_generator.html</Path>
    <Anchor>a0a4930d1e7e2332b1c6e1a68ac2d9241</Anchor>
    <Abstract>the highest-seen buffer seq number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>csl::Writeable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>csl::Writeable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_writeable.html</Path>
    <Abstract>Writeable – a mix-in for buffers and streams that one can write to. </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Writeable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_writeable.html</Path>
    <Anchor>a8985abc457cabe1595d704642216b413</Anchor>
    <Abstract>write to the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Writeable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Writeable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_writeable.html</Path>
    <Anchor>a247c44b4f4ebc2521c107b56ace0a8c8</Anchor>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>csl::Writeable</Scope>
    </TokenIdentifier>
    <Path>classcsl_1_1_writeable.html</Path>
    <Anchor>ac402dc4b6151052465f5ca9c4554b7a0</Anchor>
    <Abstract>write to the receiver </Abstract>
    <DeclaredIn>CSL_Core.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a88fd01d5d9c91ebd98930597d3734727</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a5d484978c75781254aa6c410861a52cc</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>ae994d07056ce3ca2b2cc29013874f2e7</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a137076e8b66125563d0ad02fc3314ff9</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>aae56f5c1beded36563edb34a78b71114</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>ac3df23b48b06feedcadd0abd993a435e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a5edc8142a584b0e677957a7b8aca1e98</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>acb313e55e97969dc2cc33ac014e49e74</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a11a3d0f8b613cb75119c13c5111685e5</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a64239c10861ecfa86877b755fbad2786</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a6042519809745b5432a3bb5385796f5e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a337379660a572f9ba171ab9f93c9d6bc</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator^</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>acd8cef2c31fb279b32a53ac5bb3eb0b6</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator~</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a55be57057b1bb840b952d9bdfbde799b</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math</Scope>
    </TokenIdentifier>
    <Path>namespacemath.html</Path>
    <Anchor>a374fe720912538ebb4e51dedf333db09</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::matrix</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a8314549b1d32db294e1c9faee50b2195</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a6cca3cb391b07e4a986a663bcd479ec4</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~matrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a0eff9cd8bd378d56f4c7ea3852eca4f2</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a9eeb9d0d9bf26a0e40360ca04bdec489</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RowNo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>af762fa2cf218fe771dda75a218e0c9ab</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ColNo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a89466bca712f9bf98f7a33844892dd99</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>aabd38b176bae6ed81b0948a31a43bdc8</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a634a81c7786500b38b68a4aec4e629de</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a2a10bf3423146977ff4e8c83e35cb567</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a8635247bc805b12ce57caab8be452e69</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>acc61fc94514c5582564ddb950eb05fab</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a16462e3c05db652fdb43038e1662b198</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a0751f28d0026948f1ddba32f1069e976</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a6b7e4d12e0fe7307b8cac4c50c5606c4</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>ab05da25a3a682b7c40bfaa72ede9bd1e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator^=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a64ce72359b3eca9573fff52624ddec78</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Null</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>ad47fdbba3b7c62b74f56cbc3c87a2235</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Null</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>acb5420c79528c9795ec88e894cc48c65</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Unit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a7a3591abb23eb412b493724d8ad9ebe4</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Unit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a4e2fa36894198e91e0add76274eb9649</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>ae38a9253bd5f42547c3579c36a4b713c</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Solve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>afdb3bb4d9d07a3eee20712fc0c676cf9</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Adj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>aa941d3a27c66fc3d378e4ff602da3e43</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Inv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a31d6ee385a852bee25a11fd9aabf5fae</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Det</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a9f64592a66bc6533c71a4c90ae7e99d1</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Norm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a7e38527bd9413f98afd8dfa78d029ccb</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cofact</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a5ad3d4049b9df69f194e0ca44fdac8c8</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cond</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a49d155090bef65d05c4246532c5e780e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsSquare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a02936d97e130f90d9dab24cbeabb404e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsSingular</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a9d092f13a2ff31382631d41e95f4dc7e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsDiagonal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a5d8f338ce5948d94c4377aed581566d3</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsScalar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>ac75de35b605ead2899ba9f5c6375db5a</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a40839134b060801318619a3bc2a540fc</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsNull</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>aee4b45731f622362caf5ea461a3e8644</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsSymmetric</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a9630dc23e5095b638808ebe4dd230cf7</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsSkewSymmetric</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a6497c54c5f080c9204d88f392830b743</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsUpperTriangular</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a0f6a28ac6f1605f3eaae0fc5e871839d</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsLowerTriangular</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a336efdc127c50af5b9163ae28defd24f</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a8314549b1d32db294e1c9faee50b2195</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a6cca3cb391b07e4a986a663bcd479ec4</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~matrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a0eff9cd8bd378d56f4c7ea3852eca4f2</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a9eeb9d0d9bf26a0e40360ca04bdec489</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RowNo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>af762fa2cf218fe771dda75a218e0c9ab</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ColNo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a89466bca712f9bf98f7a33844892dd99</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>aabd38b176bae6ed81b0948a31a43bdc8</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a634a81c7786500b38b68a4aec4e629de</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a2a10bf3423146977ff4e8c83e35cb567</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a8635247bc805b12ce57caab8be452e69</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>acc61fc94514c5582564ddb950eb05fab</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a16462e3c05db652fdb43038e1662b198</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a0751f28d0026948f1ddba32f1069e976</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a6b7e4d12e0fe7307b8cac4c50c5606c4</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator/=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>ab05da25a3a682b7c40bfaa72ede9bd1e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator^=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a64ce72359b3eca9573fff52624ddec78</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Null</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>ad47fdbba3b7c62b74f56cbc3c87a2235</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Null</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>acb5420c79528c9795ec88e894cc48c65</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Unit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a7a3591abb23eb412b493724d8ad9ebe4</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Unit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a4e2fa36894198e91e0add76274eb9649</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>ae38a9253bd5f42547c3579c36a4b713c</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Solve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>afdb3bb4d9d07a3eee20712fc0c676cf9</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Adj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>aa941d3a27c66fc3d378e4ff602da3e43</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Inv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a31d6ee385a852bee25a11fd9aabf5fae</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Det</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a9f64592a66bc6533c71a4c90ae7e99d1</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Norm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a7e38527bd9413f98afd8dfa78d029ccb</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cofact</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a5ad3d4049b9df69f194e0ca44fdac8c8</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cond</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a49d155090bef65d05c4246532c5e780e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsSquare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a02936d97e130f90d9dab24cbeabb404e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsSingular</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a9d092f13a2ff31382631d41e95f4dc7e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsDiagonal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a5d8f338ce5948d94c4377aed581566d3</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsScalar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>ac75de35b605ead2899ba9f5c6375db5a</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a40839134b060801318619a3bc2a540fc</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsNull</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>aee4b45731f622362caf5ea461a3e8644</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsSymmetric</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a9630dc23e5095b638808ebe4dd230cf7</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsSkewSymmetric</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a6497c54c5f080c9204d88f392830b743</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsUpperTriangular</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a0f6a28ac6f1605f3eaae0fc5e871839d</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsLowerTriangular</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a336efdc127c50af5b9163ae28defd24f</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a5961fb2a2917be994ddd868d82a7db4f</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realloc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>af37525d3dbefe9bb104cb9e090e35497</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pivot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a5f89242143e7fd35a9eceacf8597f043</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a5961fb2a2917be994ddd868d82a7db4f</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realloc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>af37525d3dbefe9bb104cb9e090e35497</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pivot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a5f89242143e7fd35a9eceacf8597f043</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_m</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::matrix</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix.html</Path>
    <Anchor>a4d7b5b7b9fcf652e76f1c886d8682c03</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::matrix::base_mat</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>math::matrix::base_mat</Scope>
    </TokenIdentifier>
    <Path>structmath_1_1matrix_1_1base__mat.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base_mat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::matrix::base_mat</Scope>
    </TokenIdentifier>
    <Path>structmath_1_1matrix_1_1base__mat.html</Path>
    <Anchor>a3df221d8bf88bfbd7f32b70473f565b4</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~base_mat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::matrix::base_mat</Scope>
    </TokenIdentifier>
    <Path>structmath_1_1matrix_1_1base__mat.html</Path>
    <Anchor>a3e761dfe0989b010a3e9da6cf669700e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>base_mat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::matrix::base_mat</Scope>
    </TokenIdentifier>
    <Path>structmath_1_1matrix_1_1base__mat.html</Path>
    <Anchor>a3df221d8bf88bfbd7f32b70473f565b4</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~base_mat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>math::matrix::base_mat</Scope>
    </TokenIdentifier>
    <Path>structmath_1_1matrix_1_1base__mat.html</Path>
    <Anchor>a3e761dfe0989b010a3e9da6cf669700e</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Val</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::matrix::base_mat</Scope>
    </TokenIdentifier>
    <Path>structmath_1_1matrix_1_1base__mat.html</Path>
    <Anchor>a2d403e6598d4f7aa39ab4ddf68b7f880</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Row</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::matrix::base_mat</Scope>
    </TokenIdentifier>
    <Path>structmath_1_1matrix_1_1base__mat.html</Path>
    <Anchor>acbffad5b134f158419c4f1d11278b1e4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Col</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::matrix::base_mat</Scope>
    </TokenIdentifier>
    <Path>structmath_1_1matrix_1_1base__mat.html</Path>
    <Anchor>a0d2353f67c1727fd1a2a089ceb459464</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RowSiz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::matrix::base_mat</Scope>
    </TokenIdentifier>
    <Path>structmath_1_1matrix_1_1base__mat.html</Path>
    <Anchor>abfe832bdf41a57153da45b720cbeb718</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ColSiz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::matrix::base_mat</Scope>
    </TokenIdentifier>
    <Path>structmath_1_1matrix_1_1base__mat.html</Path>
    <Anchor>a7d10c57f735b4f39287fa64426bc3438</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Refcnt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>math::matrix::base_mat</Scope>
    </TokenIdentifier>
    <Path>structmath_1_1matrix_1_1base__mat.html</Path>
    <Anchor>a1ea9c8a723edc5ed6dca61d9c9d4c7b2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>math::matrix_error</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>math::matrix_error</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix__error.html</Path>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrix_error</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix_error</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix__error.html</Path>
    <Anchor>ad494f84f8061c4ddc0e4f7cc63aa9898</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrix_error</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>math::matrix_error</Scope>
    </TokenIdentifier>
    <Path>classmath_1_1matrix__error.html</Path>
    <Anchor>ad494f84f8061c4ddc0e4f7cc63aa9898</Anchor>
    <DeclaredIn>matrix.h</DeclaredIn>
  </Token>
</Tokens>

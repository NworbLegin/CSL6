.TH MAfSubMat 3tsp "TSP (libtsp/MA)"
.SH Routine
.in +4n
.ti -4n
float **MAfSubMat (const float *A[], int n, int m, int Nrow)
.in -4n
.SH Purpose
.in +4n
.ti -4n
Set up pointers to a submatrix of a matrix of float values
.in -4n
.SH Description
This routine allocates an array of row pointers.  These pointers access a
submatrix of a previously allocated matrix.  The returned value is a pointer
to an array of pointers to the rows of the submatrix.  The calling routine
can treat the returned value as a two-dimensional matrix of float values.
Consider the invocation
.ft CW
.nf
.ne 3
  float **A;
  float **sA;
  ...
  A = MAfAllocMat (Nrow, Ncol);
  sA = MAfSubMat ((const float **) A, n, m, Nrow-n);
      ...  now sA[0][0] == A[n][m]
.fi
.ft P
Then sA[i][j] is a matrix of float values for 0 <= i < N-n and
0 <= j < Ncol-m.  The array of pointers to the submatrix should be
deallocated using the routine UTfree.
.SH Parameters
.in +4n
.ti -4n
<-  float **MAfSubMat
.br
Returned pointer to array of row pointers for the submatrix
.ti -4n
 -> const float *A[]
.br
A is an array of pointers to the rows of an N by N matrix.  Note that
with ANSI C, if the actual parameter is not declared to have the const
attribute, an explicit cast to (const float **) is required.
.ti -4n
 -> int n
.br
Index for the first row of the submatrix
.ti -4n
 -> int m
.br
Index for the first column of the submatrix
.ti -4n
 -> int Nrow
.br
Number of rows in the submatrix
.in -4n
.SH Author / revision
P. Kabal
/ Revision 1.8  2003/05/09
.SH See Also
MAfAllocMat,
UTfree,
libtsp

.TH MAfAllocMat 3tsp "TSP (libtsp/MA)"
.SH Routine
.in +4n
.ti -4n
float **MAfAllocMat (int Nrow, int Ncol)
.in -4n
.SH Purpose
.in +4n
.ti -4n
Allocate a matrix of float values
.in -4n
.SH Description
This routine allocates a matrix of float values.  The returned value is
a pointer to an array of pointers to the rows of the matrix.  The calling
routine can treat the returned value as a two-dimensional matrix of float
values.  Consider the invocation
.ft CW
.nf
.ne 3
  float **A;
  int Nrow, Ncol;
  ...
  A = MAfAllocMat (Nrow, Ncol);
.fi
.ft P
Then A[i][j] is a matrix of float values for 0 <= i < Nrow and
0 <= j < Ncol.  The routine MAfAllocMat allocates an array of Nrow pointers
and a contiguous block of memory sufficient to hold the Nrow*Ncol float
values.  Each pointer is initialized to point to a row of the matrix.  A[0]
is a pointer to the first row (Ncol float values) (and to the full matrix of
Nrow*Ncol float values).  A[1] points to the next row (Ncol elements beyond
A[0]), and so on.
.PP
The space allocated by this routine should be deallocated using the routine
MAfFreeMat.
.SH Parameters
.in +4n
.ti -4n
<-  float **MAfAllocMat
.br
Returned pointer to array of row pointers
.ti -4n
 -> int Nrow
.br
Number of rows for the matrix
.ti -4n
 -> int Ncol
.br
Number of elements in each row (number of columns)
.in -4n
.SH Author / revision
P. Kabal
/ Revision 1.8  2003/05/09
.SH See Also
MAdAllocMat,
MAfFreeMat,
MAfSubMat,
libtsp

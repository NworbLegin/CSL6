.TH MAfChSolve 3tsp "TSP (libtsp/MA)"
.SH Routine
.in +4n
.ti -4n
int MAfChSolve (const float *A[], const float b[], float x[], int N);
.in -4n
.SH Purpose
.in +4n
.ti -4n
Solve a positive definite set of equations
.in -4n
.SH Description
This routine uses the Cholesky decomposition algorithm to solve a set of
equations specified by a positive definite matrix.  Cholesky decomposition is
used to express the matrix A in terms of a product of upper and lower
triangular matrices,
.PP
.ft CW
.nf
.ne 3
  A = L U,  where U = L' and L and U are triangular matrices.
.fi
.ft P
.PP
The set of equations A x = b, becomes
.PP
.ft CW
.nf
.ne 3
  L y = b, where y = U x .
.fi
.ft P
.PP
The first triangular system of equations is solved by substitution to get
the vector y.  The vector y is then used to solve the second triangular set
of equations to get the solution vector x.
.PP
This routine requires
.ft CW
.nf
.ne 3
          N         square roots,
     (N^2+3N)/2     divides, and
  (N^3+6N^2-7N)/6   multiplies and adds.
.fi
.ft P
.SH Parameters
.in +4n
.ti -4n
<-  int MAfChSolve
.br
Error code, zero for no error. If the error code is nonzero, the
decomposition of matrix A failed.  The matrix A is not positive definite,
possibly due to loss of significance.  The value k indicates that the
factorization failed at step k.  The equations are solved for the (k-1)
by (k-1) sub-system, ignoring the rest of the matrix A and the rest of
the vector b.  The solution appears as the first k-1 elements of vector
x.  The remaining elements of x are set to zero.
.ti -4n
 -> const float *A[]
.br
A is an array of pointers to the rows of an N by N matrix.  The matrix is
assumed to be symmetric and positive definite.  Only the lower triangular
portion of the matrix is accessed.  Note that with ANSI C, if the actual
parameter is not declared to have the const attribute, an explicit cast
to (const float **) is required.
.ti -4n
 -> const float b[]
.br
Right hand side vector (N elements)
.ti -4n
<-  float x[]
.br
Solution vector (N elements).  The vectors b and x can occupy the same
storage locations.
.ti -4n
 -> int N
.br
Number of equations
.in -4n
.SH Author / revision
P. Kabal
/ Revision 1.12  2003/05/09
.SH See Also
MAfTpSolve,
libtsp

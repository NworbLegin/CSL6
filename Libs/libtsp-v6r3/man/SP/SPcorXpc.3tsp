.TH SPcorXpc 3tsp "TSP (libtsp/SP)"
.SH Routine
.in +4n
.ti -4n
double SPcorXpc (const float rxx[], float pc[], int Np)
.in -4n
.SH Purpose
.in +4n
.ti -4n
Find predictor coefficients from autocorrelation values
.in -4n
.SH Description
This routine calculates the coefficients for a linear predictor which
minimizes the resulting mean square error given the autocorrelation of the
input signal.  Consider a linear predictor with Np coefficients,
.ft CW
.nf
.ne 3
          Np
  y(k) = SUM p(i) x(k-i) ,
         i=1
.fi
.ft P
where x(k) is the input signal.  The prediction error is
.PP
.ft CW
.nf
.ne 3
  e(k) = x(k) - y(k) .
.fi
.ft P
.PP
To minimize the mean-square prediction error, solve
.PP
.ft CW
.nf
.ne 3
  R p = r,
.fi
.ft P
.PP
where R is a symmetric positive definite covariance matrix, p is a vector
of predictor coefficients and r is a vector of correlation values.  The
matrix R and and vector r are defined as follows
.PP
.ft CW
.nf
.ne 3
  R(i,j) = E[x(k-i) x(k-j)],  for 1 <= i,j <= Np,
    r(i) = E[x(k) x(k-i)],    for 1 <= i <= Np.
.fi
.ft P
.PP
The resulting mean-square prediction error can be expressed as
.PP
.ft CW
.nf
.ne 3
  perr = Ex - 2 p'r + p'R p
       = Ex - p'r ,
.fi
.ft P
.PP
where Ex is the mean-square value of the input signal,
.PP
.ft CW
.nf
.ne 3
  Ex = E[x(k)^2].
.fi
.ft P
.PP
For this routine, the matrix R must be symmetric and Toeplitz.  Then
.PP
.ft CW
.nf
.ne 3
  R(i,j) = rxx(|i-j|)
    r(i) = rxx(i)
.fi
.ft P
.PP
If the correlation matrix is numerically not positive definite, or if the
prediction error energy becomes negative at some stage in the calculation,
the remaining predictor coefficients are set to zero.  This is equivalent to
truncating the autocorrelation coefficient vector at the point at which it
is positive definite.
.PP
This subroutine solves for the predictor coefficients using
Durbin's recursion.
This algorithm requires
.ft CW
.nf
.ne 3
  Np    divides,
  Np*Np multiplies, and
  Np*Np adds.
.fi
.ft P
.PP
Predictor coefficients are usually expressed algebraically as vectors with
1-offset indexing.  The correspondence to the 0-offset C-arrays is as
follows.
.ft CW
.nf
.ne 3
  p(1) <==> pc[0]       predictor coefficient corresponding to lag 1
  p(i) <==> pc[i-1]     1 <= i < Np
.fi
.ft P
.SH Parameters
.in +4n
.ti -4n
<-  double SPcorXpc
.br
Resultant mean-square prediction error
.ti -4n
 -> const float rxx[]
.br
Np+1 element vector of autocorrelation values.  Element rxx[i] is the
autocorrelation at lag i.
.ti -4n
<-  const float pc[]
.br
Np element vector of predictor coefficients.  Coefficient pc[i] is the
predictor coefficient corresponding to lag i+1.
.ti -4n
-> const float rxx[]
.br
Np+1 element vector of autocorrelation values.  Element rxx[i] is the
autocorrelation at lag i.
.ti -4n
->  int Np
.br
Number of predictor coefficients
.in -4n
.SH Author / revision
P. Kabal
/ Revision 1.19  2003/05/09
.SH See Also
SPcovXpc,
SPpcXec,
libtsp

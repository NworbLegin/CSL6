.TH SPcorPmse 3tsp "TSP (libtsp/SP)"
.SH Routine
.in +4n
.ti -4n
double SPcorPmse (const float pc[], const float rxx[], int Np)
.in -4n
.SH Purpose
.in +4n
.ti -4n
Calculate the mean-square prediction error
.in -4n
.SH Description
This function calculates the mean-square prediction error for a linear
predictor.  Consider a linear predictor with Np coefficients,
.ft CW
.nf
.ne 3
          Np
  y(k) = SUM p(i) x(k-i) ,
         i=1
.fi
.ft P
where x(k) is the input signal.  The prediction error is
.PP
.ft CW
.nf
.ne 3
  e(k) = x(k) - y(k) .
.fi
.ft P
.PP
The mean-square prediction error is E[e(k)^2] or in vector-matrix notation
.PP
.ft CW
.nf
.ne 3
  E = Ex - 2 p'r + p'R p ,
.fi
.ft P
.PP
The mean-square value Ex, matrix R and vector p are defined as follows
.ft CW
.nf
.ne 3
      Ex = E[x(k)^2]
  R(i,j) = E[x(k-i) x(k-j)],  for 1 <= i,j <= Np,
    r(i) = E[x(k) x(k-i)],    for 1 <= i <= Np.
.fi
.ft P
.PP
For this routine, the matrix R must be symmetric and Toeplitz.  Then
.PP
.ft CW
.nf
.ne 3
  R(i,j) = rxx(|i-j|)
    r(i) = rxx(i)
.fi
.ft P
.PP
Predictor coefficients are usually expressed algebraically as vectors with
1-offset indexing.  The correspondence to the 0-offset C-arrays is as
follows.
.ft CW
.nf
.ne 3
  p(1) <==> pc[0]       predictor coefficient corresponding to lag 1
  p(i) <==> pc[i-1]     1 <= i < Np
.fi
.ft P
.SH Parameters
.in +4n
.ti -4n
<-  double SPcorPmse
.br
Resultant mean-square prediction error
.ti -4n
 -> const float pc[]
.br
Np element vector of predictor coefficients.  Coefficient pc[i] is the
predictor coefficient corresponding to lag i+1.
.ti -4n
 -> const float rxx[]
.br
Np+1 element vector of autocorrelation values.  Element rxx[i] is the
autocorrelation at lag i.
.ti -4n
->  int Np
.br
Number of predictor coefficients
.in -4n
.SH Author / revision
P. Kabal
/ Revision 1.6  2003/05/09
.SH See Also
SPcorXpc,
libtsp

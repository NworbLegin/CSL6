.TH MSdPolyInt 3tsp "TSP (libtsp/MS)"
.SH Routine
.in +4n
.ti -4n
double MSdPolyInt (double x, const double xa[], const double ya[], int N,
double buff[])
.in -4n
.SH Purpose
.in +4n
.ti -4n
Polynomial interpolation given a set of points
.in -4n
.SH Description
Given a set of points (xa and ya values), this routine evaluates the
polynomial passing through those points.  The calculation uses
Neville's algorithm.
.ft CW
.nf
.ne 3
  W. H. Press, S. A. Teukolsky, W. T. Vetterling,  and B. P. Flannery,
  "Numerical Recipes in C", 2nd Ed., Cambridge University Press, 1992.
  P. Burger, D. Gillies, "Interactive Computer Graphics", Addison-Wesley,
  1989.
.fi
.ft P
.PP
The computational complexity is proportional to N^2.  If the same polynomial
is to be evaluated at several points, other schemes which pre-compute a set
of coefficients for the polynomial may be preferable.
.SH Parameters
.in +4n
.ti -4n
<-  double MSdPolyInt
.br
Value of the polynomial evaluated at x
.ti -4n
 -> double x
.br
Evaluation point
.ti -4n
 -> const double xa[]
.br
Array of N abscissa values
.ti -4n
 -> const double ya[]
.br
Array of N ordinate values
.ti -4n
 -> int N
.br
Number of reference points
.ti -4n
 -> double buff[]
.br
Buffer (2N values) for use internally.  If buff is set to NULL,
a temporary buffer will be created internally.
.in -4n
.SH Author / revision
P. Kabal
/ Revision 1.3  2003/05/09
.SH See Also
libtsp

.TH libtsp 3tsp "TSP (libtsp)"
.SH Name
libtsp \- TSP Signal Processing Software Library
.SH Description
The libtsp
package is a library of routines for signal processing.  It also
includes a number of general purpose routines useful for program development.
Examples of programs using this library for filtering, LPC analysis/synthesis
and resampling are available as part of the <DFN>AFsp</DFN> package.

The libtsp
library routines are divided into a number of categories, with the
first two letters of the routine name keyed to the category.  Examples of the
functions available are listed for each category.
.RE
.in +5n
.ti -5n
AF \- Audio file routines
.ti -2n
- Open and close audio files
.ti -2n
- Read and write audio files
.ti -5n
FI \- Filtering routines
.ti -2n
- Filter a signal (FIR and IIR filters)
.ti -2n
- Generate windows (Hamming, Kaiser and raised-cosine)
.ti -2n
- Design Kaiser-windowed lowpass filters
.ti -2n
- Read filter coefficient files
.ti -5n
FL \- File routines
.ti -2n
- Fill in the full path name for a file name
.ti -2n
- Return the creation date for a file
.ti -2n
- Prompt and read a line of text
.ti -2n
- Read and write numeric data
.ti -5n
FN \- Functions
.ti -2n
- Bessel function (0'th order modified)
.ti -2n
- Greatest common divisor
.ti -2n
- Series expansion of Chebyshev polynomials
.ti -2n
- Log base 2
.ti -5n
MA \- Matrix routines
.ti -2n
- Allocate space for a matrix
.ti -2n
- Print a matrix
.ti -2n
- Calculate quadratic and bilinear forms
.ti -2n
- Solve equations (Cholesky decomposition and Toeplitz matrix)
.ti -5n
MS \- Miscellaneous routines
.ti -2n
- Convolve coefficients of two arrays
.ti -2n
- Nearest integer, floor and ceiling functions
.ti -2n
- Interpolate a table of values (linear and cubic)
.ti -2n
- Rational approximation to a value
.ti -5n
SP \- Signal processing routines
.ti -2n
- Fast Fourier transform (complex and real)
.ti -2n
- Discrete cosine transform
.ti -2n
- Calculate covariance or autocorrelation from a block of data
.ti -2n
- Convert between linear prediction parameters (error filter coefficients,
predictor coefficients, cepstral coefficients, line spectral frequencies,
reflection coefficients, autocorrelation coefficients)
.ti -2n
- Solve for linear prediction coefficients (covariance and autocorrelation
methods)
.ti -2n
-Calculate the mean-square filtering error
.ti -2n
- Distance measures (Itakura-Saito and RMS log LPC)
.ti -2n
- Quantize a value given a table of boundaries (binary search)
.ti -5n
ST \- String routines
.ti -2n
- Copy and concatenate strings
.ti -2n
- Decode numeric values from a string
.ti -2n
- Match a string to a table of keywords
.ti -5n
UT \- Utility routines
.ti -2n
- Decode command line options
.ti -2n
- Error message routines
.ti -5n
VR \- Vector routines
.ti -2n
- Print a vector of values
.ti -2n
- Vector functions (zero an array, convert to dB, dot product, minimum,
maximum, scale, add, subtract, multiply)
.RE
.PD

.SH Audio file routines
.in +6n
.ti -6n
AFclose \- Close an audio file
.ti -6n
AFdReadData \- Read data from an audio file (return double values)
.ti -6n
AFdWriteData \- Write data to an audio file (double input values)
.ti -6n
AFfReadData \- Read data from an audio file (return float values)
.ti -6n
AFfWriteData \- Write data to an audio file (float input values)
.ti -6n
AFopnRead \- Open an audio file for reading
.ti -6n
AFopnWrite \- Open an audio file for writing
.ti -6n
AFsetFileType \- Set the input audio file type
.ti -6n
AFsetInfo \- Set the audio file information string
.ti -6n
AFsetNHpar \- Set defaults for input headerless audio files from a string specification
.ti -6n
AFsetSpeaker \- Set defaults for loudspeaker spacial positions
.in -6n
.SH Filtering routines
.in +6n
.ti -6n
FIdBiquad \- Filter a signal using a biquadratic IIR filter
.ti -6n
FIdConvSI \- Filter a signal with an FIR filter (sample rate change)
.ti -6n
FIdConvol \- Filter a signal with an FIR filter
.ti -6n
FIdFiltAP \- Filter a signal with an all-pole IIR filter
.ti -6n
FIdFiltIIR \- Filter a signal using a cascade of biquadratic IIR filters
.ti -6n
FIdKaiserLPF \- Generate a Kaiser windowed lowpass filter
.ti -6n
FIdReadFilt \- Read a filter coefficient file
.ti -6n
FIdWinHamm \- Generate a generalized Hamming window
.ti -6n
FIdWinKaiser \- Generate a Kaiser window
.ti -6n
FIfBiquad \- Filter a signal using a biquadratic IIR filter
.ti -6n
FIfConvSI \- Filter a signal with an FIR filter (sample rate change)
.ti -6n
FIfConvol \- Filter a signal with an FIR filter
.ti -6n
FIfDeem \- Deemphasize a signal using a first order recursive filter
.ti -6n
FIfFiltAP \- Filter a signal with an all-pole IIR filter
.ti -6n
FIfFiltIIR \- Filter a signal using a cascade of biquadratic IIR filters
.ti -6n
FIfKaiserLPF \- Generate a Kaiser windowed lowpass filter
.ti -6n
FIfPreem \- Preemphasize a signal using a first difference filter
.ti -6n
FIfReadFilt \- Read a filter coefficient file
.ti -6n
FIfWinHCos \- Generate a Hamming/cosine window
.ti -6n
FIfWinHamm \- Generate a generalized Hamming window
.ti -6n
FIfWinKaiser \- Generate a Kaiser window
.ti -6n
FIfWinRCos \- Generate a raised-cosine window
.ti -6n
FIgdelFIR \- Calculate the group delay for an FIR filter
.ti -6n
FIgdelIIR \- Calculate the group delay for a cascade IIR filter
.in -6n
.SH File routines
.in +6n
.ti -6n
FLbackup \- Rename an existing file
.ti -6n
FLbaseName \- Return the last component of a file path
.ti -6n
FLdReadData \- Read numeric data in text form from a file
.ti -6n
FLdWriteData \- Write a double array in text form to a file
.ti -6n
FLdate \- Find the last modification time for a file (by name)
.ti -6n
FLdefName \- Fill in file name components from a default string
.ti -6n
FLdirName \- Return all but the last component of a file path
.ti -6n
FLexpHome \- Expand the home directory specification for a file
.ti -6n
FLextName \- Return the extension component of a file name
.ti -6n
FLfReadData \- Read numeric data in text form from a file
.ti -6n
FLfWriteData \- Write a float array in text form to a file
.ti -6n
FLfileDate \- Find the last modification time for an open file
.ti -6n
FLfullName \- Expand a file name path
.ti -6n
FLgetLine \- Read a line of text from a file
.ti -6n
FLgetRec \- Read and assemble a text record from an input stream
.ti -6n
FLhomeDir \- Get the home directory for a user
.ti -6n
FLpathList \- Fill in a directory for a file name from a list of paths
.ti -6n
FLpreName \- Return the last component of a file name stripped of its extension
.ti -6n
FLprompt \- Print a prompt
.ti -6n
FLreadLine \- Print a prompt and read a line of text
.in -6n
.SH Functions
.in +6n
.ti -6n
FNbessI0 \- Evaluate the zeroth-order modified Bessel function of first kind
.ti -6n
FNevChebP \- Evaluate a series expansion in Chebyshev polynomials
.ti -6n
FNgcd \- Find the greatest common divisor of two integer values
.ti -6n
FNiLog2 \- Find the integer greater than or equal to log (base 2) of a given value
.ti -6n
FNsinc \- Evaluate the sin(pi*x)/(pi*x) function
.in -6n
.SH Matrix routines
.in +6n
.ti -6n
MAdAllocMat \- Allocate a matrix of double values
.ti -6n
MAdFreeMat \- Free an allocated double matrix
.ti -6n
MAdPrint \- Print a double matrix along with a header text
.ti -6n
MAfAllocMat \- Allocate a matrix of float values
.ti -6n
MAfChSolve \- Solve a positive definite set of equations
.ti -6n
MAfFreeMat \- Free an allocated float matrix
.ti -6n
MAfPrint \- Print a float matrix along with a header text
.ti -6n
MAfSubMat \- Set up pointers to a submatrix of a matrix of float values
.ti -6n
MAfSyBilin \- Calculate a bilinear form for a symmetric matrix
.ti -6n
MAfSyQuad \- Calculate a quadratic form for a symmetric matrix
.ti -6n
MAfTpQuad \- Calculate a quadratic form for a symmetric Toeplitz matrix
.ti -6n
MAfTpSolve \- Solve a Toeplitz set of equations
.ti -6n
MAiPrint \- Print an integer matrix along with a header text
.ti -6n
MAlPrint \- Print a long integer matrix along with a header text
.in -6n
.SH Miscellaneous routines
.in +6n
.ti -6n
MSdConvCof \- Convolve the coefficients of two vectors
.ti -6n
MSdDeconvCof \- Polyomial divide (deconvolve the coefficients of two vectors)
.ti -6n
MSdIntLin \- Interpolate a table of values using a piecewise linear interpolant
.ti -6n
MSdIntMC \- Interpolate a table of values using a piecewise monotonic cubic interpolant
.ti -6n
MSdLocate \- Binary search in a table
.ti -6n
MSdNint \- Nearest integer function
.ti -6n
MSdPolyInt \- Polynomial interpolation given a set of points
.ti -6n
MSfConvCof \- Convolve the coefficients of two vectors
.ti -6n
MSfGaussRand \- Generate a Gaussian pseudo-random value
.ti -6n
MSfIntLin \- Interpolate a table of values using a piecewise linear interpolant
.ti -6n
MSfIntMC \- Interpolate a table of values using a piecewise monotonic cubic interpolant
.ti -6n
MSfUnifRand \- Generate a uniformly distributed pseudo-random value
.ti -6n
MSiCeil \- Ceiling function for the ratio of two integers
.ti -6n
MSiFloor \- Floor function for the ratio of two integers
.ti -6n
MSiPower \- Integer raised to an integer power
.ti -6n
MSlCeil \- Ceiling function for the ratio of two long ints
.ti -6n
MSlFloor \- Floor function for the ratio of two long ints
.ti -6n
MSratio \- Find a ratio of integers approximation to a floating point value
.in -6n
.SH Signal processing routines
.in +6n
.ti -6n
SPautoc \- Calculate the autocorrelation for a data sequence
.ti -6n
SPcepXpc \- Convert cepstral coefficients to predictor coefficients
.ti -6n
SPcorBWexp \- Bandwidth expand a set of correlation values
.ti -6n
SPcorFilt \- Find filter coefficients to minimize the mean-square error
.ti -6n
SPcorFmse \- Calculate the mean-square filtering error
.ti -6n
SPcorPmse \- Calculate the mean-square prediction error
.ti -6n
SPcorXpc \- Find predictor coefficients from autocorrelation values
.ti -6n
SPcovCXpc \- Find predictor coefficients using the covariance lattice method (Cumani)
.ti -6n
SPcovFilt \- Find filter coefficients using the covariance approach
.ti -6n
SPcovFmse \- Find the mean-square error for a filter (covariance specified)
.ti -6n
SPcovLXpc \- Find predictor coefficients using the covariance lattice method
.ti -6n
SPcovMXpc \- Find predictor coefficients using the modified covariance method
.ti -6n
SPcovPmse \- Calculate the mean-square prediction error (covariance specified)
.ti -6n
SPcovXpc \- Find predictor coefficients using the covariance method
.ti -6n
SPcovar \- Calculate a correlation (covariance) matrix for a data sequence
.ti -6n
SPdCFFT \- Fast Fourier transform (complex data)
.ti -6n
SPdQuantL \- Binary search for a bounding interval
.ti -6n
SPdRFFT \- Fast Fourier transform of a real sequence
.ti -6n
SPecXpc \- Convert prediction error filter coefficients to predictor coefficients
.ti -6n
SPfCFFT \- Fast Fourier transform (complex data)
.ti -6n
SPfDCT \- Calculate the discrete cosine transform
.ti -6n
SPfQuantL \- Binary search for a bounding interval
.ti -6n
SPfQuantU \- Binary search for a bounding interval
.ti -6n
SPfRFFT \- Fast Fourier transform of a real sequence
.ti -6n
SPlpcISdist \- Calculate the Itakura-Saito LPC spectral distance measure
.ti -6n
SPlpcLSdist \- Calculate the RMS log LPC spectral distance measure
.ti -6n
SPlsfXpc \- Convert LSF's to predictor coefficients
.ti -6n
SPpcBWexp \- Bandwidth expand a set of predictor coefficients
.ti -6n
SPpcXcep \- Convert predictor coefficients to cepstral coefficients
.ti -6n
SPpcXcor \- Convert predictor coefficients to correlation values
.ti -6n
SPpcXec \- Convert predictor coefficients to prediction error filter coefficients
.ti -6n
SPpcXlsf \- Convert predictor coefficients to line spectral frequencies
.ti -6n
SPpcXrc \- Convert predictor coefficients to reflection coefficients
.ti -6n
SPrcXpc \- Convert reflection coefficients to predictor coefficients
.in -6n
.SH String routines
.in +6n
.ti -6n
STcatMax \- Append characters to a string (maximum length specified)
.ti -6n
STcopyMax \- Copy at most Maxchar characters to a string
.ti -6n
STcopyNMax \- Copy N characters characters to a string
.ti -6n
STdec1double \- Decode a double value
.ti -6n
STdec1float \- Decode a float value
.ti -6n
STdec1int \- Decode an integer value
.ti -6n
STdec1long \- Decode a long integer value
.ti -6n
STdecDfrac \- Decode a ratio specification of two double values
.ti -6n
STdecIfrac \- Decode a ratio specification of two integer values
.ti -6n
STdecIrange \- Decode a range specification for integer values
.ti -6n
STdecLrange \- Decode a range specification for long integer values
.ti -6n
STdecNdouble \- Decode double values (variable number)
.ti -6n
STdecNfloat \- Decode float values (variable number)
.ti -6n
STdecNint \- Decode integer values (variable number)
.ti -6n
STdecNlong \- Decode long integer values (variable number)
.ti -6n
STfindToken \- Find the first token string in a string
.ti -6n
STkeyMatch \- Match a string to keyword strings
.ti -6n
STkeyXpar \- Decode keywords and return parameter values
.ti -6n
STstrLC \- Copy a string, changing uppercase characters to lowercase
.ti -6n
STtrim \- Copy a string, trimming leading and trailing white-space
.ti -6n
STunQuote \- Copy a string, removing outer quote characters
.in -6n
.SH Utility routines
.in +6n
.ti -6n
UTdate \- Return a date/time string for the current time
.ti -6n
UTerror \- Print user and system error messages, stop with error status set
.ti -6n
UTfree \- Deallocate a block of memory
.ti -6n
UTgetOption \- Decode command line options and arguments
.ti -6n
UThalt \- Print an error message, stop with error status set
.ti -6n
UTmalloc \- Allocate a block of memory
.ti -6n
UTrealloc \- Reallocate a block of memory
.ti -6n
UTsetProg \- Set the program name for messages
.ti -6n
UTsysMsg \- Print user and system warning messages
.ti -6n
UTuserName \- Get the user name and host name
.ti -6n
UTwarn \- Print a warning message
.in -6n
.SH Vector routines
.in +6n
.ti -6n
VRdAdd \- Element-by-element sum of two double arrays
.ti -6n
VRdCopy \- Copy an array of doubles
.ti -6n
VRdCorSym \- Find the correlation coefficient for a vector and its reversal
.ti -6n
VRdDotProd \- Dot product of two double arrays
.ti -6n
VRdLinInc \- Generate a linearly spaced array of values
.ti -6n
VRdMult \- Element-by-element product of two double arrays
.ti -6n
VRdPrint \- Print a double array along with a header text
.ti -6n
VRdRFFTMSq \- Calculate the magnitude squared spectrum for the DFT of a real sequence
.ti -6n
VRdScale \- Multiply each element of a double array by a scalar value
.ti -6n
VRdSet \- Set each element in an array of doubles to a given value
.ti -6n
VRdShift \- Shift the elements of an array of doubles
.ti -6n
VRdSymPart \- Find the symmetric or anti-symmetric part of a vector
.ti -6n
VRdZero \- Zero an array of doubles
.ti -6n
VRfAdd \- Element-by-element sum of two float arrays
.ti -6n
VRfAmpldB \- Convert each value in an array of amplitudes to a decibel value
.ti -6n
VRfCopy \- Copy an array of floats
.ti -6n
VRfCorSym \- Find the correlation coefficient for a vector and its reversal
.ti -6n
VRfDiff \- Element-by-element difference of two float arrays
.ti -6n
VRfDiffSq \- Find the sum of squares of the differences for two float arrays
.ti -6n
VRfDotProd \- Dot product of two float arrays (double result)
.ti -6n
VRfLog10 \- Find the logarithm (base 10) of each element of an array
.ti -6n
VRfMax \- Return the maximum value in a float array
.ti -6n
VRfMin \- Return the minimum value in a float array
.ti -6n
VRfMult \- Element-by-element product of two float arrays
.ti -6n
VRfPow10 \- Find 10 raised to the power of each element of an array
.ti -6n
VRfPrint \- Print a float array along with a header text
.ti -6n
VRfRev \- Reverse the order of the elements of an array
.ti -6n
VRfScale \- Multiply each element of a float array by a scalar value
.ti -6n
VRfSet \- Set each element in an array of floats to a given value
.ti -6n
VRfShift \- Shift the elements of an array of floats
.ti -6n
VRfSum \- Calculate the sum of elements in an array of floats
.ti -6n
VRfZero \- Zero an array of floats
.ti -6n
VRiPrint \- Print an integer array along with a header text
.ti -6n
VRiZero \- Zero an array of ints
.ti -6n
VRlPrint \- Print a long integer array along with a header text
.in -6n

.SH Author / revision
.nf
P. Kabal \- kabal@ECE.McGill.CA
Telecommunications & Signal Processing Laboratory
Department of Electrical & Computer Engineering
McGill University
Montreal, Canada  H3A 2A7

2006-06-06
.fi

.TH FIdWinKaiser 3tsp "TSP (libtsp/FI)"
.SH Routine
.in +4n
.ti -4n
void FIdWinKaiser (double win[], int N, double alpha)
.in -4n
.SH Purpose
.in +4n
.ti -4n
Generate a Kaiser window
.in -4n
.SH Description
A Kaiser window is specified by the following equation in continuous time,
.ft CW
.nf
.ne 3
         0 ,                         x < -1
.fi
.ft P
.PP
.ft CW
.nf
.ne 3
         I0(a sqrt(1 - x^2)
  w(x) = ------------------ ,  -1 <= x <= 1
               I0(a)
.fi
.ft P
.PP
.ft CW
.nf
.ne 3
         0                      1 <  x
.fi
.ft P
This window sits on a pedestal of height 1/I0(a).  The discrete-time window
of length N is obtained by setting x = 2n/(N-1)-1, for 0 <= n < N.
.PP
The parameter a (alpha) determines the shape of the window, with increasing
a giving a larger mainlobe width.  For a=0, the window is a rectangular.  For
a = 5.4414, the window has the same mainlobe width as a Hamming window.
.PP
.in +4n
.ti -4n
Reference:
.in -4n
J. F. Kaiser, "Nonrecursive digital filter design using the I0-sinh window
function", Proc. 1974 IEEE Int. Symp. on Circuits and Syst., pp. 20-23,
April 1974.
.SH Parameters
.in +4n
.ti -4n
<-  double win[]
.br
Array containing the window values
.ti -4n
 -> int N
.br
Number of window values
.ti -4n
 -> double alpha
.br
Window parameter
.in -4n
.SH Author / revision
P. Kabal
/ Revision 1.1  2005/02/01
.SH See Also
libtsp
